{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"EuroLinux About Documentation This is EuroLinux community-driven documentation. We welcome your contributions to EuroLinux! You can: star the repository to show your support contribute via a Pull Request - see How to contribute create requests for a particular topic via Issue Creation on GitHub Info As EuroLinux is in Open Core model there are also additional documentation for our customer that are available at EuroLinux Support Portal . How documentation is organized? Documentation is organized in the following manner: JumpStarts - Installation guides with extras HowTo - How To guides on various topics Release Notes How to contribute We love your input! We value transparent and easy to contribute projects, that's why we choose GitHub. You can contribute to this project with: Proposing a new topic that should be described Discussing the current state of the docs Reporting a bug Submitting a fix We Use GitHub with GitHub Flow. All changes are made through pull requests. Pull requests are the best and well-established way to propose changes. The GitHub Flow that allows us to provide reviews and discussion about documentation/code is described in detail here . Use our specially crafted issue templates: EuroLinux Open Docs issue from a template to contribute a topic you would like to see. If you want to contribute with code (we keep documentation as code), do the following: Fork the repository and create your own branch from master. It would be great if you could test your changes with mkdocs (described in detail in Setup environment locally ) Write/Apply your changes and commit to your branch. Create a pull request! GitHub Labs If you are new to Git VCS (Version Control System) or GitHub, you can visit GitHub Learning Lab , especially First Day on GitHub course . GitHub courses are free, interactive and put stress on practical aspects. Tools We are using mkdocs with mkdocs-material to build and style our documentation. MkDocs site Material for MkDocs site Setup environment locally Because MkDocs is Python based, you need at least these installed to run this documentation locally: python3 (3.6+) pip virtualenv First, let's create a virtualenv, so you don't bloat your system-wide python environment: virtualenv -p /usr/bin/python3 venv Then activate virtualenv Bash: . venv/bin/activate Fish: . venv/bin/activate.fish Now you are ready to install MkDocs and other Python packages: pip install -r requirements.txt After it serving documentation on your host is as easy as running: mkdocs serve To build documentation invoke: mkdocs build It will build documentation and save it into site directory Please don't include site directory in pull requests Because we deploy this documentation with GitHub Pages, the site directory is not gitignored Markdown cheat sheet for this project We created simple cheat sheet for MkDocs markdown syntax with extensions enabled in this project. It can be found here .","title":"EuroLinux"},{"location":"#eurolinux","text":"","title":"EuroLinux"},{"location":"#about-documentation","text":"This is EuroLinux community-driven documentation. We welcome your contributions to EuroLinux! You can: star the repository to show your support contribute via a Pull Request - see How to contribute create requests for a particular topic via Issue Creation on GitHub Info As EuroLinux is in Open Core model there are also additional documentation for our customer that are available at EuroLinux Support Portal .","title":"About Documentation"},{"location":"#how-documentation-is-organized","text":"Documentation is organized in the following manner: JumpStarts - Installation guides with extras HowTo - How To guides on various topics Release Notes","title":"How documentation is organized?"},{"location":"#how-to-contribute","text":"We love your input! We value transparent and easy to contribute projects, that's why we choose GitHub. You can contribute to this project with: Proposing a new topic that should be described Discussing the current state of the docs Reporting a bug Submitting a fix We Use GitHub with GitHub Flow. All changes are made through pull requests. Pull requests are the best and well-established way to propose changes. The GitHub Flow that allows us to provide reviews and discussion about documentation/code is described in detail here . Use our specially crafted issue templates: EuroLinux Open Docs issue from a template to contribute a topic you would like to see. If you want to contribute with code (we keep documentation as code), do the following: Fork the repository and create your own branch from master. It would be great if you could test your changes with mkdocs (described in detail in Setup environment locally ) Write/Apply your changes and commit to your branch. Create a pull request!","title":"How to contribute"},{"location":"#github-labs","text":"If you are new to Git VCS (Version Control System) or GitHub, you can visit GitHub Learning Lab , especially First Day on GitHub course . GitHub courses are free, interactive and put stress on practical aspects.","title":"GitHub Labs"},{"location":"#tools","text":"We are using mkdocs with mkdocs-material to build and style our documentation. MkDocs site Material for MkDocs site","title":"Tools"},{"location":"#setup-environment-locally","text":"Because MkDocs is Python based, you need at least these installed to run this documentation locally: python3 (3.6+) pip virtualenv First, let's create a virtualenv, so you don't bloat your system-wide python environment: virtualenv -p /usr/bin/python3 venv Then activate virtualenv Bash: . venv/bin/activate Fish: . venv/bin/activate.fish Now you are ready to install MkDocs and other Python packages: pip install -r requirements.txt After it serving documentation on your host is as easy as running: mkdocs serve To build documentation invoke: mkdocs build It will build documentation and save it into site directory Please don't include site directory in pull requests Because we deploy this documentation with GitHub Pages, the site directory is not gitignored","title":"Setup environment locally"},{"location":"#markdown-cheat-sheet-for-this-project","text":"We created simple cheat sheet for MkDocs markdown syntax with extensions enabled in this project. It can be found here .","title":"Markdown cheat sheet for this project"},{"location":"HowTo/centos8-eol-solution/","text":"CentOS 8 End of Life - solution Introduction This how-to provides a solution to the problem of CentOS 8 running out of support. With the end of 2021, CentOS ended its life in its stable form and started functioning as CentOS Stream, a development branch for Red Hat\u00ae Enterprise Linux\u00ae. As a result, it stopped receiving proven, stable updates and its use, especially in production environments, became risky. This is a very serious problem for many companies and individuals around the world. So there was an urgent need to find a new source of updates for CentOS in order to keep it in the infrastructure. A complete solution to this problem is support switching, that is, pointing to a new repository from which CentOS will be downloading stable updates. Such a solution is offered by EuroLinux. It is worth mentioning that both CentOS and RHEL and EuroLinux are systems built on the same source code, so they provide the same functionality. They differ mainly in branding. The operation of switching support is simple, reasonably safe and completely reversible. What is very important, it requires neither reinstallation of the system nor the applications installed on it. The process consists of switching the repository, installing the el-release package, updating the system and reinstalling the system packages in-place. After the in-place migration, CentOS will still be usable, even in production environments. All resources used in this tutorial can be found in the additional resources section . The solution A project named eurolinux-migration-scripts has been created. It contains among others a script that will take care of the migration automatically. Here we describe, how to perform the switch successfully. Preparations It's vital that the system be updated to the newest release. Use the following command: sudo yum update -y Running the migration script Then download the latest production-ready release of the project containing the script. Unpack the release, visit the unpacked directory and run the script - usually this will require right-clicking in the current directory, using the 'Open in Terminal' option and running this command: sudo bash migrate2eurolinux.sh Refer to the project's README for additional commands. After the switch Once the migration has finished, it's recommended to reboot your system: sudo reboot Once the system has rebooted, the migration process can be considered complete. In order to quickly verify that it was carried out successfully, we can check the distribution description: cat /etc/el-release As a result we should get a response about the distribution and latest EuroLinux version. Conclusion As you can see, the process is quick and seamless. You can switch the repository for RHEL, Oracle Linux, AlmaLinux, and Rocky Linux the same way. In each case, the process will look almost identical. If you have any questions or concerns, please submit them to the repository linked in the additional resources section . Thank you. Additional resources EuroLinux support switching script GitHub repository Latest production-ready release of the project","title":"CentOS 8 End of Life - solution"},{"location":"HowTo/centos8-eol-solution/#centos-8-end-of-life-solution","text":"","title":"CentOS 8 End of Life - solution"},{"location":"HowTo/centos8-eol-solution/#introduction","text":"This how-to provides a solution to the problem of CentOS 8 running out of support. With the end of 2021, CentOS ended its life in its stable form and started functioning as CentOS Stream, a development branch for Red Hat\u00ae Enterprise Linux\u00ae. As a result, it stopped receiving proven, stable updates and its use, especially in production environments, became risky. This is a very serious problem for many companies and individuals around the world. So there was an urgent need to find a new source of updates for CentOS in order to keep it in the infrastructure. A complete solution to this problem is support switching, that is, pointing to a new repository from which CentOS will be downloading stable updates. Such a solution is offered by EuroLinux. It is worth mentioning that both CentOS and RHEL and EuroLinux are systems built on the same source code, so they provide the same functionality. They differ mainly in branding. The operation of switching support is simple, reasonably safe and completely reversible. What is very important, it requires neither reinstallation of the system nor the applications installed on it. The process consists of switching the repository, installing the el-release package, updating the system and reinstalling the system packages in-place. After the in-place migration, CentOS will still be usable, even in production environments. All resources used in this tutorial can be found in the additional resources section .","title":"Introduction"},{"location":"HowTo/centos8-eol-solution/#the-solution","text":"A project named eurolinux-migration-scripts has been created. It contains among others a script that will take care of the migration automatically. Here we describe, how to perform the switch successfully.","title":"The solution"},{"location":"HowTo/centos8-eol-solution/#preparations","text":"It's vital that the system be updated to the newest release. Use the following command: sudo yum update -y","title":"Preparations"},{"location":"HowTo/centos8-eol-solution/#running-the-migration-script","text":"Then download the latest production-ready release of the project containing the script. Unpack the release, visit the unpacked directory and run the script - usually this will require right-clicking in the current directory, using the 'Open in Terminal' option and running this command: sudo bash migrate2eurolinux.sh Refer to the project's README for additional commands.","title":"Running the migration script"},{"location":"HowTo/centos8-eol-solution/#after-the-switch","text":"Once the migration has finished, it's recommended to reboot your system: sudo reboot Once the system has rebooted, the migration process can be considered complete. In order to quickly verify that it was carried out successfully, we can check the distribution description: cat /etc/el-release As a result we should get a response about the distribution and latest EuroLinux version.","title":"After the switch"},{"location":"HowTo/centos8-eol-solution/#conclusion","text":"As you can see, the process is quick and seamless. You can switch the repository for RHEL, Oracle Linux, AlmaLinux, and Rocky Linux the same way. In each case, the process will look almost identical. If you have any questions or concerns, please submit them to the repository linked in the additional resources section . Thank you.","title":"Conclusion"},{"location":"HowTo/centos8-eol-solution/#additional-resources","text":"EuroLinux support switching script GitHub repository Latest production-ready release of the project","title":"Additional resources"},{"location":"HowTo/create-iso-with-repositories/","text":"How to create ISO file with EuroLinux repositories Creating ISO that contains RPM repositories is a straightforward process. First you have to mirror repositories locally - mirroring is described in Mirror EuroLinux Locally How To . To create an ISO file, you need mkiso command that is part of genisoimage package. You can install it with the following command: sudo yum install -y genisoimage Creating ISO with repositories In the example below, we create ISO from the repositories saved in /repos directory the output is saved to /var/eurolinux-repos.iso . sudo mkisofs -R -J -o /var/eurolinux-repos.iso /repos/ This file could be: locally copied to the machine that will be using it added to ISOs pool of Virtual Machine manager/orchestrator or cloud computing platform of your choice Mounting ISO from local file Mounting local ISO file is as simple as: sudo mount -o loop /PATH/TO/ISO /MOUNT/PATH example: sudo mount -o loop /var/eurolinux-repos.iso /mnt/mirror Mounting ISO from virtual cd-rom device Mounting CD-ROM device is as simple as: sudo mount /dev/DEVICE /MOUNT/PATH The following example has ISO mounted as CD-ROM device /dev/sr0 : sudo mount /dev/sr0 /mnt/mirror Using locally mounted ISO with RPM repositories To use the repositories, that the ISO file provides, create a proper .repo file that resides inside /etc/yum.repos.d/ directory. Here is an example /etc/yum.repos.d/local-iso.repo file for EuroLinux 7 and the ISO image attached to /mnt/mirror directory. [base] name = EuroLinux 7 x86_64 Base baseurl = file:///mnt/mirror/eurolinux-os-7/ enabled = 1 # Disabled gpgcheck, enable if el-release is already installed on your system gpgcheck = 0 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux7 [updates] name = EuroLinux 7 x86_64 Updates baseurl = file:///mnt/mirror/eurolinux-updates-7/ enabled = 1 # Disabled gpgcheck, enable if el-release is already installed on your system gpgcheck = 0 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux7","title":"How to create ISO file with EuroLinux repositories"},{"location":"HowTo/create-iso-with-repositories/#how-to-create-iso-file-with-eurolinux-repositories","text":"Creating ISO that contains RPM repositories is a straightforward process. First you have to mirror repositories locally - mirroring is described in Mirror EuroLinux Locally How To . To create an ISO file, you need mkiso command that is part of genisoimage package. You can install it with the following command: sudo yum install -y genisoimage","title":"How to create ISO file with EuroLinux repositories"},{"location":"HowTo/create-iso-with-repositories/#creating-iso-with-repositories","text":"In the example below, we create ISO from the repositories saved in /repos directory the output is saved to /var/eurolinux-repos.iso . sudo mkisofs -R -J -o /var/eurolinux-repos.iso /repos/ This file could be: locally copied to the machine that will be using it added to ISOs pool of Virtual Machine manager/orchestrator or cloud computing platform of your choice","title":"Creating ISO with repositories"},{"location":"HowTo/create-iso-with-repositories/#mounting-iso-from-local-file","text":"Mounting local ISO file is as simple as: sudo mount -o loop /PATH/TO/ISO /MOUNT/PATH example: sudo mount -o loop /var/eurolinux-repos.iso /mnt/mirror","title":"Mounting ISO from local file"},{"location":"HowTo/create-iso-with-repositories/#mounting-iso-from-virtual-cd-rom-device","text":"Mounting CD-ROM device is as simple as: sudo mount /dev/DEVICE /MOUNT/PATH The following example has ISO mounted as CD-ROM device /dev/sr0 : sudo mount /dev/sr0 /mnt/mirror","title":"Mounting ISO from virtual cd-rom device"},{"location":"HowTo/create-iso-with-repositories/#using-locally-mounted-iso-with-rpm-repositories","text":"To use the repositories, that the ISO file provides, create a proper .repo file that resides inside /etc/yum.repos.d/ directory. Here is an example /etc/yum.repos.d/local-iso.repo file for EuroLinux 7 and the ISO image attached to /mnt/mirror directory. [base] name = EuroLinux 7 x86_64 Base baseurl = file:///mnt/mirror/eurolinux-os-7/ enabled = 1 # Disabled gpgcheck, enable if el-release is already installed on your system gpgcheck = 0 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux7 [updates] name = EuroLinux 7 x86_64 Updates baseurl = file:///mnt/mirror/eurolinux-updates-7/ enabled = 1 # Disabled gpgcheck, enable if el-release is already installed on your system gpgcheck = 0 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux7","title":"Using locally mounted ISO with RPM repositories"},{"location":"HowTo/docker/","text":"Docker How to set up your Docker Community Edition installation. Introduction Use cases Consider the following examples: You want a standardized runtime environment across production, QA and developer scenarios. You want all the runtime environment's specification in a single file, what is easy to manage through version control systems. You want the environment to be reproducible. After all, it's just a matter of building an image from the specification and once it's done it is already self-documented on what steps were taken to cook the final image. You prefer a layered architecture and the ability to cache artifacts across several images and backup & restore the images easily. Why use Docker containers over virtual machines? In short: Docker containers utilize Linux's capabilities such as cgroups and namespaces to create an isolated environment and do not virtualize hardware. Therefore, they are way more lightweight than virtual machines and can be brought up in a large scale in a blink of an eye rather than waiting for a single virtual machine to boot. For more information, take a look at our blog entry on the basics of containerization . System requirements The following operating systems and architectures are covered by this guide: EuroLinux 8 on the x86_64 and aarch64 architecture. EuroLinux 7 on the x86_64 architecture. Make sure the containers you want to run are of the same architecture as your machine. If you need support with installation on the EuroLinux releases this guide does not cover, please create an appropriate ticket. Installation EuroLinux 8 The following steps are based on Docker, Inc. official guide as of 2022.02.01 . We will just use the commands provided as snippets for a quick way of copying & pasting one snippet for a successful installation. The following snippet installs Docker on EuroLinux 8.6. Other releases may work as well, but have not been tested. Once a new EuroLinux release is out, this guide will be updated. Docker installation removes podman and buildah Please note that this operation will replace runc with containerd.io and remove both podman and buildah . sudo yum remove -y docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine which yum-config-manager || sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install -y docker-ce docker-ce-cli containerd.io --allowerasing sudo systemctl enable docker --now EuroLinux 7 EuroLinux provides their own builds of Docker for EuroLinux 7. Please prepare your EuroMan credentials and enable the el-server-7-extras-x86_64 channel first, like so: sudo rhn-channel -u \"$el_euroman_user\" -p \"$el_euroman_password\" -c el-server-7-extras-x86_64 -a Then you are ready to install Docker: sudo yum install -y docker sudo systemctl enable docker --now What's next? EuroLinux provides several Docker images for you to use . They are publicly available and free of charge. Take a look at our entry EuroLinux docker images are now available for more information. Additionally, we provide a quick guide for having the images up and running in no time .","title":"Docker"},{"location":"HowTo/docker/#docker","text":"How to set up your Docker Community Edition installation.","title":"Docker"},{"location":"HowTo/docker/#introduction","text":"","title":"Introduction"},{"location":"HowTo/docker/#use-cases","text":"Consider the following examples: You want a standardized runtime environment across production, QA and developer scenarios. You want all the runtime environment's specification in a single file, what is easy to manage through version control systems. You want the environment to be reproducible. After all, it's just a matter of building an image from the specification and once it's done it is already self-documented on what steps were taken to cook the final image. You prefer a layered architecture and the ability to cache artifacts across several images and backup & restore the images easily.","title":"Use cases"},{"location":"HowTo/docker/#why-use-docker-containers-over-virtual-machines","text":"In short: Docker containers utilize Linux's capabilities such as cgroups and namespaces to create an isolated environment and do not virtualize hardware. Therefore, they are way more lightweight than virtual machines and can be brought up in a large scale in a blink of an eye rather than waiting for a single virtual machine to boot. For more information, take a look at our blog entry on the basics of containerization .","title":"Why use Docker containers over virtual machines?"},{"location":"HowTo/docker/#system-requirements","text":"The following operating systems and architectures are covered by this guide: EuroLinux 8 on the x86_64 and aarch64 architecture. EuroLinux 7 on the x86_64 architecture. Make sure the containers you want to run are of the same architecture as your machine. If you need support with installation on the EuroLinux releases this guide does not cover, please create an appropriate ticket.","title":"System requirements"},{"location":"HowTo/docker/#installation","text":"","title":"Installation"},{"location":"HowTo/docker/#eurolinux-8","text":"The following steps are based on Docker, Inc. official guide as of 2022.02.01 . We will just use the commands provided as snippets for a quick way of copying & pasting one snippet for a successful installation. The following snippet installs Docker on EuroLinux 8.6. Other releases may work as well, but have not been tested. Once a new EuroLinux release is out, this guide will be updated. Docker installation removes podman and buildah Please note that this operation will replace runc with containerd.io and remove both podman and buildah . sudo yum remove -y docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine which yum-config-manager || sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install -y docker-ce docker-ce-cli containerd.io --allowerasing sudo systemctl enable docker --now","title":"EuroLinux 8"},{"location":"HowTo/docker/#eurolinux-7","text":"EuroLinux provides their own builds of Docker for EuroLinux 7. Please prepare your EuroMan credentials and enable the el-server-7-extras-x86_64 channel first, like so: sudo rhn-channel -u \"$el_euroman_user\" -p \"$el_euroman_password\" -c el-server-7-extras-x86_64 -a Then you are ready to install Docker: sudo yum install -y docker sudo systemctl enable docker --now","title":"EuroLinux 7"},{"location":"HowTo/docker/#whats-next","text":"EuroLinux provides several Docker images for you to use . They are publicly available and free of charge. Take a look at our entry EuroLinux docker images are now available for more information. Additionally, we provide a quick guide for having the images up and running in no time .","title":"What's next?"},{"location":"HowTo/els/","text":"Migrate to EuroELS This guide is about how to switch your repositories to the ones provided by EuroLinux Extended Life Support. Introduction Enterprise Linuxes 6 ended their life a few years ago. Still, security updates can be provided by several vendors for a fee. That's where EuroELS comes in. You can extend the lifecycle of your Enterprise Linux up to the half of 2024. How to migrate First, make sure that your system is up to date. It should be CentOS 6.10 (minor version 10). su yum update -y Second, in accordance with good practice, we recommend backing up your machine. Please download the migration script available at this location: https://github.com/EuroLinux/eurolinux-migration-scripts.git wget https://github.com/EuroLinux/eurolinux-migration-scripts/archive/refs/heads/el6-only-switch-repos.zip Please unpack the downloaded file: unzip el6-only-switch-repos.zip and navigate to the script's directory: cd eurolinux-migration-scripts-el6-only-switch-repos To start the switching process, just run the script with administrator privileges: ./migrate2eurolinux.sh Once the command is executed, we'll get a recommendation to make a backup. Type YES to make the script continue. The script will ask us about our EuroMan credentials. We provide our login and password when asked. The repository switch has completed successfully. We can now update our Enterprise Linux 6 with the command: yum update -y","title":"Migrate to EuroELS"},{"location":"HowTo/els/#migrate-to-euroels","text":"This guide is about how to switch your repositories to the ones provided by EuroLinux Extended Life Support.","title":"Migrate to EuroELS"},{"location":"HowTo/els/#introduction","text":"Enterprise Linuxes 6 ended their life a few years ago. Still, security updates can be provided by several vendors for a fee. That's where EuroELS comes in. You can extend the lifecycle of your Enterprise Linux up to the half of 2024.","title":"Introduction"},{"location":"HowTo/els/#how-to-migrate","text":"First, make sure that your system is up to date. It should be CentOS 6.10 (minor version 10). su yum update -y Second, in accordance with good practice, we recommend backing up your machine. Please download the migration script available at this location: https://github.com/EuroLinux/eurolinux-migration-scripts.git wget https://github.com/EuroLinux/eurolinux-migration-scripts/archive/refs/heads/el6-only-switch-repos.zip Please unpack the downloaded file: unzip el6-only-switch-repos.zip and navigate to the script's directory: cd eurolinux-migration-scripts-el6-only-switch-repos To start the switching process, just run the script with administrator privileges: ./migrate2eurolinux.sh Once the command is executed, we'll get a recommendation to make a backup. Type YES to make the script continue. The script will ask us about our EuroMan credentials. We provide our login and password when asked. The repository switch has completed successfully. We can now update our Enterprise Linux 6 with the command: yum update -y","title":"How to migrate"},{"location":"HowTo/ha-rs-enable-repository/","text":"How to install High Availability and Resilient Storage in EuroLinux 8 For EuroLinux 8.4, you should update the el-release package. The newer version has resilient-storage and high-availability repositories saved in the /etc/yum.repos.d/certify.repo file. sudo yum update -y el-release 'certify-' prefix Since EuroLinux 8.6 the 'certify-' prefixes in repo URLs and names are no longer used. These URLs are and will be kept as the symbolic link for backward compatibility. The certify.repo file will be used for the whole EuroLinux 8 lifecycle. If you cannot update the release package because the new el-release package errata is not security-related, you might manually add the following to the /etc/yum.repos.d/certify.repo [high-availability] name = EuroLinux High Availability baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/HighAvailability/os enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 [resilient-storage] name = EuroLinux Resilient Storage baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/ResilientStorage/os enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 Enabling repositories permanently Enabling High Availability and Resilient Storage repository manually Use your favourite text editor and change enabled=0 to enabled=1 for high-availability and resilient-storage repositories. Before edit: [resilient-storage] name = EuroLinux Resilient Storage baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/ResilientStorage/os enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 After Edit: [resilient-storage] name = EuroLinux Resilient Storage baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/ResilientStorage/os enabled=1 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 You should do the identical changes for high-availability repositories. Enabling High Availability and Resilient Storage repository with yum-config-manager The yum-config-manager command is part of the yum-utils package. Firstly let's install that package: sudo yum install -y yum-utils Then enable Resilient Storage and High Availability repository with the following command: sudo yum-config-manager --enable high-availability sudo yum-config-manager --enable resilient-storage Installing HA and/or Resilient Storage Both High Availability and Resilient Storage have rpm groups, so installing them is trivial. To install the High Availability add-on, invoke the following command: sudo yum install -y @ha To install the Resilient Storage add-on, invoke the following command: sudo yum install -y @resilient-storage Basic HA configuration Configuring firewalld Before configuring a firewall, it's appropriate to check if firewalld is actually running. The standard systemctl is-active command is one of the options. systemctl is-active firewalld For a system that has firewalld started and enabled, you might use good enough configuration with: sudo firewall-cmd --permanent --add-service=high-availability sudo firewall-cmd --reload Starting pcsd After configuring a firewall, you can start and enable pcsd (PCS GUI and remote configuration interface) with the following commands: sudo systemctl start pcsd.service sudo systemctl enable pcsd.service To make a very basic test of the pcsd installation, we recommend setting hacluster user password. As root user, you can, for example invoke: # echo \"secret-pass\" | passwd hacluster --stdin Then login into Pacemaker/Corosync configuration. Use the machine address on port 2224 (example: https://MACHINE_IP:2224 ) in your browser. The username is hacluster with password you set in previous step. HTTPS Required Web browser like Firefox and other programs like cURL will report \"Connection reset by peer\" or \"The connection was reset\" when connecting with cleartext HTTP. [root@test1 pcsd]# curl localhost:2224 curl: (56) Recv failure: Connection reset by peer From this point you can freely configure High Availability and Resilient Storage. We recommend using upstream documentation provided in Additional Links below. Additional links Red Hat Documentation - Configuring and Managing High Availability Clusters Red Hat Documentation - Configuring GFS2 File System","title":"How to install High Availability and Resilient Storage in EuroLinux 8"},{"location":"HowTo/ha-rs-enable-repository/#how-to-install-high-availability-and-resilient-storage-in-eurolinux-8","text":"For EuroLinux 8.4, you should update the el-release package. The newer version has resilient-storage and high-availability repositories saved in the /etc/yum.repos.d/certify.repo file. sudo yum update -y el-release 'certify-' prefix Since EuroLinux 8.6 the 'certify-' prefixes in repo URLs and names are no longer used. These URLs are and will be kept as the symbolic link for backward compatibility. The certify.repo file will be used for the whole EuroLinux 8 lifecycle. If you cannot update the release package because the new el-release package errata is not security-related, you might manually add the following to the /etc/yum.repos.d/certify.repo [high-availability] name = EuroLinux High Availability baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/HighAvailability/os enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 [resilient-storage] name = EuroLinux Resilient Storage baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/ResilientStorage/os enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8","title":"How to install High Availability and Resilient Storage in EuroLinux 8"},{"location":"HowTo/ha-rs-enable-repository/#enabling-repositories-permanently","text":"","title":"Enabling repositories permanently"},{"location":"HowTo/ha-rs-enable-repository/#enabling-high-availability-and-resilient-storage-repository-manually","text":"Use your favourite text editor and change enabled=0 to enabled=1 for high-availability and resilient-storage repositories. Before edit: [resilient-storage] name = EuroLinux Resilient Storage baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/ResilientStorage/os enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 After Edit: [resilient-storage] name = EuroLinux Resilient Storage baseurl=https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/ResilientStorage/os enabled=1 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 You should do the identical changes for high-availability repositories.","title":"Enabling High Availability and Resilient Storage repository manually"},{"location":"HowTo/ha-rs-enable-repository/#enabling-high-availability-and-resilient-storage-repository-with-yum-config-manager","text":"The yum-config-manager command is part of the yum-utils package. Firstly let's install that package: sudo yum install -y yum-utils Then enable Resilient Storage and High Availability repository with the following command: sudo yum-config-manager --enable high-availability sudo yum-config-manager --enable resilient-storage","title":"Enabling High Availability and Resilient Storage repository with yum-config-manager"},{"location":"HowTo/ha-rs-enable-repository/#installing-ha-andor-resilient-storage","text":"Both High Availability and Resilient Storage have rpm groups, so installing them is trivial. To install the High Availability add-on, invoke the following command: sudo yum install -y @ha To install the Resilient Storage add-on, invoke the following command: sudo yum install -y @resilient-storage","title":"Installing HA and/or Resilient Storage"},{"location":"HowTo/ha-rs-enable-repository/#basic-ha-configuration","text":"","title":"Basic HA configuration"},{"location":"HowTo/ha-rs-enable-repository/#configuring-firewalld","text":"Before configuring a firewall, it's appropriate to check if firewalld is actually running. The standard systemctl is-active command is one of the options. systemctl is-active firewalld For a system that has firewalld started and enabled, you might use good enough configuration with: sudo firewall-cmd --permanent --add-service=high-availability sudo firewall-cmd --reload","title":"Configuring firewalld"},{"location":"HowTo/ha-rs-enable-repository/#starting-pcsd","text":"After configuring a firewall, you can start and enable pcsd (PCS GUI and remote configuration interface) with the following commands: sudo systemctl start pcsd.service sudo systemctl enable pcsd.service To make a very basic test of the pcsd installation, we recommend setting hacluster user password. As root user, you can, for example invoke: # echo \"secret-pass\" | passwd hacluster --stdin Then login into Pacemaker/Corosync configuration. Use the machine address on port 2224 (example: https://MACHINE_IP:2224 ) in your browser. The username is hacluster with password you set in previous step. HTTPS Required Web browser like Firefox and other programs like cURL will report \"Connection reset by peer\" or \"The connection was reset\" when connecting with cleartext HTTP. [root@test1 pcsd]# curl localhost:2224 curl: (56) Recv failure: Connection reset by peer From this point you can freely configure High Availability and Resilient Storage. We recommend using upstream documentation provided in Additional Links below.","title":"Starting pcsd"},{"location":"HowTo/ha-rs-enable-repository/#additional-links","text":"Red Hat Documentation - Configuring and Managing High Availability Clusters Red Hat Documentation - Configuring GFS2 File System","title":"Additional links"},{"location":"HowTo/install-epel-on-eurolinux/","text":"How to Install and Enable EPEL repository on EuroLinux 8 EPEL (Extra Packages for Enterprise Linux) repository is one of the most popular third-party repositories for the Enterprise Linux family. From the 4th November EuroLinux team included the original epel-release package from EPEL in the BaseOS repo. It was the most voted small quality of life change during our first community meeting. The package is re-signed with a EuroLinux GPG key, so there is no need to accept an external key to install this particular package. The package version will be checked and updated if necessary during minor releases . EPEL is an external repository that is community supported As a company, we cannot provide proper care in terms of security, quality, support and lifecycle standards on a third-party repository. Nevertheless, the EPEL repository has a great history of community support. Installing EPEL on EuroLinux Installing EPEL on EuroLinux 8 and EuroLinux 7 is as simple as: sudo yum install -y epel-release EPEL is enabled by default The base EPEL repository is enabled by default for modular (EuroLinux 8) and non-modular packages. You can enable debuginfo and source packages in respective /etc/yum.repos.d/epel*.repo file. From this moment, you can install and then use all EPEL goodies like htop , wine or createrepo .","title":"How to Install and Enable EPEL repository on EuroLinux 8"},{"location":"HowTo/install-epel-on-eurolinux/#how-to-install-and-enable-epel-repository-on-eurolinux-8","text":"EPEL (Extra Packages for Enterprise Linux) repository is one of the most popular third-party repositories for the Enterprise Linux family. From the 4th November EuroLinux team included the original epel-release package from EPEL in the BaseOS repo. It was the most voted small quality of life change during our first community meeting. The package is re-signed with a EuroLinux GPG key, so there is no need to accept an external key to install this particular package. The package version will be checked and updated if necessary during minor releases . EPEL is an external repository that is community supported As a company, we cannot provide proper care in terms of security, quality, support and lifecycle standards on a third-party repository. Nevertheless, the EPEL repository has a great history of community support.","title":"How to Install and Enable EPEL repository on EuroLinux 8"},{"location":"HowTo/install-epel-on-eurolinux/#installing-epel-on-eurolinux","text":"Installing EPEL on EuroLinux 8 and EuroLinux 7 is as simple as: sudo yum install -y epel-release EPEL is enabled by default The base EPEL repository is enabled by default for modular (EuroLinux 8) and non-modular packages. You can enable debuginfo and source packages in respective /etc/yum.repos.d/epel*.repo file. From this moment, you can install and then use all EPEL goodies like htop , wine or createrepo .","title":"Installing EPEL on EuroLinux"},{"location":"HowTo/mirror-eurolinux-locally/","text":"How to set up internal EuroLinux RPM mirror This short how-to instructs how to set up your own internal EuroLinux mirror. External (publicly available) mirrors should not be set up this way. System requirements Internet connection for sync server is required The firewall must allow connection to EuroLinux servers For each version of EuroLinux, you need about 80 GB of storage You have to install utilities like reposync and createrepo. The following command will work on an Enterprise Linux 7 and 8: # --skip-broken because depending on the version not all packages might be present sudo yum install -y createrepo_c createrepo yum-utils dnf-utils --skip-broken Mirroring EuroLinux 9 Making a local mirrors for EuroLinux 8 and EuroLinux 9 is simple because: repositories are open reposync can pull repository metadata, erratas, and modules files automatically. Use Enterprise Linux 9 These instructions have been tested to work properly on Enterprise Linux 9 and Enterprise Linux 8. First, let's create the directory where mirroring configuration will reside: sudo mkdir -p /etc/yum-mirror-config Then, let's create configuration file for EuroLinux 9 mirroring /etc/yum-mirror-config/mirror_yum_el9.conf with the contents: [main] cachedir = /var/cache/yum/mirror/$basearch/$releasever keepcache = 0 debuglevel = 2 logfile = /var/log/mirror-yum-el9.log plugins = 1 exactarch = 0 obsoletes = 0 reposdir = /dev/null [baseos] name = EuroLinux BaseOS baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/BaseOS/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux9 skip_if_unavailable = 1 [appstream] name = EuroLinux AppStream baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/AppStream/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux9 skip_if_unavailable = 1 [crb] name = EuroLinux CRB baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/CRB/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux9 skip_if_unavailable = 1 Then invoke the command reposync with the following arguments: reposync --downloadcomps --download-metadata -c /etc/yum-mirror-config/mirror_yum_el9.conf -p /repos Mirroring EuroLinux 8 Making a local mirror for EuroLinux 8 and EuroLinux 9 is simple because: repositories are open reposync can pull repository metadata, erratas, and modules files automatically. Use Enterprise Linux 8 These instructions have been tested to work properly on Enterprise Linux 8. While everything may work well, it's not recommended to use other versions. First, let's create the file /etc/yum-mirror-config/mirror_yum.conf with the contents: [main] cachedir = /var/cache/yum/mirror/$basearch/$releasever keepcache = 0 debuglevel = 2 logfile = /var/log/mirror-yum.log plugins = 1 exactarch = 0 obsoletes = 0 reposdir = /dev/null [baseos] name = EuroLinux BaseOS baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/BaseOS/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 skip_if_unavailable = 1 [appstream] name = EuroLinux AppStream baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/AppStream/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 skip_if_unavailable = 1 [powertools] name = EuroLinux PowerTools baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/PowerTools/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 skip_if_unavailable = 1 Then invoke the command reposync with the following arguments: reposync --downloadcomps --download-metadata -c /etc/yum-mirror-config/mirror_yum.conf -p /repos Mirroring EuroLinux 7 Use Enterprise Linux 7 These instructions have been tested to work properly on Enterprise Linux 7. While everything may work well, it's not recommended to use other versions. The official way EuroLinux 7 is not open-core ; therefore, only organizations with a proper license (EuroMan or Golden Key) can mirror it freely. We know We are well aware that it is possible to mirror repos even with a single license. You can read about that below. The official way to mirror EuroLinux repositories is the following: You need a proper subscription, like EuroMan or Golden Key EuroLinux engineer will provide you with SSL certificates that we will name repo.key and repo.crt and CA that we will name ca.crt Create the directory /etc/yum-mirror-config/ . With the repokeys residing in that directory, create the file /etc/yum-mirror-config/mirror_yum.conf with the contents: [main] cachedir = /var/cache/yum/mirror/$basearch/$releasever keepcache = 0 debuglevel = 2 logfile = /var/log/mirror-yum.log exactarch = 0 obsoletes = 0 gpgcheck = 0 plugins = 0 reposdir = /dev/null [eurolinux-os-7] name = el7_x86_64_os baseurl = https://cdn.euro-linux.com/dist/eurolinux/server/7/x86_64/os/ sslclientkey = /etc/yum-mirror-config/repo.key sslclientcrt = /etc/yum-mirror-config/repo.crt sslcacert = /etc/yum-mirror-config/ca.crt [eurolinux-updates-7] name = el7_x86_64_updates baseurl = https://cdn.euro-linux.com/dist/eurolinux/server/7/x86_64/updates/ sslclientkey = /etc/yum-mirror-config/repo.key sslclientcrt = /etc/yum-mirror-config/repo.crt sslcacert = /etc/yum-mirror-config/ca.crt Then invoke the command reposync with the following arguments: reposync -d -m --download-metadata -c /etc/yum-mirror-config/mirror_yum.conf -p /repos When the download finishes, the next step is to create repodata and enable groups. cd /repos/eurolinux-os-7/ ; createrepo . -g comps.xml cd /repos/eurolinux-updates-7/ ; createrepo . -g comps.xml Info Enabling updateinfo (erratas information) is a little bit tricky, because firstly you have to find the newest updateinfo, unpack it, then invoke modifyrepo script. It can be automated with the script below. REPO_DIR = /repos/eurolinux-os-7/ unset -v LAST_UI # finding the newest file for file in \" $REPO_DIR \" /*updateinfo.xml.gz ; do [[ \" $file \" -nt \" $LAST_UI \" ]] && LAST_UI = $file done # unpacking to updateinfo.xml file sudo gunzip -c \" $LAST_UI \" > \" $REPO_DIR /updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" || modifyrepo \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" REPO_DIR = /repos/eurolinux-updates-7/ unset -v LAST_UI for file in \" $REPO_DIR \" /*updateinfo.xml.gz ; do [[ $file -nt $LAST_UI ]] && LAST_UI = $file done sudo gunzip -c \" $LAST_UI \" > \" $REPO_DIR /updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" || modifyrepo \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" The unsupported way There is also the possibility to mirror EuroLinux repositories even with a single or even test subscription. True Product \u2013 Real Support \u2013 Fair Price We are faithful to our values. We also know that it's always possible to cheat and not play fair. Please be aware that during support inqury, we might check if your system is registered and supported. To this day, we always had pleasure to work with honest companies - please don't ruin that. Mirroring other distros The instruction allows cloning other distros, including paid ones. If you want to mirror paid Linux distribution, note that this might breach the license/license agreement. You can mirror EuroLinux or other Enterprise Linux repositories with the following step: Register your system with rhn_register command for EuroLinux or another way to mirror another system repositories. Then run the following snippet as root: reposync -d -m --download-metadata --plugins -r el-server-7-x86_64 -p /repos/ # recreating repodata and updateinfo REPO_DIR = /repos/el-server-7-x86_64/ cd /repos/el-server-7-x86_64/ ; createrepo . -g comps.xml unset -v LAST_UI for file in \" $REPO_DIR \" /*updateinfo.xml.gz ; do [[ $file -nt $LAST_UI ]] && LAST_UI = $file done sudo gunzip -c \" $LAST_UI \" > \" $REPO_DIR /updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" || modifyrepo \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" Mirroring EuroLinux 6 ELS First, register your system to EuroLinux EuroMan with the migration scripts - use the el6-only-switch-repos branch for this. Once the system has been registered and is receiving EL6 ELS updates, you can mirror the ELS packages with the following commands. Run them as root: reposync -d -m --download-metadata --plugins -r els-6-x86_64 -p /repos/ # recreating repodata and updateinfo REPO_DIR=/repos/els-6-x86_64/ cd /repos/els-6-x86_64/; createrepo . -g comps.xml unset -v LAST_UI for file in \"$REPO_DIR\"/*updateinfo.xml.gz; do [[ $file -nt $LAST_UI ]] && LAST_UI=$file done sudo gunzip -c \"$LAST_UI\" > \"$REPO_DIR/updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \"$REPO_DIR/updateinfo.xml\" \"$REPO_DIR/repodata\" || modifyrepo \"$REPO_DIR/updateinfo.xml\" \"$REPO_DIR/repodata\"","title":"How to set up internal EuroLinux RPM mirror"},{"location":"HowTo/mirror-eurolinux-locally/#how-to-set-up-internal-eurolinux-rpm-mirror","text":"This short how-to instructs how to set up your own internal EuroLinux mirror. External (publicly available) mirrors should not be set up this way.","title":"How to set up internal EuroLinux RPM mirror"},{"location":"HowTo/mirror-eurolinux-locally/#system-requirements","text":"Internet connection for sync server is required The firewall must allow connection to EuroLinux servers For each version of EuroLinux, you need about 80 GB of storage You have to install utilities like reposync and createrepo. The following command will work on an Enterprise Linux 7 and 8: # --skip-broken because depending on the version not all packages might be present sudo yum install -y createrepo_c createrepo yum-utils dnf-utils --skip-broken","title":"System requirements"},{"location":"HowTo/mirror-eurolinux-locally/#mirroring-eurolinux-9","text":"Making a local mirrors for EuroLinux 8 and EuroLinux 9 is simple because: repositories are open reposync can pull repository metadata, erratas, and modules files automatically. Use Enterprise Linux 9 These instructions have been tested to work properly on Enterprise Linux 9 and Enterprise Linux 8. First, let's create the directory where mirroring configuration will reside: sudo mkdir -p /etc/yum-mirror-config Then, let's create configuration file for EuroLinux 9 mirroring /etc/yum-mirror-config/mirror_yum_el9.conf with the contents: [main] cachedir = /var/cache/yum/mirror/$basearch/$releasever keepcache = 0 debuglevel = 2 logfile = /var/log/mirror-yum-el9.log plugins = 1 exactarch = 0 obsoletes = 0 reposdir = /dev/null [baseos] name = EuroLinux BaseOS baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/BaseOS/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux9 skip_if_unavailable = 1 [appstream] name = EuroLinux AppStream baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/AppStream/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux9 skip_if_unavailable = 1 [crb] name = EuroLinux CRB baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/CRB/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux9 skip_if_unavailable = 1 Then invoke the command reposync with the following arguments: reposync --downloadcomps --download-metadata -c /etc/yum-mirror-config/mirror_yum_el9.conf -p /repos","title":"Mirroring EuroLinux 9"},{"location":"HowTo/mirror-eurolinux-locally/#mirroring-eurolinux-8","text":"Making a local mirror for EuroLinux 8 and EuroLinux 9 is simple because: repositories are open reposync can pull repository metadata, erratas, and modules files automatically. Use Enterprise Linux 8 These instructions have been tested to work properly on Enterprise Linux 8. While everything may work well, it's not recommended to use other versions. First, let's create the file /etc/yum-mirror-config/mirror_yum.conf with the contents: [main] cachedir = /var/cache/yum/mirror/$basearch/$releasever keepcache = 0 debuglevel = 2 logfile = /var/log/mirror-yum.log plugins = 1 exactarch = 0 obsoletes = 0 reposdir = /dev/null [baseos] name = EuroLinux BaseOS baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/BaseOS/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 skip_if_unavailable = 1 [appstream] name = EuroLinux AppStream baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/AppStream/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 skip_if_unavailable = 1 [powertools] name = EuroLinux PowerTools baseurl = https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/PowerTools/os enabled = 1 gpgcheck = 1 gpgkey = file:///etc/pki/rpm-gpg/RPM-GPG-KEY-eurolinux8 skip_if_unavailable = 1 Then invoke the command reposync with the following arguments: reposync --downloadcomps --download-metadata -c /etc/yum-mirror-config/mirror_yum.conf -p /repos","title":"Mirroring EuroLinux 8"},{"location":"HowTo/mirror-eurolinux-locally/#mirroring-eurolinux-7","text":"Use Enterprise Linux 7 These instructions have been tested to work properly on Enterprise Linux 7. While everything may work well, it's not recommended to use other versions.","title":"Mirroring EuroLinux 7"},{"location":"HowTo/mirror-eurolinux-locally/#the-official-way","text":"EuroLinux 7 is not open-core ; therefore, only organizations with a proper license (EuroMan or Golden Key) can mirror it freely. We know We are well aware that it is possible to mirror repos even with a single license. You can read about that below. The official way to mirror EuroLinux repositories is the following: You need a proper subscription, like EuroMan or Golden Key EuroLinux engineer will provide you with SSL certificates that we will name repo.key and repo.crt and CA that we will name ca.crt Create the directory /etc/yum-mirror-config/ . With the repokeys residing in that directory, create the file /etc/yum-mirror-config/mirror_yum.conf with the contents: [main] cachedir = /var/cache/yum/mirror/$basearch/$releasever keepcache = 0 debuglevel = 2 logfile = /var/log/mirror-yum.log exactarch = 0 obsoletes = 0 gpgcheck = 0 plugins = 0 reposdir = /dev/null [eurolinux-os-7] name = el7_x86_64_os baseurl = https://cdn.euro-linux.com/dist/eurolinux/server/7/x86_64/os/ sslclientkey = /etc/yum-mirror-config/repo.key sslclientcrt = /etc/yum-mirror-config/repo.crt sslcacert = /etc/yum-mirror-config/ca.crt [eurolinux-updates-7] name = el7_x86_64_updates baseurl = https://cdn.euro-linux.com/dist/eurolinux/server/7/x86_64/updates/ sslclientkey = /etc/yum-mirror-config/repo.key sslclientcrt = /etc/yum-mirror-config/repo.crt sslcacert = /etc/yum-mirror-config/ca.crt Then invoke the command reposync with the following arguments: reposync -d -m --download-metadata -c /etc/yum-mirror-config/mirror_yum.conf -p /repos When the download finishes, the next step is to create repodata and enable groups. cd /repos/eurolinux-os-7/ ; createrepo . -g comps.xml cd /repos/eurolinux-updates-7/ ; createrepo . -g comps.xml Info Enabling updateinfo (erratas information) is a little bit tricky, because firstly you have to find the newest updateinfo, unpack it, then invoke modifyrepo script. It can be automated with the script below. REPO_DIR = /repos/eurolinux-os-7/ unset -v LAST_UI # finding the newest file for file in \" $REPO_DIR \" /*updateinfo.xml.gz ; do [[ \" $file \" -nt \" $LAST_UI \" ]] && LAST_UI = $file done # unpacking to updateinfo.xml file sudo gunzip -c \" $LAST_UI \" > \" $REPO_DIR /updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" || modifyrepo \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" REPO_DIR = /repos/eurolinux-updates-7/ unset -v LAST_UI for file in \" $REPO_DIR \" /*updateinfo.xml.gz ; do [[ $file -nt $LAST_UI ]] && LAST_UI = $file done sudo gunzip -c \" $LAST_UI \" > \" $REPO_DIR /updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" || modifyrepo \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\"","title":"The official way"},{"location":"HowTo/mirror-eurolinux-locally/#the-unsupported-way","text":"There is also the possibility to mirror EuroLinux repositories even with a single or even test subscription. True Product \u2013 Real Support \u2013 Fair Price We are faithful to our values. We also know that it's always possible to cheat and not play fair. Please be aware that during support inqury, we might check if your system is registered and supported. To this day, we always had pleasure to work with honest companies - please don't ruin that. Mirroring other distros The instruction allows cloning other distros, including paid ones. If you want to mirror paid Linux distribution, note that this might breach the license/license agreement. You can mirror EuroLinux or other Enterprise Linux repositories with the following step: Register your system with rhn_register command for EuroLinux or another way to mirror another system repositories. Then run the following snippet as root: reposync -d -m --download-metadata --plugins -r el-server-7-x86_64 -p /repos/ # recreating repodata and updateinfo REPO_DIR = /repos/el-server-7-x86_64/ cd /repos/el-server-7-x86_64/ ; createrepo . -g comps.xml unset -v LAST_UI for file in \" $REPO_DIR \" /*updateinfo.xml.gz ; do [[ $file -nt $LAST_UI ]] && LAST_UI = $file done sudo gunzip -c \" $LAST_UI \" > \" $REPO_DIR /updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\" || modifyrepo \" $REPO_DIR /updateinfo.xml\" \" $REPO_DIR /repodata\"","title":"The unsupported way"},{"location":"HowTo/mirror-eurolinux-locally/#mirroring-eurolinux-6-els","text":"First, register your system to EuroLinux EuroMan with the migration scripts - use the el6-only-switch-repos branch for this. Once the system has been registered and is receiving EL6 ELS updates, you can mirror the ELS packages with the following commands. Run them as root: reposync -d -m --download-metadata --plugins -r els-6-x86_64 -p /repos/ # recreating repodata and updateinfo REPO_DIR=/repos/els-6-x86_64/ cd /repos/els-6-x86_64/; createrepo . -g comps.xml unset -v LAST_UI for file in \"$REPO_DIR\"/*updateinfo.xml.gz; do [[ $file -nt $LAST_UI ]] && LAST_UI=$file done sudo gunzip -c \"$LAST_UI\" > \"$REPO_DIR/updateinfo.xml\" # Depending on the system - some has modifrepo.py script some has \"normal\" command /usr/share/createrepo/modifyrepo.py \"$REPO_DIR/updateinfo.xml\" \"$REPO_DIR/repodata\" || modifyrepo \"$REPO_DIR/updateinfo.xml\" \"$REPO_DIR/repodata\"","title":"Mirroring EuroLinux 6 ELS"},{"location":"HowTo/vagrant-with-libvirt/","text":"Vagrant with vagrant-libvirt plugin on Enterprise Linux 8 Introduction This guide covers the installation of libvirt and related tools along with the Vagrant plugin that allows using libvirt as a provider. This has been tested on a clean installation of EuroLinux 8.5 - only Vagrant has been installed already as described in Vagrant jumpstart . Terminology QEMU - a generic machine emulator KVM - a virtualisation solution that is native to Linux. Used by QEMU to achieve near-native performances by executing the guest code directly on the host CPU libvirt - a management suite for several hypervisors While libvirt can manage many virtualisation solutions, in the context of this document libvirt refers to: QEMU with KVM managed by libvirt . Why prefer libvirt over providers such as VirtualBox? As mentioned, KVM is a native virtualisation solution to Linux. This means a significant performance boost when compared to other providers at the slight cost of portability - if you run Linux only, then this is your solution of choice! If you have never used libvirt before and just heard about it in this how-to, there are several goodies worth mentioning. As an example unrelated to Vagrant: Virt-Manager allows you to get a similar GUI experience out of KVM as that of e.g. VirtualBox, it is fully Free Software (no worrying about licensing shenanigans) and is more modular - in fact, there is a libvirt VirtualBox driver out there. Install the plugin Normally one would invoke a single command: vagrant plugin install vagrant-libvirt and the plugin would work well out-of-the-box. This is not the case for Linux distributions from the Enterprise Linux family and Upstream is aware of that , but as of today (2021.12.21) it doesn't appear to be resolved. Because of that, you'll need to build additional components and use them with your Vagrant installation. The following procedure covers all of this and has been tested to work well with EuroLinux 8.5. Use these commands: [ \"$(command -v vagrant)\" ] || \\ ( read -p \"Install Vagrant first before running the following commands\" \\ && exit 1 ) sudo dnf groupinstall \"Development Tools\" \"Virtualization Host\" -y sudo dnf install cmake libvirt-devel ruby-devel -y mkdir krb5 cd krb5 wget https://vault.cdn.euro-linux.com/sources/eurolinux/8/baseos/x86_64/Packages/k/krb5-1.18.2-8.el8.src.rpm rpm2cpio krb5*.src.rpm | cpio -idmv tar xf krb5*.tar.gz cd krb5*/src ./configure make sudo cp -P lib/crypto/libk5crypto.* /opt/vagrant/embedded/lib64/ cd mkdir libssh cd libssh wget https://vault.cdn.euro-linux.com/sources/eurolinux/8/baseos/x86_64/Packages/l/libssh-0.9.4-3.el8.src.rpm rpm2cpio libssh*.src.rpm | cpio -idmv tar xf libssh*.tar.xz mkdir build cd build cmake ../libssh-*/ -DOPENSSL_ROOT_DIR=/opt/vagrant/embedded/ make sudo cp lib/libssh* /opt/vagrant/embedded/lib64 cd vagrant plugin install vagrant-libvirt && rm -rf krb5 libssh sudo usermod -a -G libvirt $USER Next, log out from all of your sessions (graphical and text) and log in again. From now on you should be able to run Vagrant boxes with libvirt if all requirements have been satisfied, e.g. you don't have any other providers enabled (an equivalent of deploying this guide on a clean installation). Additional resources The plugin's repository Websites of provider-related projects: KVM , libvirt , QEMU , Virt-Manager","title":"Vagrant with vagrant-libvirt plugin on Enterprise Linux 8"},{"location":"HowTo/vagrant-with-libvirt/#vagrant-with-vagrant-libvirt-plugin-on-enterprise-linux-8","text":"","title":"Vagrant with vagrant-libvirt plugin on Enterprise Linux 8"},{"location":"HowTo/vagrant-with-libvirt/#introduction","text":"This guide covers the installation of libvirt and related tools along with the Vagrant plugin that allows using libvirt as a provider. This has been tested on a clean installation of EuroLinux 8.5 - only Vagrant has been installed already as described in Vagrant jumpstart .","title":"Introduction"},{"location":"HowTo/vagrant-with-libvirt/#terminology","text":"QEMU - a generic machine emulator KVM - a virtualisation solution that is native to Linux. Used by QEMU to achieve near-native performances by executing the guest code directly on the host CPU libvirt - a management suite for several hypervisors While libvirt can manage many virtualisation solutions, in the context of this document libvirt refers to: QEMU with KVM managed by libvirt .","title":"Terminology"},{"location":"HowTo/vagrant-with-libvirt/#why-prefer-libvirt-over-providers-such-as-virtualbox","text":"As mentioned, KVM is a native virtualisation solution to Linux. This means a significant performance boost when compared to other providers at the slight cost of portability - if you run Linux only, then this is your solution of choice! If you have never used libvirt before and just heard about it in this how-to, there are several goodies worth mentioning. As an example unrelated to Vagrant: Virt-Manager allows you to get a similar GUI experience out of KVM as that of e.g. VirtualBox, it is fully Free Software (no worrying about licensing shenanigans) and is more modular - in fact, there is a libvirt VirtualBox driver out there.","title":"Why prefer libvirt over providers such as VirtualBox?"},{"location":"HowTo/vagrant-with-libvirt/#install-the-plugin","text":"Normally one would invoke a single command: vagrant plugin install vagrant-libvirt and the plugin would work well out-of-the-box. This is not the case for Linux distributions from the Enterprise Linux family and Upstream is aware of that , but as of today (2021.12.21) it doesn't appear to be resolved. Because of that, you'll need to build additional components and use them with your Vagrant installation. The following procedure covers all of this and has been tested to work well with EuroLinux 8.5. Use these commands: [ \"$(command -v vagrant)\" ] || \\ ( read -p \"Install Vagrant first before running the following commands\" \\ && exit 1 ) sudo dnf groupinstall \"Development Tools\" \"Virtualization Host\" -y sudo dnf install cmake libvirt-devel ruby-devel -y mkdir krb5 cd krb5 wget https://vault.cdn.euro-linux.com/sources/eurolinux/8/baseos/x86_64/Packages/k/krb5-1.18.2-8.el8.src.rpm rpm2cpio krb5*.src.rpm | cpio -idmv tar xf krb5*.tar.gz cd krb5*/src ./configure make sudo cp -P lib/crypto/libk5crypto.* /opt/vagrant/embedded/lib64/ cd mkdir libssh cd libssh wget https://vault.cdn.euro-linux.com/sources/eurolinux/8/baseos/x86_64/Packages/l/libssh-0.9.4-3.el8.src.rpm rpm2cpio libssh*.src.rpm | cpio -idmv tar xf libssh*.tar.xz mkdir build cd build cmake ../libssh-*/ -DOPENSSL_ROOT_DIR=/opt/vagrant/embedded/ make sudo cp lib/libssh* /opt/vagrant/embedded/lib64 cd vagrant plugin install vagrant-libvirt && rm -rf krb5 libssh sudo usermod -a -G libvirt $USER Next, log out from all of your sessions (graphical and text) and log in again. From now on you should be able to run Vagrant boxes with libvirt if all requirements have been satisfied, e.g. you don't have any other providers enabled (an equivalent of deploying this guide on a clean installation).","title":"Install the plugin"},{"location":"HowTo/vagrant-with-libvirt/#additional-resources","text":"The plugin's repository Websites of provider-related projects: KVM , libvirt , QEMU , Virt-Manager","title":"Additional resources"},{"location":"HowTo/virtualbox/","text":"VirtualBox How to set up your VirtualBox installation. Introduction Use cases Consider the following examples: You use software that doesn't work on your EuroLinux 8 installation. You want to try out some potentially dangerous actions and don't want to endanger your machine. You develop some awesome software and want to test it on several systems for compatibility You want an easily reproducible environment that works the same way on every person's machine You need a multi-machine laboratory, maybe with several different systems and don't have the resources for a physical equipment Why use it over other virtualisation providers? VirtualBox is the provider with a copyleft license and a focus on interoperability when it comes to supporting different platforms. This allows you to cooperate with someone running a different operating system and when exchanging documentation - once written it's applicable to anyone that can run the software. New VirtualBox versions usually support older operating systems too. One can enjoy the new features on a system, which has recently reached its End of Life, which can be indispensable for a company that can't migrate yet. System requirements A brief documentation is available at Upstream's . Your machine shall support hardware virtualisation. If it doesn't, you either need to perform additional troubleshooting - e.g. enable virtualisation in your machine's BIOS settings. [ $(grep -cE 'vmx|svm' /proc/cpuinfo) -gt 0 ] && echo \"OK\" Make sure you're running EuroLinux 8 on x86_64 architecture rather than ARM. [ \"$(arch)\" == \"x86_64\" ] && echo \"OK\" Installation on EuroLinux 8 As of today (2 September 2021), 6.1 is the main VirtualBox branch and this is the one we install in this guide. Assuming your account has been made an administrator during the system installation process, simply run these commands for an installation: sudo dnf groupinstall \"Development Tools\" -y sudo dnf config-manager \\ --add-repo=https://download.virtualbox.org/virtualbox/rpm/el/virtualbox.repo sudo dnf install VirtualBox-6.1 -y VirtualBox should be ready to use! USB devices If you want VirtualBox to support USB devices for your system account, run this command as well: sudo usermod -a -G vboxusers $USER then log out of your graphical session and log in again. Extension Pack VirtualBox doesn't support certain technologies out-of-the-box, e.g. USB 2.0/3.0 or builtin disk encryption, among others. If you want them to be supported, you will need VirtualBox Extension Pack. Make sure you have read its license and understand its implications - you're responsible for compliance. You may want to read Upstream's FAQ for a quick start. Once you're sure you'll be able to comply with the licensing terms, run these commands to install the Extension Pack: export vbox_version=\"$(VBoxManage --version | cut -d'r' -f 1)\" wget \"https://download.virtualbox.org/virtualbox/$vbox_version/Oracle_VM_VirtualBox_Extension_Pack-$vbox_version.vbox-extpack\" yes | sudo VBoxManage extpack install --replace Oracle_VM_VirtualBox_Extension_Pack-$vbox_version.vbox-extpack Troubleshooting I can't enable hardware virtualisation and prefer software emulation As Upstream says , for software mode you'll need VirtualBox branch 6.0 or older. Please also use version 6.0 if you need to run VMs with software virtualization, as this has been discontinued in 6.1. Additional resources Upstream's release pages If you prefer a manual download, check out Upstream's Linux release pages and use the one they provide for RHEL 8. RPM Fusion Alternatively you can use RPM Fusion repository for installation. The software might differ in branding a bit and only the latest release is provided. Use these commands: sudo dnf localinstall \\ https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y sudo dnf localinstall --nogpgcheck \\ https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm -y sudo dnf install VirtualBox -y sudo akmods --kernels $(uname -r) && sudo systemctl restart vboxdrv.service","title":"VirtualBox"},{"location":"HowTo/virtualbox/#virtualbox","text":"How to set up your VirtualBox installation.","title":"VirtualBox"},{"location":"HowTo/virtualbox/#introduction","text":"","title":"Introduction"},{"location":"HowTo/virtualbox/#use-cases","text":"Consider the following examples: You use software that doesn't work on your EuroLinux 8 installation. You want to try out some potentially dangerous actions and don't want to endanger your machine. You develop some awesome software and want to test it on several systems for compatibility You want an easily reproducible environment that works the same way on every person's machine You need a multi-machine laboratory, maybe with several different systems and don't have the resources for a physical equipment","title":"Use cases"},{"location":"HowTo/virtualbox/#why-use-it-over-other-virtualisation-providers","text":"VirtualBox is the provider with a copyleft license and a focus on interoperability when it comes to supporting different platforms. This allows you to cooperate with someone running a different operating system and when exchanging documentation - once written it's applicable to anyone that can run the software. New VirtualBox versions usually support older operating systems too. One can enjoy the new features on a system, which has recently reached its End of Life, which can be indispensable for a company that can't migrate yet.","title":"Why use it over other virtualisation providers?"},{"location":"HowTo/virtualbox/#system-requirements","text":"A brief documentation is available at Upstream's . Your machine shall support hardware virtualisation. If it doesn't, you either need to perform additional troubleshooting - e.g. enable virtualisation in your machine's BIOS settings. [ $(grep -cE 'vmx|svm' /proc/cpuinfo) -gt 0 ] && echo \"OK\" Make sure you're running EuroLinux 8 on x86_64 architecture rather than ARM. [ \"$(arch)\" == \"x86_64\" ] && echo \"OK\"","title":"System requirements"},{"location":"HowTo/virtualbox/#installation-on-eurolinux-8","text":"As of today (2 September 2021), 6.1 is the main VirtualBox branch and this is the one we install in this guide. Assuming your account has been made an administrator during the system installation process, simply run these commands for an installation: sudo dnf groupinstall \"Development Tools\" -y sudo dnf config-manager \\ --add-repo=https://download.virtualbox.org/virtualbox/rpm/el/virtualbox.repo sudo dnf install VirtualBox-6.1 -y VirtualBox should be ready to use!","title":"Installation on EuroLinux 8"},{"location":"HowTo/virtualbox/#usb-devices","text":"If you want VirtualBox to support USB devices for your system account, run this command as well: sudo usermod -a -G vboxusers $USER then log out of your graphical session and log in again.","title":"USB devices"},{"location":"HowTo/virtualbox/#extension-pack","text":"VirtualBox doesn't support certain technologies out-of-the-box, e.g. USB 2.0/3.0 or builtin disk encryption, among others. If you want them to be supported, you will need VirtualBox Extension Pack. Make sure you have read its license and understand its implications - you're responsible for compliance. You may want to read Upstream's FAQ for a quick start. Once you're sure you'll be able to comply with the licensing terms, run these commands to install the Extension Pack: export vbox_version=\"$(VBoxManage --version | cut -d'r' -f 1)\" wget \"https://download.virtualbox.org/virtualbox/$vbox_version/Oracle_VM_VirtualBox_Extension_Pack-$vbox_version.vbox-extpack\" yes | sudo VBoxManage extpack install --replace Oracle_VM_VirtualBox_Extension_Pack-$vbox_version.vbox-extpack","title":"Extension Pack"},{"location":"HowTo/virtualbox/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"HowTo/virtualbox/#i-cant-enable-hardware-virtualisation-and-prefer-software-emulation","text":"As Upstream says , for software mode you'll need VirtualBox branch 6.0 or older. Please also use version 6.0 if you need to run VMs with software virtualization, as this has been discontinued in 6.1.","title":"I can't enable hardware virtualisation and prefer software emulation"},{"location":"HowTo/virtualbox/#additional-resources","text":"","title":"Additional resources"},{"location":"HowTo/virtualbox/#upstreams-release-pages","text":"If you prefer a manual download, check out Upstream's Linux release pages and use the one they provide for RHEL 8.","title":"Upstream's release pages"},{"location":"HowTo/virtualbox/#rpm-fusion","text":"Alternatively you can use RPM Fusion repository for installation. The software might differ in branding a bit and only the latest release is provided. Use these commands: sudo dnf localinstall \\ https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -y sudo dnf localinstall --nogpgcheck \\ https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm -y sudo dnf install VirtualBox -y sudo akmods --kernels $(uname -r) && sudo systemctl restart vboxdrv.service","title":"RPM Fusion"},{"location":"HowTo/z-documentation-markdown/","text":"Quick markdown and extensions guide The first part of this guide is loosely based on Adam Pritchard markdown-here cheatsheet . We include it here for contributors as reference and show how different pieces will be styled. If you are familiar with markdown, and want to skip to this project specific extensions they start with Admonition : Headers Headers are created with # . # H1 This is is reserved for page title/name ## H2 [Contribution guide] is h2 ### H3 [Headers] is h3 ... ###### H6 This is fourth header This is fifth header This is sixth header Headers are essentials, because table of content is based on them. Emphasis Emphasis, aka italics, with *asterisks* or _underscores_. Strong emphasis, aka bold, with **asterisks** or __underscores__. Combined emphasis with **asterisks and _underscores_**. Strikethrough uses two tildes. ~~Scratch this.~~ Emphasis, aka italics, with asterisks or underscores . Strong emphasis, aka bold, with asterisks or underscores . Combined emphasis with asterisks and underscores . Strikethrough uses two tildes. ~~Scratch this.~~ List Proper markdown required MK-Docs has proper markdown list ordering that is 1 to 1 with markdown standard. See: Python Markdown Issue 3 TLDR: You have indent sub-list and paragraps with 4 spaces (In this example, leading and trailing spaces are shown with with dots: \u22c5) 1. First ordered list item 2. Another item \u22c5\u22c5\u22c5\u22c5* Unordered sub-list. 1. Actual numbers don't matter, just that it's a number \u22c5\u22c5\u22c5\u22c51. Ordered sub-list 4. And another item. \u22c5\u22c5\u22c5\u22c5To create paragraph within list item you need newline and four leading spaces. To have a line\u22c5\u22c5 \u22c5\u22c5\u22c5\u22c5break without a paragraph, you will need to use two trailing spaces. !!! info Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) * Unordered list can use asterisks - Or minuses + Or pluses First ordered list item Another item Unordered sub-list. Actual numbers don't matter, just that it's a number Ordered sub-list And another item. To create paragraph within list item you need newline and four leading spaces. To have a line break without a paragraph, you use two trailing spaces. Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) Unordered list can use asterisks Or minuses Or pluses Code blocks To add code block use (without leading space) ```python # nice for i in range(69, 420): print(i) ``` Example: # nice for i in range ( 69 , 420 ): print ( i ) Admonition Info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. Code in markdown: !!! info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. For more information check documentation Check mkdocs-material docs Code in markdown: !!! warning \"For more information check documentation\" Check [mkdocs-material docs](https://squidfunk.github.io/mkdocs-material/reference/admonitions/) Keyboard Keys Sometimes you might add keys combinations. For example: To use second TY terminal use following key combination Ctrl + Alt + F2 To make them visible in nice way you should use following syntax: To use second TY terminal use following key combination ++ctrl+alt+f2++","title":"Quick markdown and extensions guide"},{"location":"HowTo/z-documentation-markdown/#quick-markdown-and-extensions-guide","text":"The first part of this guide is loosely based on Adam Pritchard markdown-here cheatsheet . We include it here for contributors as reference and show how different pieces will be styled. If you are familiar with markdown, and want to skip to this project specific extensions they start with Admonition :","title":"Quick markdown and extensions guide"},{"location":"HowTo/z-documentation-markdown/#headers","text":"Headers are created with # . # H1 This is is reserved for page title/name ## H2 [Contribution guide] is h2 ### H3 [Headers] is h3 ... ###### H6","title":"Headers"},{"location":"HowTo/z-documentation-markdown/#this-is-fourth-header","text":"","title":"This is fourth header"},{"location":"HowTo/z-documentation-markdown/#this-is-fifth-header","text":"","title":"This is fifth header"},{"location":"HowTo/z-documentation-markdown/#this-is-sixth-header","text":"Headers are essentials, because table of content is based on them.","title":"This is sixth header"},{"location":"HowTo/z-documentation-markdown/#emphasis","text":"Emphasis, aka italics, with *asterisks* or _underscores_. Strong emphasis, aka bold, with **asterisks** or __underscores__. Combined emphasis with **asterisks and _underscores_**. Strikethrough uses two tildes. ~~Scratch this.~~ Emphasis, aka italics, with asterisks or underscores . Strong emphasis, aka bold, with asterisks or underscores . Combined emphasis with asterisks and underscores . Strikethrough uses two tildes. ~~Scratch this.~~","title":"Emphasis"},{"location":"HowTo/z-documentation-markdown/#list","text":"Proper markdown required MK-Docs has proper markdown list ordering that is 1 to 1 with markdown standard. See: Python Markdown Issue 3 TLDR: You have indent sub-list and paragraps with 4 spaces (In this example, leading and trailing spaces are shown with with dots: \u22c5) 1. First ordered list item 2. Another item \u22c5\u22c5\u22c5\u22c5* Unordered sub-list. 1. Actual numbers don't matter, just that it's a number \u22c5\u22c5\u22c5\u22c51. Ordered sub-list 4. And another item. \u22c5\u22c5\u22c5\u22c5To create paragraph within list item you need newline and four leading spaces. To have a line\u22c5\u22c5 \u22c5\u22c5\u22c5\u22c5break without a paragraph, you will need to use two trailing spaces. !!! info Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) * Unordered list can use asterisks - Or minuses + Or pluses First ordered list item Another item Unordered sub-list. Actual numbers don't matter, just that it's a number Ordered sub-list And another item. To create paragraph within list item you need newline and four leading spaces. To have a line break without a paragraph, you use two trailing spaces. Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) Unordered list can use asterisks Or minuses Or pluses","title":"List"},{"location":"HowTo/z-documentation-markdown/#code-blocks","text":"To add code block use (without leading space) ```python # nice for i in range(69, 420): print(i) ``` Example: # nice for i in range ( 69 , 420 ): print ( i )","title":"Code blocks"},{"location":"HowTo/z-documentation-markdown/#admonition","text":"Info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. Code in markdown: !!! info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. For more information check documentation Check mkdocs-material docs Code in markdown: !!! warning \"For more information check documentation\" Check [mkdocs-material docs](https://squidfunk.github.io/mkdocs-material/reference/admonitions/)","title":"Admonition"},{"location":"HowTo/z-documentation-markdown/#keyboard-keys","text":"Sometimes you might add keys combinations. For example: To use second TY terminal use following key combination Ctrl + Alt + F2 To make them visible in nice way you should use following syntax: To use second TY terminal use following key combination ++ctrl+alt+f2++","title":"Keyboard Keys"},{"location":"jumpstarts/8-jumpstart/","text":"EuroLinux 8 Jump Start This document contains the necessary information to set up your first EuroLinux 8 installation. System Requirements x86_64 (64 bit AMD/Intel architecture) Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 768MB or 512MB with swap space 1 GB 1.5 GB per logical CPU Storage 5 GB (excluding swap) 10GB 20GB Logical CPU means Physical CPU (including Hyper-Threading) or vCPU (virtual CPU). Warning It might be impossible to install EuroLinux on a system that does not meet recommended requirements. aarch64 (64 bit ARM architecture) Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 1 GB or 512MB with swap space 2 GB 2 GB per logical CPU Storage 5GB 10GB 20GB About absolute minimums for cloud deployment During our internal testing, we were able to boot and use very basic and already installed services on Virtual Machine with only 256 MB of RAM. However, without additional memory or at least swap space available, things like updating the system will result in actions of Kernel Out of Memory (OOM) Killer. You can try it yourself with EuroLinux Vagrant boxes and following Vagrantfile: Vagrant . configure ( \"2\" ) do | config | config . vm . box = \"eurolinux-vagrant/eurolinux-8\" # Explicitly disable vbguest because we are using rsync if Vagrant . has_plugin? ( \"vagrant-vbguest\" ) config . vbguest . auto_update = false end config . vm . provider \"virtualbox\" do | vb | vb . memory = \"256\" vb . cpus = 1 end config . vm . provider \"libvirt\" do | vb | vb . memory = \"256\" vb . cpus = 1 end end It's also possible to install EuroLinux on less than 5 GB of space, but it also requires extra attention. All absolute minimums for cloud deployments described above are not officially supported by EuroLinux. Secure boot At the moment, EuroLinux does not support secure boot. The full secure boot support is planned at the end of Q1/beginning of Q2 2022. How to install EuroLinux 8 from ISO Where can you obtain ISO? We distribute EuroLinux in a responsible open core model. Because of that, you might download EuroLinux from different sources. The two primary sources are: https://fbi.cdn.euro-linux.com/isos/ open for everyone https://customerportal.euro-linux.com for EuroLinux customers The only difference is that Customer Portal keeps older versions, when CDN, that is used for mirroring, keeps only two of the latest ISOs for each version to save space (single EuroLinux AppStream ISO might take up to 10 GB). If you are running a huge deployment, you might consider setting up your own mirror and download ISOs from Intranet. How to check ISO integrity During download, many things can happen - from a network or sending host failure to single-bit error. To check if ISO is undamaged, there are two mechanisms in place. For each EuroLinux ISO there's a file with its checksums and appropriate digest algorithms. Its name says, which algorithm was used to calculate the cryptographic digest. For example, you can browse https://fbi.cdn.euro-linux.com/isos/ and read the sha1sums.txt file. When the ISO download is completed, you can invoke the sha1sum command on the ISO file and check if checksums match. [Alex@SpaceShipEL8 Downloads]$ sha1sum EL-8.3-x86_64-20210624-appstream.iso 6a8abaaebe288553ec8568bd9de3f5fda5f1ddb5 EL-8.3-x86_64-20210624-appstream.iso The second mechanism for checking ISO integrity is built-in inside the installer itself. When you start the installation, use the Test this media & install EuroLinux 8 entry: After booting up, the ISO checking process will start. Installation with GUI Because even a minimal installation uses a GUI the whole process is simple and straightforward. EuroLinux 8, as well as previous versions, uses Anaconda installer that clearly informs the user what needs to be done in order to install the system. First, you have to choose the language that will be used during installation: After configuring the installer language you should see a menu similar to: Anaconda installer LOCALIZATION section: Keyboard - this section allows you to setup keyboard layouts, including the default keyboard layout, additional layouts and key combination to switch between them. Language support - additional languages packages that should be installed. Time & Date - configure the date, time zone, enable NTP and NTP servers. Anaconda installer SOFTWARE section: Configuring source of the installation Here you might configure the source of your installation. By default, the system installs from the ISO image itself. This is one of the officially supported ways to install EuroLinux . If you enable a NIC (Network Interface Card) in the Network installer section, you might add additional EuroLinux repositories and/or other repositories. If you add EuroLinux repositories, the installer will automatically download newer version of the packages. 'certify-' prefix Since EuroLinux 8.6 the 'certify-' prefixes in repo URLs and names are no longer used. These names and URLs were used before we started distributing our system in the open core model. These URLs are and will be kept as the symbolic link for backward compatibility. They can be used in some older parts of the documentation. EuroLinux 8 repositories: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/BaseOS/os Name: BaseOSProd URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/AppStream/os Name: AppStreamProd URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/PowerTools/os Name: PowerToolsProd For EuroLinux 8 beta: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/beta-BaseOS/os Name: BaseOSBeta URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/beta-AppStream/os Name: AppStreamBeta URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/beta-PowerTools/os Name: PowerToolsBeta Limited support. Hybrid network installation from both ISO and public repositories is not our primary goal in the QA process . Packages in EuroLinux repositories are regularly updated, and it might be impossible to install a system from an external source. Depending on the state of the upstream, we might not fix a potential issue. Below you can see an example configuration that was used to install a system: After changing the installation source, you will have to confirm Software Selection . Software Selection Software Selection allows you to customize which packages will be installed. You might choose from base environment groups like Server with GUI , Workstation or Minimal . You can also install additional package groups. Anaconda installer SYSTEM section: Installation selection allows choosing on which disk the system will be installed. If you want to have a fully encrypted system, you should enable encryption in this step. KDUMP allows choosing if KDUMP (Kernel crash dump collection mechanism) should be enabled. Network & Hostname - you can configure your system networking here Security policy - you can setup an additional openscap policy here Anaconda installer USER SETTINGS section: Root Password - by default, the root user is disabled. If a user is created in User Creation section, the root account can stay disabled User Creation section allows creating a regular user in the system. If the Make this user administrator option is checked, the root account can be disabled. After applying all the necessary changes , the installation can be started with the \"Begin Installation\" button. Disk partition recommended minimums You need at least the following partitions. /boot for Linux kernel and init ramdisks - 1GB / (root partition) - at least 10 GB (a very minimal system might use as little as 2GB - but it requires extra attention and is not officially supported by EuroLinux) For UEFI, an EFI system partition is also required. /boot/efi - at least 100MB If your storage allows it, the following partitions are also highly recommended: swap - 1GB or more depending on the system RAM and workload. Swap is also required for hibernation. Depending on the workload of the system, it should be at least as spacious as system RAM. /home - at least 1GB - but in most cases, if / can be as big as 80GB, then /home/ usually takes the rest of the free space Installing EuroLinux in basic graphic mode Suppose there is a problem loading/running your graphics card driver (it might results in a black screen/error message or graphical artifacts). It's possible to install EuroLinux in basic graphics mode. To do so, choose Troubleshooting on the welcome menu, and then Install EuroLinux 8 in basic graphics mode . From this point the process is identical to a standard installation with GUI. Installing EuroLinux in text mode To install EuroLinux in text mode: Boot EuroLinux ISO Press Esc to stop installation options selection timeout Press Tab Add inst.text to the end of the kernel boot command line Press Enter Before running the installation you have to provide all the necessary information (represented as ! in selection). It's a good idea to refresh the menu with R + Enter command shortly after the installer started. After customization you are ready to start your installation. Other possibilities EuroLinux can also be installed in the following manner: Automated installation with a kickstart file. Installation with PXE Installation via VNC Please consult upstream documentation about these topics. Using EuroLinux From this point, you can use EuroLinux as any other RHEL\u2122 based distribution. Submitting a Request for Change We truly care. If there is something that you believe could/should be changed/improved in the EuroLinux distribution and does not break compatibility with the upstream project, then drop us the issue on GitHub! All contributors are extremely welcome. EuroLinux Distro Bugs and RFC Submitting a Bug report We decided that submitting bug reports should not involve registration into some nasty miserable software. At the very same time, we know that most open-source developers have GitHub profiles. This choice makes the decision making and work as transparent as possible. That's why we decided to use it as the primary way to submit bugs. EuroLinux Distro Bugs and RFC This repository allows you to stay in direct contact with EuroLinux developers. Other ways to submit a bug report support AT euro-linux dot com EuroLinux Support Portal (subscription required) Security/confidential bug report Please use the e-mail provided above.","title":"EuroLinux 8 Jump Start"},{"location":"jumpstarts/8-jumpstart/#eurolinux-8-jump-start","text":"This document contains the necessary information to set up your first EuroLinux 8 installation.","title":"EuroLinux 8 Jump Start"},{"location":"jumpstarts/8-jumpstart/#system-requirements","text":"","title":"System Requirements"},{"location":"jumpstarts/8-jumpstart/#x86_64-64-bit-amdintel-architecture","text":"Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 768MB or 512MB with swap space 1 GB 1.5 GB per logical CPU Storage 5 GB (excluding swap) 10GB 20GB Logical CPU means Physical CPU (including Hyper-Threading) or vCPU (virtual CPU). Warning It might be impossible to install EuroLinux on a system that does not meet recommended requirements.","title":"x86_64 (64 bit AMD/Intel architecture)"},{"location":"jumpstarts/8-jumpstart/#aarch64-64-bit-arm-architecture","text":"Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 1 GB or 512MB with swap space 2 GB 2 GB per logical CPU Storage 5GB 10GB 20GB","title":"aarch64 (64 bit ARM architecture)"},{"location":"jumpstarts/8-jumpstart/#about-absolute-minimums-for-cloud-deployment","text":"During our internal testing, we were able to boot and use very basic and already installed services on Virtual Machine with only 256 MB of RAM. However, without additional memory or at least swap space available, things like updating the system will result in actions of Kernel Out of Memory (OOM) Killer. You can try it yourself with EuroLinux Vagrant boxes and following Vagrantfile: Vagrant . configure ( \"2\" ) do | config | config . vm . box = \"eurolinux-vagrant/eurolinux-8\" # Explicitly disable vbguest because we are using rsync if Vagrant . has_plugin? ( \"vagrant-vbguest\" ) config . vbguest . auto_update = false end config . vm . provider \"virtualbox\" do | vb | vb . memory = \"256\" vb . cpus = 1 end config . vm . provider \"libvirt\" do | vb | vb . memory = \"256\" vb . cpus = 1 end end It's also possible to install EuroLinux on less than 5 GB of space, but it also requires extra attention. All absolute minimums for cloud deployments described above are not officially supported by EuroLinux.","title":"About absolute minimums for cloud deployment"},{"location":"jumpstarts/8-jumpstart/#secure-boot","text":"At the moment, EuroLinux does not support secure boot. The full secure boot support is planned at the end of Q1/beginning of Q2 2022.","title":"Secure boot"},{"location":"jumpstarts/8-jumpstart/#how-to-install-eurolinux-8-from-iso","text":"","title":"How to install EuroLinux 8 from ISO"},{"location":"jumpstarts/8-jumpstart/#where-can-you-obtain-iso","text":"We distribute EuroLinux in a responsible open core model. Because of that, you might download EuroLinux from different sources. The two primary sources are: https://fbi.cdn.euro-linux.com/isos/ open for everyone https://customerportal.euro-linux.com for EuroLinux customers The only difference is that Customer Portal keeps older versions, when CDN, that is used for mirroring, keeps only two of the latest ISOs for each version to save space (single EuroLinux AppStream ISO might take up to 10 GB). If you are running a huge deployment, you might consider setting up your own mirror and download ISOs from Intranet.","title":"Where can you obtain ISO?"},{"location":"jumpstarts/8-jumpstart/#how-to-check-iso-integrity","text":"During download, many things can happen - from a network or sending host failure to single-bit error. To check if ISO is undamaged, there are two mechanisms in place. For each EuroLinux ISO there's a file with its checksums and appropriate digest algorithms. Its name says, which algorithm was used to calculate the cryptographic digest. For example, you can browse https://fbi.cdn.euro-linux.com/isos/ and read the sha1sums.txt file. When the ISO download is completed, you can invoke the sha1sum command on the ISO file and check if checksums match. [Alex@SpaceShipEL8 Downloads]$ sha1sum EL-8.3-x86_64-20210624-appstream.iso 6a8abaaebe288553ec8568bd9de3f5fda5f1ddb5 EL-8.3-x86_64-20210624-appstream.iso The second mechanism for checking ISO integrity is built-in inside the installer itself. When you start the installation, use the Test this media & install EuroLinux 8 entry: After booting up, the ISO checking process will start.","title":"How to check ISO integrity"},{"location":"jumpstarts/8-jumpstart/#installation-with-gui","text":"Because even a minimal installation uses a GUI the whole process is simple and straightforward. EuroLinux 8, as well as previous versions, uses Anaconda installer that clearly informs the user what needs to be done in order to install the system. First, you have to choose the language that will be used during installation: After configuring the installer language you should see a menu similar to:","title":"Installation with GUI"},{"location":"jumpstarts/8-jumpstart/#anaconda-installer-localization-section","text":"Keyboard - this section allows you to setup keyboard layouts, including the default keyboard layout, additional layouts and key combination to switch between them. Language support - additional languages packages that should be installed. Time & Date - configure the date, time zone, enable NTP and NTP servers.","title":"Anaconda installer LOCALIZATION section:"},{"location":"jumpstarts/8-jumpstart/#anaconda-installer-software-section","text":"","title":"Anaconda installer SOFTWARE section:"},{"location":"jumpstarts/8-jumpstart/#configuring-source-of-the-installation","text":"Here you might configure the source of your installation. By default, the system installs from the ISO image itself. This is one of the officially supported ways to install EuroLinux . If you enable a NIC (Network Interface Card) in the Network installer section, you might add additional EuroLinux repositories and/or other repositories. If you add EuroLinux repositories, the installer will automatically download newer version of the packages. 'certify-' prefix Since EuroLinux 8.6 the 'certify-' prefixes in repo URLs and names are no longer used. These names and URLs were used before we started distributing our system in the open core model. These URLs are and will be kept as the symbolic link for backward compatibility. They can be used in some older parts of the documentation. EuroLinux 8 repositories: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/BaseOS/os Name: BaseOSProd URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/AppStream/os Name: AppStreamProd URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/PowerTools/os Name: PowerToolsProd For EuroLinux 8 beta: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/beta-BaseOS/os Name: BaseOSBeta URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/beta-AppStream/os Name: AppStreamBeta URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/8/$basearch/beta-PowerTools/os Name: PowerToolsBeta Limited support. Hybrid network installation from both ISO and public repositories is not our primary goal in the QA process . Packages in EuroLinux repositories are regularly updated, and it might be impossible to install a system from an external source. Depending on the state of the upstream, we might not fix a potential issue. Below you can see an example configuration that was used to install a system: After changing the installation source, you will have to confirm Software Selection .","title":"Configuring source of the installation"},{"location":"jumpstarts/8-jumpstart/#software-selection","text":"Software Selection allows you to customize which packages will be installed. You might choose from base environment groups like Server with GUI , Workstation or Minimal . You can also install additional package groups.","title":"Software Selection"},{"location":"jumpstarts/8-jumpstart/#anaconda-installer-system-section","text":"Installation selection allows choosing on which disk the system will be installed. If you want to have a fully encrypted system, you should enable encryption in this step. KDUMP allows choosing if KDUMP (Kernel crash dump collection mechanism) should be enabled. Network & Hostname - you can configure your system networking here Security policy - you can setup an additional openscap policy here","title":"Anaconda installer SYSTEM section:"},{"location":"jumpstarts/8-jumpstart/#anaconda-installer-user-settings-section","text":"Root Password - by default, the root user is disabled. If a user is created in User Creation section, the root account can stay disabled User Creation section allows creating a regular user in the system. If the Make this user administrator option is checked, the root account can be disabled. After applying all the necessary changes , the installation can be started with the \"Begin Installation\" button.","title":"Anaconda installer USER SETTINGS section:"},{"location":"jumpstarts/8-jumpstart/#disk-partition-recommended-minimums","text":"You need at least the following partitions. /boot for Linux kernel and init ramdisks - 1GB / (root partition) - at least 10 GB (a very minimal system might use as little as 2GB - but it requires extra attention and is not officially supported by EuroLinux) For UEFI, an EFI system partition is also required. /boot/efi - at least 100MB If your storage allows it, the following partitions are also highly recommended: swap - 1GB or more depending on the system RAM and workload. Swap is also required for hibernation. Depending on the workload of the system, it should be at least as spacious as system RAM. /home - at least 1GB - but in most cases, if / can be as big as 80GB, then /home/ usually takes the rest of the free space","title":"Disk partition recommended minimums"},{"location":"jumpstarts/8-jumpstart/#installing-eurolinux-in-basic-graphic-mode","text":"Suppose there is a problem loading/running your graphics card driver (it might results in a black screen/error message or graphical artifacts). It's possible to install EuroLinux in basic graphics mode. To do so, choose Troubleshooting on the welcome menu, and then Install EuroLinux 8 in basic graphics mode . From this point the process is identical to a standard installation with GUI.","title":"Installing EuroLinux in basic graphic mode"},{"location":"jumpstarts/8-jumpstart/#installing-eurolinux-in-text-mode","text":"To install EuroLinux in text mode: Boot EuroLinux ISO Press Esc to stop installation options selection timeout Press Tab Add inst.text to the end of the kernel boot command line Press Enter Before running the installation you have to provide all the necessary information (represented as ! in selection). It's a good idea to refresh the menu with R + Enter command shortly after the installer started. After customization you are ready to start your installation.","title":"Installing EuroLinux in text mode"},{"location":"jumpstarts/8-jumpstart/#other-possibilities","text":"EuroLinux can also be installed in the following manner: Automated installation with a kickstart file. Installation with PXE Installation via VNC Please consult upstream documentation about these topics.","title":"Other possibilities"},{"location":"jumpstarts/8-jumpstart/#using-eurolinux","text":"From this point, you can use EuroLinux as any other RHEL\u2122 based distribution.","title":"Using EuroLinux"},{"location":"jumpstarts/8-jumpstart/#submitting-a-request-for-change","text":"We truly care. If there is something that you believe could/should be changed/improved in the EuroLinux distribution and does not break compatibility with the upstream project, then drop us the issue on GitHub! All contributors are extremely welcome. EuroLinux Distro Bugs and RFC","title":"Submitting a Request for Change"},{"location":"jumpstarts/8-jumpstart/#submitting-a-bug-report","text":"We decided that submitting bug reports should not involve registration into some nasty miserable software. At the very same time, we know that most open-source developers have GitHub profiles. This choice makes the decision making and work as transparent as possible. That's why we decided to use it as the primary way to submit bugs. EuroLinux Distro Bugs and RFC This repository allows you to stay in direct contact with EuroLinux developers.","title":"Submitting a Bug report"},{"location":"jumpstarts/8-jumpstart/#other-ways-to-submit-a-bug-report","text":"support AT euro-linux dot com EuroLinux Support Portal (subscription required)","title":"Other ways to submit a bug report"},{"location":"jumpstarts/8-jumpstart/#securityconfidential-bug-report","text":"Please use the e-mail provided above.","title":"Security/confidential bug report"},{"location":"jumpstarts/9-beta-jumpstart/","text":"EuroLinux 9 Beta Jump Start This document contains the necessary information to set up your first EuroLinux 9 Beta installation. System Requirements x86_64 (64 bit AMD/Intel architecture) Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 1 GiB or 768 MiB with swap space 2 GiB 1.5 GiB per logical CPU Storage 5 GB (excluding swap) 10GB 20GB Logical CPU means Physical CPU (including Hyper-Threading) or vCPU (virtual CPU). Warning It might be impossible to install EuroLinux on a system that does not meet recommended requirements. About absolute minimums for cloud deployment During our internal testing, we were able to boot and use very basic and already installed services on Virtual Machine with only 340 MiB of RAM. However, without additional memory or at least swap space available, things like updating the system will result in actions of Kernel Out of Memory (OOM) Killer. You can try it yourself with EuroLinux Vagrant boxes and the following Vagrantfile: Vagrant . configure ( \"2\" ) do | config | config . vm . box = \"eurolinux-vagrant/eurolinux-9\" # Explicitly disable vbguest because we are using rsync if Vagrant . has_plugin? ( \"vagrant-vbguest\" ) config . vbguest . auto_update = false end config . vm . provider \"virtualbox\" do | vb | vb . memory = \"340\" vb . cpus = 1 end config . vm . provider \"libvirt\" do | vb | vb . memory = \"340\" vb . cpus = 1 end end It's also possible to install EuroLinux on less than 5 GB of space, but it also requires extra attention. All absolute minimums for cloud deployments described above are not officially supported by EuroLinux. Secure boot Since EuroLinux 9 Beta is a pre-release version and not ready for production use, Secure Boot support has not been implemented. How to install EuroLinux 9 Beta from ISO Where can you obtain ISO? We distribute EuroLinux in a responsible open core model. Because of that, you might download EuroLinux from different sources. The two primary sources are: https://fbi.cdn.euro-linux.com/isos/ open for everyone https://customerportal.euro-linux.com for EuroLinux customers The only difference is that Customer Portal keeps older versions, when CDN, that is used for mirroring, keeps only two of the latest ISOs for each version to save space (single EuroLinux BaseOS ISO might take up to 8 GB). If you are running a huge deployment, you might consider setting up your own mirror and download ISOs from Intranet. How to check ISO integrity During download, many things can happen - from a network or sending host failure to single-bit error. To check if ISO is undamaged, there are two mechanisms in place. For each EuroLinux ISO there's a file with its checksums and appropriate digest algorithms. Its name says, which algorithm was used to calculate the cryptographic digest. For example, you can browse https://fbi.cdn.euro-linux.com/isos/ and read the sha1sums.txt file. When the ISO download is completed, you can invoke the sha1sum command on the ISO file and check if checksums match. $ sha1sum EL-9.0-x86_64-20220225-minimal.iso 73d39d443e27414085f7107fa21dd214d28b8730 EL-9.0-x86_64-20220225-minimal.iso The second mechanism for checking ISO integrity is built-in inside the installer itself. When you start the installation, use the Test this media & install EuroLinux 9 entry: After booting up, the ISO checking process will start. Installation with GUI Because even a minimal installation uses a GUI the whole process is simple and straightforward. EuroLinux 9, as well as previous versions, uses Anaconda installer that clearly informs the user what needs to be done in order to install the system. First, you have to choose the language that will be used during installation: Hint: since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines the default language by the automatic location detection feature - in this case you can see that Polish has been automatically chosen. Since this is a Beta release, we might need to confirm that we are aware of this fact and that this release should not be used in production. After configuring the installer language you should see a menu similar to: Anaconda installer LOCALIZATION section: Keyboard - this section allows you to setup keyboard layouts, including the default keyboard layout, additional layouts and key combination to switch between them. Language support - additional languages packages that should be installed. Time & Date - configure the date, time zone, enable NTP and NTP servers. Anaconda installer SOFTWARE section: Configuring source of the installation Here you might configure the source of your installation. By default, the system installs from the ISO image itself. This is one of the officially supported ways to install EuroLinux . If a NIC (Network Interface Card) has been enabled in the Network & Host Name installer section, you might add additional EuroLinux repositories and/or other repositories. If you add EuroLinux repositories, the installer will automatically download newer version of the packages. EuroLinux 9 Beta repositories: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/certify-beta-BaseOS/os Name: BaseOS URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/certify-beta-AppStream/os Name: AppStream URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/certify-beta-PowerTools/os Name: PowerTools Limited support. Hybrid network installation from both ISO and public repositories is not our primary goal in the QA process . Packages in EuroLinux repositories are regularly updated, and it might be impossible to install a system from an external source. Depending on the state of the upstream, we might not fix a potential issue. Below you can see an example configuration that was used to install a system - in this case the default 'Minimal' repository has been provided as the only one: After changing the installation source, you will have to confirm Software Selection . Software Selection Software Selection allows you to customize which packages will be installed. You might choose from base environment groups like Server with GUI , Workstation or Minimal Install - since we are demonstrating with the minimal ISO image , only the last option is available. You can also install additional package groups. Anaconda installer SYSTEM section: Installation selection allows choosing on which disk the system will be installed. If you want to have a fully encrypted system, you should enable encryption in this step. KDUMP allows choosing if KDUMP (Kernel crash dump collection mechanism) should be enabled. Network & Host Name - you can configure your system networking here Security Profile - you can setup an additional openscap policy here Anaconda installer USER SETTINGS section: Root Password - by default, the root user is disabled. If a user is created in User Creation section, the root account can stay disabled User Creation section allows creating a regular user in the system. If the Make this user administrator option is checked, the root account can be disabled. After applying all the necessary changes , the installation can be started with the \"Begin Installation\" button. Disk partition recommended minimums You need at least the following partitions. /boot for Linux kernel and init ramdisks - 1GB / (root partition) - at least 10 GB (a very minimal system might use as little as 2GB - but it requires extra attention and is not officially supported by EuroLinux) For UEFI, an EFI system partition is also required. /boot/efi - at least 100MB If your storage allows it, the following partitions are also highly recommended: swap - 1GB or more depending on the system RAM and workload. Swap is also required for hibernation. Depending on the workload of the system, it should be at least as spacious as system RAM. /home - at least 1GB - but in most cases, if / can be as big as 80GB, then /home/ usually takes the rest of the free space Installing EuroLinux in basic graphic mode Suppose there is a problem loading/running your graphics card driver (it might results in a black screen/error message or graphical artifacts). It's possible to install EuroLinux in basic graphics mode. To do so, choose Troubleshooting on the welcome menu, and then Install EuroLinux 9 in basic graphics mode . From this point the process is identical to a standard installation with GUI. Installing EuroLinux in text mode To install EuroLinux in text mode: Boot EuroLinux ISO Press Esc to stop installation options selection timeout Press Tab Add inst.text to the end of the kernel boot command line Press Enter Since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines that we can start VNC or use text mode entirely. Since we are demonstrating the text mode installation, we choose the latter option. Before running the installation you have to provide all the necessary information (represented as ! in selection). It's a good idea to refresh the menu with R + Enter command shortly after the installer started. After customization you are ready to start your installation. Other possibilities EuroLinux can also be installed in the following manner: Automated installation with a kickstart file. Installation with PXE Installation via VNC (as mentioned above) Please consult upstream documentation about these topics. Using EuroLinux From this point, you can use EuroLinux as any other RHEL\u2122 based distribution. Submitting a Request for Change We truly care. If there is something that you believe could/should be changed/improved in the EuroLinux distribution and does not break compatibility with the upstream project, then drop us the issue on GitHub! All contributors are extremely welcome. EuroLinux Distro Bugs and RFC Submitting a Bug report We decided that submitting bug reports should not involve registration into some nasty miserable software. At the very same time, we know that most open-source developers have GitHub profiles. This choice makes the decision making and work as transparent as possible. That's why we decided to use it as the primary way to submit bugs. EuroLinux Distro Bugs and RFC This repository allows you to stay in direct contact with EuroLinux developers. Other ways to submit a bug report support AT euro-linux dot com EuroLinux Support Portal (subscription required) Security/confidential bug report Please use the e-mail provided above.","title":"EuroLinux 9 Beta Jump Start"},{"location":"jumpstarts/9-beta-jumpstart/#eurolinux-9-beta-jump-start","text":"This document contains the necessary information to set up your first EuroLinux 9 Beta installation.","title":"EuroLinux 9 Beta Jump Start"},{"location":"jumpstarts/9-beta-jumpstart/#system-requirements","text":"","title":"System Requirements"},{"location":"jumpstarts/9-beta-jumpstart/#x86_64-64-bit-amdintel-architecture","text":"Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 1 GiB or 768 MiB with swap space 2 GiB 1.5 GiB per logical CPU Storage 5 GB (excluding swap) 10GB 20GB Logical CPU means Physical CPU (including Hyper-Threading) or vCPU (virtual CPU). Warning It might be impossible to install EuroLinux on a system that does not meet recommended requirements.","title":"x86_64 (64 bit AMD/Intel architecture)"},{"location":"jumpstarts/9-beta-jumpstart/#about-absolute-minimums-for-cloud-deployment","text":"During our internal testing, we were able to boot and use very basic and already installed services on Virtual Machine with only 340 MiB of RAM. However, without additional memory or at least swap space available, things like updating the system will result in actions of Kernel Out of Memory (OOM) Killer. You can try it yourself with EuroLinux Vagrant boxes and the following Vagrantfile: Vagrant . configure ( \"2\" ) do | config | config . vm . box = \"eurolinux-vagrant/eurolinux-9\" # Explicitly disable vbguest because we are using rsync if Vagrant . has_plugin? ( \"vagrant-vbguest\" ) config . vbguest . auto_update = false end config . vm . provider \"virtualbox\" do | vb | vb . memory = \"340\" vb . cpus = 1 end config . vm . provider \"libvirt\" do | vb | vb . memory = \"340\" vb . cpus = 1 end end It's also possible to install EuroLinux on less than 5 GB of space, but it also requires extra attention. All absolute minimums for cloud deployments described above are not officially supported by EuroLinux.","title":"About absolute minimums for cloud deployment"},{"location":"jumpstarts/9-beta-jumpstart/#secure-boot","text":"Since EuroLinux 9 Beta is a pre-release version and not ready for production use, Secure Boot support has not been implemented.","title":"Secure boot"},{"location":"jumpstarts/9-beta-jumpstart/#how-to-install-eurolinux-9-beta-from-iso","text":"","title":"How to install EuroLinux 9 Beta from ISO"},{"location":"jumpstarts/9-beta-jumpstart/#where-can-you-obtain-iso","text":"We distribute EuroLinux in a responsible open core model. Because of that, you might download EuroLinux from different sources. The two primary sources are: https://fbi.cdn.euro-linux.com/isos/ open for everyone https://customerportal.euro-linux.com for EuroLinux customers The only difference is that Customer Portal keeps older versions, when CDN, that is used for mirroring, keeps only two of the latest ISOs for each version to save space (single EuroLinux BaseOS ISO might take up to 8 GB). If you are running a huge deployment, you might consider setting up your own mirror and download ISOs from Intranet.","title":"Where can you obtain ISO?"},{"location":"jumpstarts/9-beta-jumpstart/#how-to-check-iso-integrity","text":"During download, many things can happen - from a network or sending host failure to single-bit error. To check if ISO is undamaged, there are two mechanisms in place. For each EuroLinux ISO there's a file with its checksums and appropriate digest algorithms. Its name says, which algorithm was used to calculate the cryptographic digest. For example, you can browse https://fbi.cdn.euro-linux.com/isos/ and read the sha1sums.txt file. When the ISO download is completed, you can invoke the sha1sum command on the ISO file and check if checksums match. $ sha1sum EL-9.0-x86_64-20220225-minimal.iso 73d39d443e27414085f7107fa21dd214d28b8730 EL-9.0-x86_64-20220225-minimal.iso The second mechanism for checking ISO integrity is built-in inside the installer itself. When you start the installation, use the Test this media & install EuroLinux 9 entry: After booting up, the ISO checking process will start.","title":"How to check ISO integrity"},{"location":"jumpstarts/9-beta-jumpstart/#installation-with-gui","text":"Because even a minimal installation uses a GUI the whole process is simple and straightforward. EuroLinux 9, as well as previous versions, uses Anaconda installer that clearly informs the user what needs to be done in order to install the system. First, you have to choose the language that will be used during installation: Hint: since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines the default language by the automatic location detection feature - in this case you can see that Polish has been automatically chosen. Since this is a Beta release, we might need to confirm that we are aware of this fact and that this release should not be used in production. After configuring the installer language you should see a menu similar to:","title":"Installation with GUI"},{"location":"jumpstarts/9-beta-jumpstart/#anaconda-installer-localization-section","text":"Keyboard - this section allows you to setup keyboard layouts, including the default keyboard layout, additional layouts and key combination to switch between them. Language support - additional languages packages that should be installed. Time & Date - configure the date, time zone, enable NTP and NTP servers.","title":"Anaconda installer LOCALIZATION section:"},{"location":"jumpstarts/9-beta-jumpstart/#anaconda-installer-software-section","text":"","title":"Anaconda installer SOFTWARE section:"},{"location":"jumpstarts/9-beta-jumpstart/#configuring-source-of-the-installation","text":"Here you might configure the source of your installation. By default, the system installs from the ISO image itself. This is one of the officially supported ways to install EuroLinux . If a NIC (Network Interface Card) has been enabled in the Network & Host Name installer section, you might add additional EuroLinux repositories and/or other repositories. If you add EuroLinux repositories, the installer will automatically download newer version of the packages. EuroLinux 9 Beta repositories: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/certify-beta-BaseOS/os Name: BaseOS URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/certify-beta-AppStream/os Name: AppStream URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/certify-beta-PowerTools/os Name: PowerTools Limited support. Hybrid network installation from both ISO and public repositories is not our primary goal in the QA process . Packages in EuroLinux repositories are regularly updated, and it might be impossible to install a system from an external source. Depending on the state of the upstream, we might not fix a potential issue. Below you can see an example configuration that was used to install a system - in this case the default 'Minimal' repository has been provided as the only one: After changing the installation source, you will have to confirm Software Selection .","title":"Configuring source of the installation"},{"location":"jumpstarts/9-beta-jumpstart/#software-selection","text":"Software Selection allows you to customize which packages will be installed. You might choose from base environment groups like Server with GUI , Workstation or Minimal Install - since we are demonstrating with the minimal ISO image , only the last option is available. You can also install additional package groups.","title":"Software Selection"},{"location":"jumpstarts/9-beta-jumpstart/#anaconda-installer-system-section","text":"Installation selection allows choosing on which disk the system will be installed. If you want to have a fully encrypted system, you should enable encryption in this step. KDUMP allows choosing if KDUMP (Kernel crash dump collection mechanism) should be enabled. Network & Host Name - you can configure your system networking here Security Profile - you can setup an additional openscap policy here","title":"Anaconda installer SYSTEM section:"},{"location":"jumpstarts/9-beta-jumpstart/#anaconda-installer-user-settings-section","text":"Root Password - by default, the root user is disabled. If a user is created in User Creation section, the root account can stay disabled User Creation section allows creating a regular user in the system. If the Make this user administrator option is checked, the root account can be disabled. After applying all the necessary changes , the installation can be started with the \"Begin Installation\" button.","title":"Anaconda installer USER SETTINGS section:"},{"location":"jumpstarts/9-beta-jumpstart/#disk-partition-recommended-minimums","text":"You need at least the following partitions. /boot for Linux kernel and init ramdisks - 1GB / (root partition) - at least 10 GB (a very minimal system might use as little as 2GB - but it requires extra attention and is not officially supported by EuroLinux) For UEFI, an EFI system partition is also required. /boot/efi - at least 100MB If your storage allows it, the following partitions are also highly recommended: swap - 1GB or more depending on the system RAM and workload. Swap is also required for hibernation. Depending on the workload of the system, it should be at least as spacious as system RAM. /home - at least 1GB - but in most cases, if / can be as big as 80GB, then /home/ usually takes the rest of the free space","title":"Disk partition recommended minimums"},{"location":"jumpstarts/9-beta-jumpstart/#installing-eurolinux-in-basic-graphic-mode","text":"Suppose there is a problem loading/running your graphics card driver (it might results in a black screen/error message or graphical artifacts). It's possible to install EuroLinux in basic graphics mode. To do so, choose Troubleshooting on the welcome menu, and then Install EuroLinux 9 in basic graphics mode . From this point the process is identical to a standard installation with GUI.","title":"Installing EuroLinux in basic graphic mode"},{"location":"jumpstarts/9-beta-jumpstart/#installing-eurolinux-in-text-mode","text":"To install EuroLinux in text mode: Boot EuroLinux ISO Press Esc to stop installation options selection timeout Press Tab Add inst.text to the end of the kernel boot command line Press Enter Since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines that we can start VNC or use text mode entirely. Since we are demonstrating the text mode installation, we choose the latter option. Before running the installation you have to provide all the necessary information (represented as ! in selection). It's a good idea to refresh the menu with R + Enter command shortly after the installer started. After customization you are ready to start your installation.","title":"Installing EuroLinux in text mode"},{"location":"jumpstarts/9-beta-jumpstart/#other-possibilities","text":"EuroLinux can also be installed in the following manner: Automated installation with a kickstart file. Installation with PXE Installation via VNC (as mentioned above) Please consult upstream documentation about these topics.","title":"Other possibilities"},{"location":"jumpstarts/9-beta-jumpstart/#using-eurolinux","text":"From this point, you can use EuroLinux as any other RHEL\u2122 based distribution.","title":"Using EuroLinux"},{"location":"jumpstarts/9-beta-jumpstart/#submitting-a-request-for-change","text":"We truly care. If there is something that you believe could/should be changed/improved in the EuroLinux distribution and does not break compatibility with the upstream project, then drop us the issue on GitHub! All contributors are extremely welcome. EuroLinux Distro Bugs and RFC","title":"Submitting a Request for Change"},{"location":"jumpstarts/9-beta-jumpstart/#submitting-a-bug-report","text":"We decided that submitting bug reports should not involve registration into some nasty miserable software. At the very same time, we know that most open-source developers have GitHub profiles. This choice makes the decision making and work as transparent as possible. That's why we decided to use it as the primary way to submit bugs. EuroLinux Distro Bugs and RFC This repository allows you to stay in direct contact with EuroLinux developers.","title":"Submitting a Bug report"},{"location":"jumpstarts/9-beta-jumpstart/#other-ways-to-submit-a-bug-report","text":"support AT euro-linux dot com EuroLinux Support Portal (subscription required)","title":"Other ways to submit a bug report"},{"location":"jumpstarts/9-beta-jumpstart/#securityconfidential-bug-report","text":"Please use the e-mail provided above.","title":"Security/confidential bug report"},{"location":"jumpstarts/9-jumpstart/","text":"EuroLinux 9 Jump Start This document contains the necessary information to set up your first EuroLinux 9 installation. System Requirements x86_64 (64 bit AMD/Intel architecture) Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 1 GiB or 768 MiB with swap space 2 GiB 1.5 GiB per logical CPU Storage 5 GB (excluding swap) 10GB 20GB Logical CPU means Physical CPU (including Hyper-Threading) or vCPU (virtual CPU). Warning It might be impossible to install EuroLinux on a system that does not meet recommended requirements. About absolute minimums for cloud deployment During our internal testing, we were able to boot and use very basic and already installed services on Virtual Machine with only 340 MiB of RAM. However, without additional memory or at least swap space available, things like updating the system will result in actions of Kernel Out of Memory (OOM) Killer. You can try it yourself with EuroLinux Vagrant boxes and the following Vagrantfile: Vagrant . configure ( \"2\" ) do | config | config . vm . box = \"eurolinux-vagrant/eurolinux-9\" # Explicitly disable vbguest because we are using rsync if Vagrant . has_plugin? ( \"vagrant-vbguest\" ) config . vbguest . auto_update = false end config . vm . provider \"virtualbox\" do | vb | vb . memory = \"340\" vb . cpus = 1 end config . vm . provider \"libvirt\" do | vb | vb . memory = \"340\" vb . cpus = 1 end end It's also possible to install EuroLinux on less than 5 GB of space, but it also requires extra attention. All absolute minimums for cloud deployments described above are not officially supported by EuroLinux. How to install EuroLinux 9 from ISO Where can you obtain ISO? We distribute EuroLinux in a responsible open core model. Because of that, you might download EuroLinux from different sources. The two primary sources are: https://fbi.cdn.euro-linux.com/isos/ open for everyone https://customerportal.euro-linux.com for EuroLinux customers The only difference is that Customer Portal keeps older versions, when CDN, that is used for mirroring, keeps only two of the latest ISOs for each version to save space (single EuroLinux BaseOS ISO might take up to 8 GB). If you are running a huge deployment, you might consider setting up your own mirror and download ISOs from Intranet. How to check ISO integrity During download, many things can happen - from a network or sending host failure to single-bit error. To check if ISO is undamaged, there are two mechanisms in place. For each EuroLinux ISO there's a file with its checksums and appropriate digest algorithms. Its name says, which algorithm was used to calculate the cryptographic digest. For example, you can browse https://fbi.cdn.euro-linux.com/isos/ and read the sha1sums.txt file. When the ISO download is completed, you can invoke the sha1sum command on the ISO file and check if checksums match. $ sha1sum EL-9.0-x86_64-20220613-appstream.iso d78eebb3472ddff2dcaf110907e42ccee0367f70 EL-9.0-x86_64-20220613-appstream.iso The second mechanism for checking ISO integrity is built-in inside the installer itself. When you start the installation, use the Test this media & install EuroLinux 9 entry: After booting up, the ISO checking process will start. Installation with GUI Because even a minimal installation uses a GUI the whole process is simple and straightforward. EuroLinux 9, as well as previous versions, uses Anaconda installer that clearly informs the user what needs to be done in order to install the system. First, you have to choose the language that will be used during installation: Hint: since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines the default language by the automatic location detection feature - in this case you can see that Polish has been automatically chosen. After configuring the installer language you should see a menu similar to: Anaconda installer LOCALIZATION section: Keyboard - this section allows you to setup keyboard layouts, including the default keyboard layout, additional layouts and key combination to switch between them. Language support - additional languages packages that should be installed. Time & Date - configure the date, time zone, enable NTP and NTP servers. Anaconda installer SOFTWARE section: Configuring source of the installation Here you might configure the source of your installation. By default, the system installs from the ISO image itself. This is one of the officially supported ways to install EuroLinux . If a NIC (Network Interface Card) has been enabled in the Network & Host Name installer section, you might add additional EuroLinux repositories and/or other repositories. If you add EuroLinux repositories, the installer will automatically download newer version of the packages. EuroLinux 9 repositories: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/BaseOS/os Name: BaseOS URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/AppStream/os Name: AppStream URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/CRB/os Name: CRB Limited support. Hybrid network installation from both ISO and public repositories is not our primary goal in the QA process . Packages in EuroLinux repositories are regularly updated, and it might be impossible to install a system from an external source. Depending on the state of the upstream, we might not fix a potential issue. Below you can see an example configuration that was used to install a system - in this case the default 'Minimal' repository has been provided as the only one: After changing the installation source, you will have to confirm Software Selection . Software Selection Software Selection allows you to customize which packages will be installed. You might choose from base environment groups like Server with GUI , Workstation or Minimal Install - since we are demonstrating with the minimal ISO image , only the last option is available. You can also install additional package groups. Anaconda installer SYSTEM section: Installation selection allows choosing on which disk the system will be installed. If you want to have a fully encrypted system, you should enable encryption in this step. KDUMP allows choosing if KDUMP (Kernel crash dump collection mechanism) should be enabled. Network & Host Name - you can configure your system networking here Security Profile - you can setup an additional openscap policy here Anaconda installer USER SETTINGS section: Root Password - by default, the root user is disabled. If a user is created in User Creation section, the root account can stay disabled User Creation section allows creating a regular user in the system. If the Make this user administrator option is checked, the root account can be disabled. After applying all the necessary changes , the installation can be started with the \"Begin Installation\" button. Disk partition recommended minimums You need at least the following partitions. /boot for Linux kernel and init ramdisks - 1GB / (root partition) - at least 10 GB (a very minimal system might use as little as 2GB - but it requires extra attention and is not officially supported by EuroLinux) For UEFI, an EFI system partition is also required. /boot/efi - at least 100MB If your storage allows it, the following partitions are also highly recommended: swap - 1GB or more depending on the system RAM and workload. Swap is also required for hibernation. Depending on the workload of the system, it should be at least as spacious as system RAM. /home - at least 1GB - but in most cases, if / can be as big as 80GB, then /home/ usually takes the rest of the free space Installing EuroLinux in basic graphic mode Suppose there is a problem loading/running your graphics card driver (it might results in a black screen/error message or graphical artifacts). It's possible to install EuroLinux in basic graphics mode. To do so, choose Troubleshooting on the welcome menu, and then Install EuroLinux 9 in basic graphics mode . From this point the process is identical to a standard installation with GUI. Installing EuroLinux in text mode To install EuroLinux in text mode: Boot EuroLinux ISO Press Esc to stop installation options selection timeout Press Tab Add inst.text to the end of the kernel boot command line Press Enter Since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines that we can start VNC or use text mode entirely. Since we are demonstrating the text mode installation, we choose the latter option. Before running the installation you have to provide all the necessary information (represented as ! in selection). It's a good idea to refresh the menu with R + Enter command shortly after the installer started. After customization you are ready to start your installation. Other possibilities EuroLinux can also be installed in the following manner: Automated installation with a kickstart file. Installation with PXE Installation via VNC (as mentioned above) Please consult upstream documentation about these topics. Using EuroLinux From this point, you can use EuroLinux as any other RHEL\u2122 based distribution. Submitting a Request for Change We truly care. If there is something that you believe could/should be changed/improved in the EuroLinux distribution and does not break compatibility with the upstream project, then drop us the issue on GitHub! All contributors are extremely welcome. EuroLinux Distro Bugs and RFC Submitting a Bug report We decided that submitting bug reports should not involve registration into some nasty miserable software. At the very same time, we know that most open-source developers have GitHub profiles. This choice makes the decision making and work as transparent as possible. That's why we decided to use it as the primary way to submit bugs. EuroLinux Distro Bugs and RFC This repository allows you to stay in direct contact with EuroLinux developers. Other ways to submit a bug report support AT euro-linux dot com EuroLinux Support Portal (subscription required) Security/confidential bug report Please use the e-mail provided above.","title":"EuroLinux 9 Jump Start"},{"location":"jumpstarts/9-jumpstart/#eurolinux-9-jump-start","text":"This document contains the necessary information to set up your first EuroLinux 9 installation.","title":"EuroLinux 9 Jump Start"},{"location":"jumpstarts/9-jumpstart/#system-requirements","text":"","title":"System Requirements"},{"location":"jumpstarts/9-jumpstart/#x86_64-64-bit-amdintel-architecture","text":"Minimal and recommended requirements are following: Resource Absolute minimal requirements for cloud deployment Minimal Recommended Logical CPU 1 1 1 RAM 1 GiB or 768 MiB with swap space 2 GiB 1.5 GiB per logical CPU Storage 5 GB (excluding swap) 10GB 20GB Logical CPU means Physical CPU (including Hyper-Threading) or vCPU (virtual CPU). Warning It might be impossible to install EuroLinux on a system that does not meet recommended requirements.","title":"x86_64 (64 bit AMD/Intel architecture)"},{"location":"jumpstarts/9-jumpstart/#about-absolute-minimums-for-cloud-deployment","text":"During our internal testing, we were able to boot and use very basic and already installed services on Virtual Machine with only 340 MiB of RAM. However, without additional memory or at least swap space available, things like updating the system will result in actions of Kernel Out of Memory (OOM) Killer. You can try it yourself with EuroLinux Vagrant boxes and the following Vagrantfile: Vagrant . configure ( \"2\" ) do | config | config . vm . box = \"eurolinux-vagrant/eurolinux-9\" # Explicitly disable vbguest because we are using rsync if Vagrant . has_plugin? ( \"vagrant-vbguest\" ) config . vbguest . auto_update = false end config . vm . provider \"virtualbox\" do | vb | vb . memory = \"340\" vb . cpus = 1 end config . vm . provider \"libvirt\" do | vb | vb . memory = \"340\" vb . cpus = 1 end end It's also possible to install EuroLinux on less than 5 GB of space, but it also requires extra attention. All absolute minimums for cloud deployments described above are not officially supported by EuroLinux.","title":"About absolute minimums for cloud deployment"},{"location":"jumpstarts/9-jumpstart/#how-to-install-eurolinux-9-from-iso","text":"","title":"How to install EuroLinux 9 from ISO"},{"location":"jumpstarts/9-jumpstart/#where-can-you-obtain-iso","text":"We distribute EuroLinux in a responsible open core model. Because of that, you might download EuroLinux from different sources. The two primary sources are: https://fbi.cdn.euro-linux.com/isos/ open for everyone https://customerportal.euro-linux.com for EuroLinux customers The only difference is that Customer Portal keeps older versions, when CDN, that is used for mirroring, keeps only two of the latest ISOs for each version to save space (single EuroLinux BaseOS ISO might take up to 8 GB). If you are running a huge deployment, you might consider setting up your own mirror and download ISOs from Intranet.","title":"Where can you obtain ISO?"},{"location":"jumpstarts/9-jumpstart/#how-to-check-iso-integrity","text":"During download, many things can happen - from a network or sending host failure to single-bit error. To check if ISO is undamaged, there are two mechanisms in place. For each EuroLinux ISO there's a file with its checksums and appropriate digest algorithms. Its name says, which algorithm was used to calculate the cryptographic digest. For example, you can browse https://fbi.cdn.euro-linux.com/isos/ and read the sha1sums.txt file. When the ISO download is completed, you can invoke the sha1sum command on the ISO file and check if checksums match. $ sha1sum EL-9.0-x86_64-20220613-appstream.iso d78eebb3472ddff2dcaf110907e42ccee0367f70 EL-9.0-x86_64-20220613-appstream.iso The second mechanism for checking ISO integrity is built-in inside the installer itself. When you start the installation, use the Test this media & install EuroLinux 9 entry: After booting up, the ISO checking process will start.","title":"How to check ISO integrity"},{"location":"jumpstarts/9-jumpstart/#installation-with-gui","text":"Because even a minimal installation uses a GUI the whole process is simple and straightforward. EuroLinux 9, as well as previous versions, uses Anaconda installer that clearly informs the user what needs to be done in order to install the system. First, you have to choose the language that will be used during installation: Hint: since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines the default language by the automatic location detection feature - in this case you can see that Polish has been automatically chosen. After configuring the installer language you should see a menu similar to:","title":"Installation with GUI"},{"location":"jumpstarts/9-jumpstart/#anaconda-installer-localization-section","text":"Keyboard - this section allows you to setup keyboard layouts, including the default keyboard layout, additional layouts and key combination to switch between them. Language support - additional languages packages that should be installed. Time & Date - configure the date, time zone, enable NTP and NTP servers.","title":"Anaconda installer LOCALIZATION section:"},{"location":"jumpstarts/9-jumpstart/#anaconda-installer-software-section","text":"","title":"Anaconda installer SOFTWARE section:"},{"location":"jumpstarts/9-jumpstart/#configuring-source-of-the-installation","text":"Here you might configure the source of your installation. By default, the system installs from the ISO image itself. This is one of the officially supported ways to install EuroLinux . If a NIC (Network Interface Card) has been enabled in the Network & Host Name installer section, you might add additional EuroLinux repositories and/or other repositories. If you add EuroLinux repositories, the installer will automatically download newer version of the packages. EuroLinux 9 repositories: URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/BaseOS/os Name: BaseOS URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/AppStream/os Name: AppStream URL: https://fbi.cdn.euro-linux.com/dist/eurolinux/server/9/$basearch/CRB/os Name: CRB Limited support. Hybrid network installation from both ISO and public repositories is not our primary goal in the QA process . Packages in EuroLinux repositories are regularly updated, and it might be impossible to install a system from an external source. Depending on the state of the upstream, we might not fix a potential issue. Below you can see an example configuration that was used to install a system - in this case the default 'Minimal' repository has been provided as the only one: After changing the installation source, you will have to confirm Software Selection .","title":"Configuring source of the installation"},{"location":"jumpstarts/9-jumpstart/#software-selection","text":"Software Selection allows you to customize which packages will be installed. You might choose from base environment groups like Server with GUI , Workstation or Minimal Install - since we are demonstrating with the minimal ISO image , only the last option is available. You can also install additional package groups.","title":"Software Selection"},{"location":"jumpstarts/9-jumpstart/#anaconda-installer-system-section","text":"Installation selection allows choosing on which disk the system will be installed. If you want to have a fully encrypted system, you should enable encryption in this step. KDUMP allows choosing if KDUMP (Kernel crash dump collection mechanism) should be enabled. Network & Host Name - you can configure your system networking here Security Profile - you can setup an additional openscap policy here","title":"Anaconda installer SYSTEM section:"},{"location":"jumpstarts/9-jumpstart/#anaconda-installer-user-settings-section","text":"Root Password - by default, the root user is disabled. If a user is created in User Creation section, the root account can stay disabled User Creation section allows creating a regular user in the system. If the Make this user administrator option is checked, the root account can be disabled. After applying all the necessary changes , the installation can be started with the \"Begin Installation\" button.","title":"Anaconda installer USER SETTINGS section:"},{"location":"jumpstarts/9-jumpstart/#disk-partition-recommended-minimums","text":"You need at least the following partitions. /boot for Linux kernel and init ramdisks - 1GB / (root partition) - at least 10 GB (a very minimal system might use as little as 2GB - but it requires extra attention and is not officially supported by EuroLinux) For UEFI, an EFI system partition is also required. /boot/efi - at least 100MB If your storage allows it, the following partitions are also highly recommended: swap - 1GB or more depending on the system RAM and workload. Swap is also required for hibernation. Depending on the workload of the system, it should be at least as spacious as system RAM. /home - at least 1GB - but in most cases, if / can be as big as 80GB, then /home/ usually takes the rest of the free space","title":"Disk partition recommended minimums"},{"location":"jumpstarts/9-jumpstart/#installing-eurolinux-in-basic-graphic-mode","text":"Suppose there is a problem loading/running your graphics card driver (it might results in a black screen/error message or graphical artifacts). It's possible to install EuroLinux in basic graphics mode. To do so, choose Troubleshooting on the welcome menu, and then Install EuroLinux 9 in basic graphics mode . From this point the process is identical to a standard installation with GUI.","title":"Installing EuroLinux in basic graphic mode"},{"location":"jumpstarts/9-jumpstart/#installing-eurolinux-in-text-mode","text":"To install EuroLinux in text mode: Boot EuroLinux ISO Press Esc to stop installation options selection timeout Press Tab Add inst.text to the end of the kernel boot command line Press Enter Since the Anaconda installer on EuroLinux 9 activates a network connection automatically if applicable, it also determines that we can start VNC or use text mode entirely. Since we are demonstrating the text mode installation, we choose the latter option. Before running the installation you have to provide all the necessary information (represented as ! in selection). It's a good idea to refresh the menu with R + Enter command shortly after the installer started. After customization you are ready to start your installation.","title":"Installing EuroLinux in text mode"},{"location":"jumpstarts/9-jumpstart/#other-possibilities","text":"EuroLinux can also be installed in the following manner: Automated installation with a kickstart file. Installation with PXE Installation via VNC (as mentioned above) Please consult upstream documentation about these topics.","title":"Other possibilities"},{"location":"jumpstarts/9-jumpstart/#using-eurolinux","text":"From this point, you can use EuroLinux as any other RHEL\u2122 based distribution.","title":"Using EuroLinux"},{"location":"jumpstarts/9-jumpstart/#submitting-a-request-for-change","text":"We truly care. If there is something that you believe could/should be changed/improved in the EuroLinux distribution and does not break compatibility with the upstream project, then drop us the issue on GitHub! All contributors are extremely welcome. EuroLinux Distro Bugs and RFC","title":"Submitting a Request for Change"},{"location":"jumpstarts/9-jumpstart/#submitting-a-bug-report","text":"We decided that submitting bug reports should not involve registration into some nasty miserable software. At the very same time, we know that most open-source developers have GitHub profiles. This choice makes the decision making and work as transparent as possible. That's why we decided to use it as the primary way to submit bugs. EuroLinux Distro Bugs and RFC This repository allows you to stay in direct contact with EuroLinux developers.","title":"Submitting a Bug report"},{"location":"jumpstarts/9-jumpstart/#other-ways-to-submit-a-bug-report","text":"support AT euro-linux dot com EuroLinux Support Portal (subscription required)","title":"Other ways to submit a bug report"},{"location":"jumpstarts/9-jumpstart/#securityconfidential-bug-report","text":"Please use the e-mail provided above.","title":"Security/confidential bug report"},{"location":"jumpstarts/container-jumpstart/","text":"EuroLinux Containers JumpStart Basics Using EuroLinux container images is easy. We provide multiple containers and their versions. The most important are base images for EuroLinux 7 (with FBI [Free Base Image] repository) and EuroLinux 8 (with complete repositories - EuroLinux 8 is freely available). All EuroLinux container images are OCI standard container images. You can download them from two primary sources: Docker Hub - EuroLinux 8 Docker Hub - EuroLinux 7 Quay - EuroLinux 8 Quay - EuroLinux 7 EuroLinux images can be run with any OCI standardized container runtimes such as runC (Docker/Moby project) or crun (Podman/Buildah/CRI-O). To download the image: Docker Hub: docker pull eurolinux/eurolinux-8 Quay.IO: podman pull quay.io/eurolinux/eurolinux-8 To run a container that will be removed after process exit. You might use: docker run -rm -ti eurolinux/eurolinux-8 Inside the container, you can check the system version bash-4.4# cat /etc/el-release EuroLinux release 8.5 (Tirana) To detach the container from the console, add -d flag to docker/podman run command. docker run -rm -ti -d --name eurolinux eurolinux/eurolinux-8 then run: docker exec -it eurolinux bash to enter the console of a container. Other containers As a company, we create and support multiple containers, including other Enterprise Linux distributions. For example, we provide: Docker Hub - AlmaLinux Docker Hub - Rocky Quay - AlmaLinux Quay - Rocky Other containers that we build are: Oracle Linux Scientific Linux CentOS and CentOS stream You can visit our organization page on the Docker Hub to find all containers that we officially support. Older Versions If you want to use the previous version of the EuroLinux container, you must find the desired tag. Example for EuroLinux 8: Docker Hub - EuroLinux 8 - tags Quay - EuroLinux - tags Request for Change/Comment and Bug report repository You can request a change, leave a comment or report a bug in this EuroLinux containers RFC repository.","title":"EuroLinux Containers JumpStart"},{"location":"jumpstarts/container-jumpstart/#eurolinux-containers-jumpstart","text":"","title":"EuroLinux Containers JumpStart"},{"location":"jumpstarts/container-jumpstart/#basics","text":"Using EuroLinux container images is easy. We provide multiple containers and their versions. The most important are base images for EuroLinux 7 (with FBI [Free Base Image] repository) and EuroLinux 8 (with complete repositories - EuroLinux 8 is freely available). All EuroLinux container images are OCI standard container images. You can download them from two primary sources: Docker Hub - EuroLinux 8 Docker Hub - EuroLinux 7 Quay - EuroLinux 8 Quay - EuroLinux 7 EuroLinux images can be run with any OCI standardized container runtimes such as runC (Docker/Moby project) or crun (Podman/Buildah/CRI-O). To download the image: Docker Hub: docker pull eurolinux/eurolinux-8 Quay.IO: podman pull quay.io/eurolinux/eurolinux-8 To run a container that will be removed after process exit. You might use: docker run -rm -ti eurolinux/eurolinux-8 Inside the container, you can check the system version bash-4.4# cat /etc/el-release EuroLinux release 8.5 (Tirana) To detach the container from the console, add -d flag to docker/podman run command. docker run -rm -ti -d --name eurolinux eurolinux/eurolinux-8 then run: docker exec -it eurolinux bash to enter the console of a container.","title":"Basics"},{"location":"jumpstarts/container-jumpstart/#other-containers","text":"As a company, we create and support multiple containers, including other Enterprise Linux distributions. For example, we provide: Docker Hub - AlmaLinux Docker Hub - Rocky Quay - AlmaLinux Quay - Rocky Other containers that we build are: Oracle Linux Scientific Linux CentOS and CentOS stream You can visit our organization page on the Docker Hub to find all containers that we officially support.","title":"Other containers"},{"location":"jumpstarts/container-jumpstart/#older-versions","text":"If you want to use the previous version of the EuroLinux container, you must find the desired tag. Example for EuroLinux 8: Docker Hub - EuroLinux 8 - tags Quay - EuroLinux - tags","title":"Older Versions"},{"location":"jumpstarts/container-jumpstart/#request-for-changecomment-and-bug-report-repository","text":"You can request a change, leave a comment or report a bug in this EuroLinux containers RFC repository.","title":"Request for Change/Comment and Bug report repository"},{"location":"jumpstarts/vagrant-jumpstart/","text":"Vagrant Jumpstart Introduction Ever wanted to create a development environment that is guaranteed to work flawlessly on several developers' workstations without the It works on my machine! excuses? Well, now you can! Just get Vagrant, write your specification and share it with coworkers! Requirements Vagrant will be managing the virtual machines of the backend provider of your choice . If you find out it's not listed, consider checking if there's a plugin-based implementation. Make sure you have a supported provider installed - we'll be using VirtualBox in this guide. You can use our VirtualBox installation guide as a reference. Installation on EuroLinux 8 Simply run these commands and you're ready to go: sudo dnf config-manager \\ --add-repo=https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo sudo dnf install vagrant -y EuroLinux Boxes A box is a format that defines: an image of an operating system with preinstalled software, a provider for that image and its version - it's a ready-made appliance for that provider to run. This appliance works the same across people's workstations, which most likely will have differences in configuration and potentially different providers or even operating systems. That is as long as they use a provider, which the box is built for. EuroLinux Vagrant boxes are available at: https://app.vagrantup.com/eurolinux-vagrant Let's use the box eurolinux-vagrant/eurolinux-8 as an example. Box details See the details of the box - multiple providers, that the box has been built for, are listed along with the box versions and build dates. When writing your specification, you'll be able to choose from them as you wish. Run the box Here's a basic procedure for running a Vagrant environment (a virtual machine, which uses our box) in a separate directory: mkdir el8-vagrant cd el8-vagrant/ vagrant init eurolinux-vagrant/eurolinux-8 vagrant up vagrant ssh You should now be connected to the machine and able to perform your desired operations inside it. Go ahead, play around, install your favourite developer tools, build an awesome, advanced, multi-component application and be sure everyone's able to deploy it on their workstations without any hassle! What about the specification mentioned earlier? - Vagrantfile Once you've ran the commands above, you'll have a Vagrantfile in the el8-vagrant directory. Take a look, what's inside. You'll be greeted with an introduction, references and lots of common options along with comments explaining them: # The most common configuration options are documented and commented below. # For a complete reference, please see the online documentation at # https://docs.vagrantup.com. As you've already ran the box as explained in the previous section, you can see that there's no necessity to tweak anything inside Vagrantfile. The parameters that you can tweak, e.g. the virtual machine's memory or the amount of CPUs you should adapt to your work - e.g. if you need additional resources for developing/running your application, go ahead and increase them. Once that's done, check out if they can be reduced once you know your software resource requirements. Depending on the task you want to achieve, whether it be a ready-made appliance or a base virtual system that gets provisioned with your application and its dependencies or something else, that's when changes to the specification must be made - e.g. the additional provisioning procedure shall be written. As the comment quoted above says, refer to the comments the Vagrantfile provided for common options explanation. Once you know their purpose, try them out! Get comfortable with them and read Upstream's documentation for additional info, tips and more advanced, cool possibilities - such as a multi-machine infrastructure defined in a single Vagrantfile. Additional resources Upstream's official website Discover Vagrant Boxes - using EuroLinux as an example Upstream's online documentation , worth mentioning once more","title":"Vagrant Jumpstart"},{"location":"jumpstarts/vagrant-jumpstart/#vagrant-jumpstart","text":"","title":"Vagrant Jumpstart"},{"location":"jumpstarts/vagrant-jumpstart/#introduction","text":"Ever wanted to create a development environment that is guaranteed to work flawlessly on several developers' workstations without the It works on my machine! excuses? Well, now you can! Just get Vagrant, write your specification and share it with coworkers!","title":"Introduction"},{"location":"jumpstarts/vagrant-jumpstart/#requirements","text":"Vagrant will be managing the virtual machines of the backend provider of your choice . If you find out it's not listed, consider checking if there's a plugin-based implementation. Make sure you have a supported provider installed - we'll be using VirtualBox in this guide. You can use our VirtualBox installation guide as a reference.","title":"Requirements"},{"location":"jumpstarts/vagrant-jumpstart/#installation-on-eurolinux-8","text":"Simply run these commands and you're ready to go: sudo dnf config-manager \\ --add-repo=https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo sudo dnf install vagrant -y","title":"Installation on EuroLinux 8"},{"location":"jumpstarts/vagrant-jumpstart/#eurolinux-boxes","text":"A box is a format that defines: an image of an operating system with preinstalled software, a provider for that image and its version - it's a ready-made appliance for that provider to run. This appliance works the same across people's workstations, which most likely will have differences in configuration and potentially different providers or even operating systems. That is as long as they use a provider, which the box is built for. EuroLinux Vagrant boxes are available at: https://app.vagrantup.com/eurolinux-vagrant Let's use the box eurolinux-vagrant/eurolinux-8 as an example.","title":"EuroLinux Boxes"},{"location":"jumpstarts/vagrant-jumpstart/#box-details","text":"See the details of the box - multiple providers, that the box has been built for, are listed along with the box versions and build dates. When writing your specification, you'll be able to choose from them as you wish.","title":"Box details"},{"location":"jumpstarts/vagrant-jumpstart/#run-the-box","text":"Here's a basic procedure for running a Vagrant environment (a virtual machine, which uses our box) in a separate directory: mkdir el8-vagrant cd el8-vagrant/ vagrant init eurolinux-vagrant/eurolinux-8 vagrant up vagrant ssh You should now be connected to the machine and able to perform your desired operations inside it. Go ahead, play around, install your favourite developer tools, build an awesome, advanced, multi-component application and be sure everyone's able to deploy it on their workstations without any hassle!","title":"Run the box"},{"location":"jumpstarts/vagrant-jumpstart/#what-about-the-specification-mentioned-earlier-vagrantfile","text":"Once you've ran the commands above, you'll have a Vagrantfile in the el8-vagrant directory. Take a look, what's inside. You'll be greeted with an introduction, references and lots of common options along with comments explaining them: # The most common configuration options are documented and commented below. # For a complete reference, please see the online documentation at # https://docs.vagrantup.com. As you've already ran the box as explained in the previous section, you can see that there's no necessity to tweak anything inside Vagrantfile. The parameters that you can tweak, e.g. the virtual machine's memory or the amount of CPUs you should adapt to your work - e.g. if you need additional resources for developing/running your application, go ahead and increase them. Once that's done, check out if they can be reduced once you know your software resource requirements. Depending on the task you want to achieve, whether it be a ready-made appliance or a base virtual system that gets provisioned with your application and its dependencies or something else, that's when changes to the specification must be made - e.g. the additional provisioning procedure shall be written. As the comment quoted above says, refer to the comments the Vagrantfile provided for common options explanation. Once you know their purpose, try them out! Get comfortable with them and read Upstream's documentation for additional info, tips and more advanced, cool possibilities - such as a multi-machine infrastructure defined in a single Vagrantfile.","title":"What about the specification mentioned earlier? - Vagrantfile"},{"location":"jumpstarts/vagrant-jumpstart/#additional-resources","text":"Upstream's official website Discover Vagrant Boxes - using EuroLinux as an example Upstream's online documentation , worth mentioning once more","title":"Additional resources"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/","text":"EuroLinux Linux distribution capabilities and limits This document describes the technology capabilities and limits for EuroLinux 6, 7, 8 and 9. Some are theoretical, as they are connected with source code/projects used in the system. Minimal limits represent limits for the systems for which support is generally available by the EuroLinux company. Our dedicated solutions like: system rebuilds with Gaia build stack EuroLinux container images EuroLinux cloud images EuroLinux for edge computing EuroLinux ARM 64 for IoT containers running on the EuroLinux container platform or any other Kubernetes-based platform might run and be supported on the less resources than described in this document. The theoretical limit (connected with a version of the software used) is marked as (LIMIT) , when limit supported and tested by upstream is provided as default for EuroLinux. TBA means - To Be Announced . Minimum logical CPU All systems, physical or virtual, require at minimum 1 logical (physical or virtual) CPU core. Maximum logical CPU Architecture EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 x86_64 448 (4096) 768 (5120) 768 (8192) 1792 (8192) ARM64 X X 256 512 (4096) Minimum memory These requirements are only for systems supported as VMs or Physical hosts. In most cases, it's possible to run a system without complications on less memory. The minimum requirements have been provided below because it might not be possible to support systems with less memory. Architecture EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 x86_64 Minimum 1 GiB, 1 GiB per logical core is recommended Minimum 1 GiB, 1 GiB per logical core is recommended Minimum 1 GiB, 1.5 GiB per logical core is recommended Minimum 1.5 GiB, 1.5 GiB per logical core is recommended ARM64 X X 2GiB 2GiB Maximum memory Architecture EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 x86_64 12TB (64TB) 12TB (64TB) 24TB (64TB) 48TB (64TB) ARM64 X X 1.5TB (256TB) 1.5TB (256TB) Minimum required disk space EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 1Gib Minimum, 5GiB recommended 5 GiB Minimum, 20 GiB recommended 10 GiB Minimum, 20 GiB recommended 10 GiB Minimum, 20 GiB recommended File systems and storage limits All filesystems in this document support ACL (Access Control List). Ext3 Ext3 is mostly a legacy filesystem. Please use Ext4 or XFS. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 2TiB 2TiB 2TiB 2TiB Maximum Filesystem Size 16TiB 16TiB 16TiB 16TiB Maximum Subdirectories or files in directory 32000 32000 32000 32000 Maximum symlink depth 8 8 8 8 Ext4 Ext4 is the default filesystem for EuroLinux 6. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 16TiB 16TiB 16TiB 16TiB Maximum Filesystem Size 1EiB 1EiB 1EiB 1EiB Maximum Subdirectories or files in directory 65000/unlimited with dir_nlink option 65000/unlimited with dir_nlink option 65000/unlimited with dir_nlink option 65000/unlimited with dir_nlink option Maximum symlink depth 8 8 8 8 XFS XFS is the default filesystem for in EuroLinux 7, 8 and 9. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 8EiB 8EiB 8EiB 8EiB Maximum Filesystem Size 16EiB 16EiB 1PiB 1PiB Maximum Subdirectories or files in directory unlimited unlimited unlimited unlimited Maximum symlink depth 8 8 8 8 GFS2 Global Filesystem 2 is part of EuroLinux Resilient Storage and High Availability add-ons that are freely available with subscription or free available in the Open Core model. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 8EiB 8EiB 8EiB 8EiB Maximum Filesystem Size 8EiB 8EiB 8EiB 8EiB Maximum Subdirectories or files in directory unlimited unlimited unlimited unlimited Maximum symlink depth unlimited unlimited unlimited unlimited Kernel and the most important components versions Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Base Linux Kernel version 2.6.34 3.10 4.18 5.14 Package Management RPM/Yum RPM/Yum RPM/Dnf, Flatpak RPM/Dnf, Flatpak System Init Upstart systemd systemd systemd Base GNU C Library (glibc) Version 2.12 2.17 2.28 2.34 Base (First) GCC version 4.4.7 4.8.5 8.2.1 (updated in newer versions) 11.2.1 (might be updated in the future) Base (First) LLVM version X X 7.0.1 (updated in newer versions) 13.0.0 (might be updated in the future) Default Desktop Gnome 2 Gnome 3 Gnome 3 Gnome 40 Office Suite LibreOffice LibreOffice LibreOffice LibreOffice Default Web Browser Firefox Firefox Firefox Firefox Default Mail Client Thunderbird Evolution or Thunderbird Evolution or Thunderbird Evolution or Thunderbird","title":"EuroLinux Linux distribution capabilities and limits"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#eurolinux-linux-distribution-capabilities-and-limits","text":"This document describes the technology capabilities and limits for EuroLinux 6, 7, 8 and 9. Some are theoretical, as they are connected with source code/projects used in the system. Minimal limits represent limits for the systems for which support is generally available by the EuroLinux company. Our dedicated solutions like: system rebuilds with Gaia build stack EuroLinux container images EuroLinux cloud images EuroLinux for edge computing EuroLinux ARM 64 for IoT containers running on the EuroLinux container platform or any other Kubernetes-based platform might run and be supported on the less resources than described in this document. The theoretical limit (connected with a version of the software used) is marked as (LIMIT) , when limit supported and tested by upstream is provided as default for EuroLinux. TBA means - To Be Announced .","title":"EuroLinux Linux distribution capabilities and limits"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#minimum-logical-cpu","text":"All systems, physical or virtual, require at minimum 1 logical (physical or virtual) CPU core.","title":"Minimum logical CPU"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#maximum-logical-cpu","text":"Architecture EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 x86_64 448 (4096) 768 (5120) 768 (8192) 1792 (8192) ARM64 X X 256 512 (4096)","title":"Maximum logical CPU"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#minimum-memory","text":"These requirements are only for systems supported as VMs or Physical hosts. In most cases, it's possible to run a system without complications on less memory. The minimum requirements have been provided below because it might not be possible to support systems with less memory. Architecture EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 x86_64 Minimum 1 GiB, 1 GiB per logical core is recommended Minimum 1 GiB, 1 GiB per logical core is recommended Minimum 1 GiB, 1.5 GiB per logical core is recommended Minimum 1.5 GiB, 1.5 GiB per logical core is recommended ARM64 X X 2GiB 2GiB","title":"Minimum memory"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#maximum-memory","text":"Architecture EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 x86_64 12TB (64TB) 12TB (64TB) 24TB (64TB) 48TB (64TB) ARM64 X X 1.5TB (256TB) 1.5TB (256TB)","title":"Maximum memory"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#minimum-required-disk-space","text":"EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 1Gib Minimum, 5GiB recommended 5 GiB Minimum, 20 GiB recommended 10 GiB Minimum, 20 GiB recommended 10 GiB Minimum, 20 GiB recommended","title":"Minimum required disk space"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#file-systems-and-storage-limits","text":"All filesystems in this document support ACL (Access Control List).","title":"File systems and storage limits"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#ext3","text":"Ext3 is mostly a legacy filesystem. Please use Ext4 or XFS. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 2TiB 2TiB 2TiB 2TiB Maximum Filesystem Size 16TiB 16TiB 16TiB 16TiB Maximum Subdirectories or files in directory 32000 32000 32000 32000 Maximum symlink depth 8 8 8 8","title":"Ext3"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#ext4","text":"Ext4 is the default filesystem for EuroLinux 6. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 16TiB 16TiB 16TiB 16TiB Maximum Filesystem Size 1EiB 1EiB 1EiB 1EiB Maximum Subdirectories or files in directory 65000/unlimited with dir_nlink option 65000/unlimited with dir_nlink option 65000/unlimited with dir_nlink option 65000/unlimited with dir_nlink option Maximum symlink depth 8 8 8 8","title":"Ext4"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#xfs","text":"XFS is the default filesystem for in EuroLinux 7, 8 and 9. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 8EiB 8EiB 8EiB 8EiB Maximum Filesystem Size 16EiB 16EiB 1PiB 1PiB Maximum Subdirectories or files in directory unlimited unlimited unlimited unlimited Maximum symlink depth 8 8 8 8","title":"XFS"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#gfs2","text":"Global Filesystem 2 is part of EuroLinux Resilient Storage and High Availability add-ons that are freely available with subscription or free available in the Open Core model. Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Maximum File Size 8EiB 8EiB 8EiB 8EiB Maximum Filesystem Size 8EiB 8EiB 8EiB 8EiB Maximum Subdirectories or files in directory unlimited unlimited unlimited unlimited Maximum symlink depth unlimited unlimited unlimited unlimited","title":"GFS2"},{"location":"knowledge-base/eurolinux-capabilities-and-limits/#kernel-and-the-most-important-components-versions","text":"Feature EuroLinux 6 EuroLinux 7 EuroLinux 8 EuroLinux 9 Base Linux Kernel version 2.6.34 3.10 4.18 5.14 Package Management RPM/Yum RPM/Yum RPM/Dnf, Flatpak RPM/Dnf, Flatpak System Init Upstart systemd systemd systemd Base GNU C Library (glibc) Version 2.12 2.17 2.28 2.34 Base (First) GCC version 4.4.7 4.8.5 8.2.1 (updated in newer versions) 11.2.1 (might be updated in the future) Base (First) LLVM version X X 7.0.1 (updated in newer versions) 13.0.0 (might be updated in the future) Default Desktop Gnome 2 Gnome 3 Gnome 3 Gnome 40 Office Suite LibreOffice LibreOffice LibreOffice LibreOffice Default Web Browser Firefox Firefox Firefox Firefox Default Mail Client Thunderbird Evolution or Thunderbird Evolution or Thunderbird Evolution or Thunderbird","title":"Kernel and the most important components versions"},{"location":"knowledge-base/unable-to-find-requested-software/","text":"Unable to Find Requested Software Environment EuroLinux 7 EuroLinux 8 Issue An error occurs during a search for missing components. A similar message is shown by GNOME Software: Unfortunately, the [...] you were searching for could not be found. Please see [...] for more information. Missing Package The package you are searching for is not available in EuroLinux base repositories. Missing Codec The codec you are searching for is not available in EuroLinux base repositories due to licensing reasons or patent encumbrance. Missing Hardware Support A kernel module or a driver is not available in EuroLinux base repositories due to licensing reasons that prohibit redistribution or is not yet in the upstream Linux kernel. Missing Font The font you are searching for is not available in EuroLinux base repositories. Missing MIME Support An application that supports operations on your file with its MIME type is not available in EuroLinux base repositories due to them being supported exclusively by a third party application or an application that runs only on a platform different than EuroLinux. Resolution If you would like to request for a certain component availability, please contact us .","title":"Unable to Find Requested Software"},{"location":"knowledge-base/unable-to-find-requested-software/#unable-to-find-requested-software","text":"","title":"Unable to Find Requested Software"},{"location":"knowledge-base/unable-to-find-requested-software/#environment","text":"EuroLinux 7 EuroLinux 8","title":"Environment"},{"location":"knowledge-base/unable-to-find-requested-software/#issue","text":"An error occurs during a search for missing components. A similar message is shown by GNOME Software: Unfortunately, the [...] you were searching for could not be found. Please see [...] for more information.","title":"Issue"},{"location":"knowledge-base/unable-to-find-requested-software/#missing-package","text":"The package you are searching for is not available in EuroLinux base repositories.","title":"Missing Package"},{"location":"knowledge-base/unable-to-find-requested-software/#missing-codec","text":"The codec you are searching for is not available in EuroLinux base repositories due to licensing reasons or patent encumbrance.","title":"Missing Codec"},{"location":"knowledge-base/unable-to-find-requested-software/#missing-hardware-support","text":"A kernel module or a driver is not available in EuroLinux base repositories due to licensing reasons that prohibit redistribution or is not yet in the upstream Linux kernel.","title":"Missing Hardware Support"},{"location":"knowledge-base/unable-to-find-requested-software/#missing-font","text":"The font you are searching for is not available in EuroLinux base repositories.","title":"Missing Font"},{"location":"knowledge-base/unable-to-find-requested-software/#missing-mime-support","text":"An application that supports operations on your file with its MIME type is not available in EuroLinux base repositories due to them being supported exclusively by a third party application or an application that runs only on a platform different than EuroLinux.","title":"Missing MIME Support"},{"location":"knowledge-base/unable-to-find-requested-software/#resolution","text":"If you would like to request for a certain component availability, please contact us .","title":"Resolution"},{"location":"release-notes/8.3/","text":"EuroLinux 8.3 Release Notes Dynamic programming languages Later versions of the following components are now available: Node.js 14 - module nodejs stream 14 Perl 5.30 - module perl stream 5.30 PHP 7.4 - module php stream 7.4 Ruby 2.7 - module ruby stream 2.7 Java 11 with OpenJDK - new version of Open Java Development Kit (OpenJDK) is now available as standalone rpms packages. Web and Database servers Later versions of the following components are now available nginx 1.18 - module nginx stream 1.18 Compiler toolsets The following compiler toolsets have been updated in EL 8.3: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 10.0.1 - module llvm-toolset Rust Toolset 1.45.2 - module rust-toolset Go Toolset 1.14.7 - module go-toolset Security EuroLinux 8.3 provides Ansible roles for automated deployments of Policy-Based Decryption (PBD) solutions using Clevis and Tang . New version of the package rhel-system-roles adds an Ansible role for EuroLinux logging through Rsyslog . The USBGuard framework now provides: its own SELinux policy notification for user in GUI multiple enhancement and bug fixes General updates and improvements Git was updated to version 2.27 Squid was updated to version 4.11 The Tuned system tuning tool has been rebased to version 2.13. This version adds support for architecture-dependent tuning and ability to use multiple include directives. Identity Management The Rivest Cipher 4 (RC4) cipher suite, the default encryption type for users, services, and trusts between Active Directory domains in an Active Directory forest, has been deprecated in EuroLinux 8. For compatibility, this release introduces cryptographic subpolicy named AD-SUPPORT to enable support for this deprecated encryption type. The new subpolicy allows you to use RC4 with EuroLinux IPA and SSSD Active Directory. The web console The cockpit web console provides an option to switch between superuser access and limited access from inside of a user session. Desktop and graphics The Direct Rendering Manager (DRM) kernel graphics subsystem has been rebased to upstream Linux kernel version 5.6. It provides a number of enhancements over the previous versions, including support for new GPUs and APUs.","title":"EuroLinux 8.3 Release Notes"},{"location":"release-notes/8.3/#eurolinux-83-release-notes","text":"","title":"EuroLinux 8.3 Release Notes"},{"location":"release-notes/8.3/#dynamic-programming-languages","text":"Later versions of the following components are now available: Node.js 14 - module nodejs stream 14 Perl 5.30 - module perl stream 5.30 PHP 7.4 - module php stream 7.4 Ruby 2.7 - module ruby stream 2.7 Java 11 with OpenJDK - new version of Open Java Development Kit (OpenJDK) is now available as standalone rpms packages.","title":"Dynamic programming languages"},{"location":"release-notes/8.3/#web-and-database-servers","text":"Later versions of the following components are now available nginx 1.18 - module nginx stream 1.18","title":"Web and Database servers"},{"location":"release-notes/8.3/#compiler-toolsets","text":"The following compiler toolsets have been updated in EL 8.3: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 10.0.1 - module llvm-toolset Rust Toolset 1.45.2 - module rust-toolset Go Toolset 1.14.7 - module go-toolset","title":"Compiler toolsets"},{"location":"release-notes/8.3/#security","text":"EuroLinux 8.3 provides Ansible roles for automated deployments of Policy-Based Decryption (PBD) solutions using Clevis and Tang . New version of the package rhel-system-roles adds an Ansible role for EuroLinux logging through Rsyslog . The USBGuard framework now provides: its own SELinux policy notification for user in GUI multiple enhancement and bug fixes","title":"Security"},{"location":"release-notes/8.3/#general-updates-and-improvements","text":"Git was updated to version 2.27 Squid was updated to version 4.11 The Tuned system tuning tool has been rebased to version 2.13. This version adds support for architecture-dependent tuning and ability to use multiple include directives.","title":"General updates and improvements"},{"location":"release-notes/8.3/#identity-management","text":"The Rivest Cipher 4 (RC4) cipher suite, the default encryption type for users, services, and trusts between Active Directory domains in an Active Directory forest, has been deprecated in EuroLinux 8. For compatibility, this release introduces cryptographic subpolicy named AD-SUPPORT to enable support for this deprecated encryption type. The new subpolicy allows you to use RC4 with EuroLinux IPA and SSSD Active Directory.","title":"Identity Management"},{"location":"release-notes/8.3/#the-web-console","text":"The cockpit web console provides an option to switch between superuser access and limited access from inside of a user session.","title":"The web console"},{"location":"release-notes/8.3/#desktop-and-graphics","text":"The Direct Rendering Manager (DRM) kernel graphics subsystem has been rebased to upstream Linux kernel version 5.6. It provides a number of enhancements over the previous versions, including support for new GPUs and APUs.","title":"Desktop and graphics"},{"location":"release-notes/8.4-beta/","text":"EuroLinux Beta 8.4 Release Notes Dynamic programming languages Later versions of the following components are now available: Python 3.9 - module python39 stream 39. SWIG 4.0 - module swig stream 4.0 Web and Database servers Later versions of the following components are now available: Redis 6 - module redis stream 6 PostgreSQL 13 - module postgresql stream 13 MariaDB 10.5 - module mariadb stream 10.5 Compiler Toolset The following compiler toolsets have been updated in EL 8.4: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 11.0.0 - module llvm-toolset stream rhel Rust Toolset 1.49.0 - module rust-toolset stream rhel Go Toolset 1.15.7 - module go-toolset stream rhel There is new a module containing Persistent Memory Development Kit (PMDK): PMDK - module pmkd stream 1_fileformat_v6 Security IPsec VPN provided by Libreswan now supports TCP encapsulation and security labels for IKEv2. The OpenSCAP packages have been rebased to version 1.3.4, scap-security-guide has been rebased to version 0.1.54. The fapolicyd framework now provides integrity checking, and the RPM plugin now registers any system update handled by either the YUM package manager or the RPM Package Manager. General updates and improvements EuroLinux 8.4 offers now Subversion 1.14 . It's packed as the module subversion with stream 1.14. The 1.10 stream remain the default module that contains this package. New module eclipse . This module has Eclipse IDE but is commonly used to build Java related packages. The nmstate packages provide a library and the nmstatectl command-line utility to manage host network settings declaratively. Nmstate is a network API for hosts and is fully supported in EuroLinux 8.4. The Multi-protocol Label Switching (MPLS) is an in-kernel data-forwarding mechanism to route traffic flow across enterprise networks. The iproute2 utility introduces three new traffic control actions. EuroLinux 8 kernel now uses proactive compaction that regularly initiates memory compaction work before a request for an allocation is made. Therefore, latency for specific memory allocation requests is lowered . EuroLinux 8 kernel has now a new implementation of a slab memory controller for control groups. EuroLinux kernel now supports the time namespace feature. It allows changing date and time inside the Linux containers. EuroLinux 8 kernel now supports the Error Detection and Correction (EDAC) in 8th and 9th generation Intel Core Processors. There are changes in the pacemaker resource agent - it now can detect failures asynchronously and inject a failure into Pacemaker immediately without waiting for the following monitor interval. Batteries Batteries repository contains packages that are needed to rebuild distribution but are not included in upstream repositories. Right now, this repository includes more than 2000 packages for each buildroot. Multiple batteries were updated for this release there including: mdds meson spirv-headers fontforge multiple python packages modules for bootstrapping python39 Additional resources Red Hat 8.4 Release-Notes part of our release notes, are loosely based on this document.","title":"EuroLinux Beta 8.4 Release Notes"},{"location":"release-notes/8.4-beta/#eurolinux-beta-84-release-notes","text":"","title":"EuroLinux Beta 8.4 Release Notes"},{"location":"release-notes/8.4-beta/#dynamic-programming-languages","text":"Later versions of the following components are now available: Python 3.9 - module python39 stream 39. SWIG 4.0 - module swig stream 4.0","title":"Dynamic programming languages"},{"location":"release-notes/8.4-beta/#web-and-database-servers","text":"Later versions of the following components are now available: Redis 6 - module redis stream 6 PostgreSQL 13 - module postgresql stream 13 MariaDB 10.5 - module mariadb stream 10.5","title":"Web and Database servers"},{"location":"release-notes/8.4-beta/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.4: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 11.0.0 - module llvm-toolset stream rhel Rust Toolset 1.49.0 - module rust-toolset stream rhel Go Toolset 1.15.7 - module go-toolset stream rhel There is new a module containing Persistent Memory Development Kit (PMDK): PMDK - module pmkd stream 1_fileformat_v6","title":"Compiler Toolset"},{"location":"release-notes/8.4-beta/#security","text":"IPsec VPN provided by Libreswan now supports TCP encapsulation and security labels for IKEv2. The OpenSCAP packages have been rebased to version 1.3.4, scap-security-guide has been rebased to version 0.1.54. The fapolicyd framework now provides integrity checking, and the RPM plugin now registers any system update handled by either the YUM package manager or the RPM Package Manager.","title":"Security"},{"location":"release-notes/8.4-beta/#general-updates-and-improvements","text":"EuroLinux 8.4 offers now Subversion 1.14 . It's packed as the module subversion with stream 1.14. The 1.10 stream remain the default module that contains this package. New module eclipse . This module has Eclipse IDE but is commonly used to build Java related packages. The nmstate packages provide a library and the nmstatectl command-line utility to manage host network settings declaratively. Nmstate is a network API for hosts and is fully supported in EuroLinux 8.4. The Multi-protocol Label Switching (MPLS) is an in-kernel data-forwarding mechanism to route traffic flow across enterprise networks. The iproute2 utility introduces three new traffic control actions. EuroLinux 8 kernel now uses proactive compaction that regularly initiates memory compaction work before a request for an allocation is made. Therefore, latency for specific memory allocation requests is lowered . EuroLinux 8 kernel has now a new implementation of a slab memory controller for control groups. EuroLinux kernel now supports the time namespace feature. It allows changing date and time inside the Linux containers. EuroLinux 8 kernel now supports the Error Detection and Correction (EDAC) in 8th and 9th generation Intel Core Processors. There are changes in the pacemaker resource agent - it now can detect failures asynchronously and inject a failure into Pacemaker immediately without waiting for the following monitor interval.","title":"General updates and improvements"},{"location":"release-notes/8.4-beta/#batteries","text":"Batteries repository contains packages that are needed to rebuild distribution but are not included in upstream repositories. Right now, this repository includes more than 2000 packages for each buildroot. Multiple batteries were updated for this release there including: mdds meson spirv-headers fontforge multiple python packages modules for bootstrapping python39","title":"Batteries"},{"location":"release-notes/8.4-beta/#additional-resources","text":"Red Hat 8.4 Release-Notes part of our release notes, are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/8.4/","text":"EuroLinux 8.4 Release Notes Dynamic programming languages Later versions of the following components are now available: Python 3.9 - module python39 stream 39. SWIG 4.0 - module swig stream 4.0 Web and Database servers Later versions of the following components are now available: Redis 6 - module redis stream 6 PostgreSQL 13 - module postgresql stream 13 MariaDB 10.5 - module mariadb stream 10.5 Compiler Toolset The following compiler toolsets have been updated in EL 8.4: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 11.0.0 - module llvm-toolset stream rhel Rust Toolset 1.49.0 - module rust-toolset stream rhel Go Toolset 1.15.7 - module go-toolset stream rhel There is new a module containing Persistent Memory Development Kit (PMDK): PMDK - module pmkd stream 1_fileformat_v6 Security IPsec VPN provided by Libreswan now supports TCP encapsulation and security labels for IKEv2. The OpenSCAP packages have been rebased to version 1.3.4, scap-security-guide has been rebased to version 0.1.54. The fapolicyd framework now provides integrity checking, and the RPM plugin now registers any system update handled by either the YUM package manager or the RPM Package Manager. General updates and improvements EuroLinux 8.4 offers now Subversion 1.14 . It's packed as the module subversion with stream 1.14. The 1.10 stream remain the default module that contains this package. New module eclipse . This module has Eclipse IDE but is commonly used to build Java related packages. The nmstate packages provide a library and the nmstatectl command-line utility to manage host network settings declaratively. Nmstate is a network API for hosts and is fully supported in EuroLinux 8.4. The Multi-protocol Label Switching (MPLS) is an in-kernel data-forwarding mechanism to route traffic flow across enterprise networks. The iproute2 utility introduces three new traffic control actions. EuroLinux 8 kernel now uses proactive compaction that regularly initiates memory compaction work before a request for an allocation is made. Therefore, latency for specific memory allocation requests is lowered . EuroLinux 8 kernel has now a new implementation of a slab memory controller for control groups. EuroLinux kernel now supports the time namespace feature. It allows changing date and time inside the Linux containers. EuroLinux 8 kernel now supports the Error Detection and Correction (EDAC) in 8th and 9th generation Intel Core Processors. There are changes in the pacemaker resource agent - it now can detect failures asynchronously and inject a failure into Pacemaker immediately without waiting for the following monitor interval. How to update from beta The beta repository has an updated package el-release , that contains production repositories. Upgrading from EuroLinux 8.4 beta to 8.4 is as simple as running: sudo yum update -y el-release sudo yum update -y Branded packages Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help anacondafirefox cloud-init crash httpd httpd initial-setup ipa liberport libguestfs libreoffice nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird Batteries Batteries repository contains packages that are needed to rebuild distribution but are not included in upstream repositories. Right now, this repository contains more than 2000 packages for each buildroot. Multiple batteries were updated for this release there including: mdds meson spirv-headers fontforge multiple python packages modules for bootstrapping python39 Other notable changes Because we changed the business model to open core, there is no longer a need to use FBI (free base image) repositories as they are a subset of entire repositories. FBI repos are removed from the el-release package. EuroLinux 8.4 is first version that can use BaseOS-all , AppStream-all and PowerTools-all repositories that contain all packages produced during build process. However, these packages are not supported by upstream or EuroLinux. EuroLinux by default uses Docker Hub instead of Quay. Additional resources Download EuroLinux ISO EuroLinux Public Request for Change and Bug Tracker Roadmap for the project can be found in press notes available on our company blog. Press Notes . Red Hat 8.4 Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 8.4 Release Notes"},{"location":"release-notes/8.4/#eurolinux-84-release-notes","text":"","title":"EuroLinux 8.4 Release Notes"},{"location":"release-notes/8.4/#dynamic-programming-languages","text":"Later versions of the following components are now available: Python 3.9 - module python39 stream 39. SWIG 4.0 - module swig stream 4.0","title":"Dynamic programming languages"},{"location":"release-notes/8.4/#web-and-database-servers","text":"Later versions of the following components are now available: Redis 6 - module redis stream 6 PostgreSQL 13 - module postgresql stream 13 MariaDB 10.5 - module mariadb stream 10.5","title":"Web and Database servers"},{"location":"release-notes/8.4/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.4: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 11.0.0 - module llvm-toolset stream rhel Rust Toolset 1.49.0 - module rust-toolset stream rhel Go Toolset 1.15.7 - module go-toolset stream rhel There is new a module containing Persistent Memory Development Kit (PMDK): PMDK - module pmkd stream 1_fileformat_v6","title":"Compiler Toolset"},{"location":"release-notes/8.4/#security","text":"IPsec VPN provided by Libreswan now supports TCP encapsulation and security labels for IKEv2. The OpenSCAP packages have been rebased to version 1.3.4, scap-security-guide has been rebased to version 0.1.54. The fapolicyd framework now provides integrity checking, and the RPM plugin now registers any system update handled by either the YUM package manager or the RPM Package Manager.","title":"Security"},{"location":"release-notes/8.4/#general-updates-and-improvements","text":"EuroLinux 8.4 offers now Subversion 1.14 . It's packed as the module subversion with stream 1.14. The 1.10 stream remain the default module that contains this package. New module eclipse . This module has Eclipse IDE but is commonly used to build Java related packages. The nmstate packages provide a library and the nmstatectl command-line utility to manage host network settings declaratively. Nmstate is a network API for hosts and is fully supported in EuroLinux 8.4. The Multi-protocol Label Switching (MPLS) is an in-kernel data-forwarding mechanism to route traffic flow across enterprise networks. The iproute2 utility introduces three new traffic control actions. EuroLinux 8 kernel now uses proactive compaction that regularly initiates memory compaction work before a request for an allocation is made. Therefore, latency for specific memory allocation requests is lowered . EuroLinux 8 kernel has now a new implementation of a slab memory controller for control groups. EuroLinux kernel now supports the time namespace feature. It allows changing date and time inside the Linux containers. EuroLinux 8 kernel now supports the Error Detection and Correction (EDAC) in 8th and 9th generation Intel Core Processors. There are changes in the pacemaker resource agent - it now can detect failures asynchronously and inject a failure into Pacemaker immediately without waiting for the following monitor interval.","title":"General updates and improvements"},{"location":"release-notes/8.4/#how-to-update-from-beta","text":"The beta repository has an updated package el-release , that contains production repositories. Upgrading from EuroLinux 8.4 beta to 8.4 is as simple as running: sudo yum update -y el-release sudo yum update -y","title":"How to update from beta"},{"location":"release-notes/8.4/#branded-packages","text":"Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help anacondafirefox cloud-init crash httpd httpd initial-setup ipa liberport libguestfs libreoffice nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird","title":"Branded packages"},{"location":"release-notes/8.4/#batteries","text":"Batteries repository contains packages that are needed to rebuild distribution but are not included in upstream repositories. Right now, this repository contains more than 2000 packages for each buildroot. Multiple batteries were updated for this release there including: mdds meson spirv-headers fontforge multiple python packages modules for bootstrapping python39","title":"Batteries"},{"location":"release-notes/8.4/#other-notable-changes","text":"Because we changed the business model to open core, there is no longer a need to use FBI (free base image) repositories as they are a subset of entire repositories. FBI repos are removed from the el-release package. EuroLinux 8.4 is first version that can use BaseOS-all , AppStream-all and PowerTools-all repositories that contain all packages produced during build process. However, these packages are not supported by upstream or EuroLinux. EuroLinux by default uses Docker Hub instead of Quay.","title":"Other notable changes"},{"location":"release-notes/8.4/#additional-resources","text":"Download EuroLinux ISO EuroLinux Public Request for Change and Bug Tracker Roadmap for the project can be found in press notes available on our company blog. Press Notes . Red Hat 8.4 Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/8.5-arm64/","text":"EuroLinux 8.5 Release Notes for ARM 64 (aarch64) EuroLinux 8.5 is the first version of EuroLinux that provides ARM 64 General Availability. We have to update the Gaia build system in the customers' sites for this release. This version code name is Tirana - the capital city of Albania. Below you can find the essential changes in EuroLinux 8.5 GA release for aarch64 architecture from EuroLinux 8.4 Beta for ARM64. Dynamic programming languages, Web and Database servers New versions of the following components are now available: Ruby 3.0 - module ruby stream 3.0. nginx 1.20 - module nginx stream 1.20 Nodejs 16 - module nodejs stream 16 Compiler Toolset The following compiler toolsets have been updated in EL 8.5: GCC Toolset 11 - software collection gcc-toolset-11 LLVM Toolset 12.0.1 - module llvm-toolset stream rhel Rust Toolset 1.54.0 - module rust-toolset stream rhel Go Toolset 1.16.7 - module go-toolset stream rhel Security Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: rsyslog - now support OpenSSL OpenSCAP framework - added new profiles and multiple changes and enhancements cryptopolicies were updated - these system-wide cryptographic policies from this version support different policies for different backends (scoped policies) High Availability and Resilient Storage High Availability and Resilient Storage modules are not supported on ARM64 architecture. This is in line with upstream policy. General updates and improvements Among the others, the following packages were updated and enhanced: NetworkManager was updated to 1.32.10 from 1.30 OpenIMP was updated to 2.0.31 from 2.0.29 acel was updated to 3.1 from 2.8 bluez was updated to 5.56 from 5.52 chrony was updated to 4.1 from 3.5 cockpit was updated to version 251.1 from 238.2 crypto-policies was updated to 20210617 from 20210209 dnf was updated to 4.7.0 from 4.4.2 elfutils were updated to 0.185 from 0.182 freeipmi was updated to 1.6.8 from 1.6.6 gnutls was updated to 3.6.16 from 3.6.14 ibacm was updated to 35.0 from 32.0 libmodulemd updated to version 2.13.0 from 2.9.4 libreswan was updated to version 4.4 from 4.3 main GCC was updated to 8.5.0 from 8.4.1 opencryptoki updated to version 3.16.0 from 3.15.1 rsyslog was updated to version 8.2102.0 from 8.1911.0 sssd was updated to version 2.5.2 from 2.4.0 New packages Among the others, the following packages were added to this release: adwaita-qt5 ansible-collection-microsoft-sql ansible-collection-redhat-rhel_mgmt ansible-freeipa-tests ansible-pcp compact-hwloc1 coreos-installer dotnet6.0 eth-tools java-17-openjdk* libadwaita-qt5 libcap-ng-python3 libcomps-devel is now included in PowerTools libvoikko-devel - is now included in PowerTools mobile-broadband-provider-info-devel is now included in PowerTools modulemd-tools pcm python3-cloud-what python3-libstoragemgmt python3-pyghmi qt5-qtserialbus-devel is now included in PowerTools resource-agents-paf (resilient storage) rsyslog-openssl samba-vfs-iouring sblim-gather sblim-gather-provider is now included in PowerTools sevctl stratisd-dracut tesseract tss2 udftools unicode-ucd-unihan xapian-core and its development packages are now included How to update from beta The beta repository has an updated package el-release , that contains production repositories. Upgrading from EuroLinux 8.4 beta for ARM64 to 8.5 GA is as simple as running: sudo yum update -y el-release sudo yum update -y Branded packages Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help anacondafirefox cloud-init crash httpd initial-setup ipa libreport libguestfs libreoffice nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird Batteries Batteries repository contains packages that are needed to rebuild the distribution but are not included in upstream repositories. Right now, this repository includes more than 2100 packages for each buildroot. Multiple batteries were updated for this release there, including: Bootstraps for rust-toolset Bootstraps for go-toolset Gaia build system Gaia build system was updated in all interested parties' environments. We had to select/order (with current long delivery times)/install hardware for aarch64. We also changed the rebuild policy. None of our customers was interested in using RHEL as a buildroot for their own Enterprise Linux forks. It means that EuroLinux must be released faster, but at the very same time, we can exclusively focus on providing EuroLinux in the early stages and thus release it faster. We also decided that the next version will be released asynchronously with more batch compilation. Batch compilation is scheduled for EuroLinux 9.0 and 8.6. Other notable changes EuroLinux 8.5 is the first version that can use baseos-all , appstream-all and powertools-all repositories that contain all packages produced during the build process. However, these packages are not supported by upstream or EuroLinux. They are intended for developers to build their own solutions. EuroLinux reverted the previous changes that made DockerHub the default container image registry. We observed other RHEL clones and decided that keeping default might be more suitable for users. Currently missing features Container and cloud images We will work on broader support for cloud/container images based on EuroLinux 8.5 for arm including: New container images on DockerHub and Quay.io AWS images for Graviton processors New Vagrant Boxes - note that HashiCorp does not provide an aarch64 build for Vagrant. Still, Linux distributions like Fedora delivers it so, it's achievable and usable. Additional resources Download EuroLinux ISO Download EuroLinux ISO secondary download EuroLinux Public Request for Change and Bug Tracker Red Hat 8.5 Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 8.5 Release Notes for ARM 64 (aarch64)"},{"location":"release-notes/8.5-arm64/#eurolinux-85-release-notes-for-arm-64-aarch64","text":"EuroLinux 8.5 is the first version of EuroLinux that provides ARM 64 General Availability. We have to update the Gaia build system in the customers' sites for this release. This version code name is Tirana - the capital city of Albania. Below you can find the essential changes in EuroLinux 8.5 GA release for aarch64 architecture from EuroLinux 8.4 Beta for ARM64.","title":"EuroLinux 8.5 Release Notes for ARM 64 (aarch64)"},{"location":"release-notes/8.5-arm64/#dynamic-programming-languages-web-and-database-servers","text":"New versions of the following components are now available: Ruby 3.0 - module ruby stream 3.0. nginx 1.20 - module nginx stream 1.20 Nodejs 16 - module nodejs stream 16","title":"Dynamic programming languages, Web and Database servers"},{"location":"release-notes/8.5-arm64/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.5: GCC Toolset 11 - software collection gcc-toolset-11 LLVM Toolset 12.0.1 - module llvm-toolset stream rhel Rust Toolset 1.54.0 - module rust-toolset stream rhel Go Toolset 1.16.7 - module go-toolset stream rhel","title":"Compiler Toolset"},{"location":"release-notes/8.5-arm64/#security","text":"Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: rsyslog - now support OpenSSL OpenSCAP framework - added new profiles and multiple changes and enhancements cryptopolicies were updated - these system-wide cryptographic policies from this version support different policies for different backends (scoped policies)","title":"Security"},{"location":"release-notes/8.5-arm64/#high-availability-and-resilient-storage","text":"High Availability and Resilient Storage modules are not supported on ARM64 architecture. This is in line with upstream policy.","title":"High Availability and Resilient Storage"},{"location":"release-notes/8.5-arm64/#general-updates-and-improvements","text":"Among the others, the following packages were updated and enhanced: NetworkManager was updated to 1.32.10 from 1.30 OpenIMP was updated to 2.0.31 from 2.0.29 acel was updated to 3.1 from 2.8 bluez was updated to 5.56 from 5.52 chrony was updated to 4.1 from 3.5 cockpit was updated to version 251.1 from 238.2 crypto-policies was updated to 20210617 from 20210209 dnf was updated to 4.7.0 from 4.4.2 elfutils were updated to 0.185 from 0.182 freeipmi was updated to 1.6.8 from 1.6.6 gnutls was updated to 3.6.16 from 3.6.14 ibacm was updated to 35.0 from 32.0 libmodulemd updated to version 2.13.0 from 2.9.4 libreswan was updated to version 4.4 from 4.3 main GCC was updated to 8.5.0 from 8.4.1 opencryptoki updated to version 3.16.0 from 3.15.1 rsyslog was updated to version 8.2102.0 from 8.1911.0 sssd was updated to version 2.5.2 from 2.4.0","title":"General updates and improvements"},{"location":"release-notes/8.5-arm64/#new-packages","text":"Among the others, the following packages were added to this release: adwaita-qt5 ansible-collection-microsoft-sql ansible-collection-redhat-rhel_mgmt ansible-freeipa-tests ansible-pcp compact-hwloc1 coreos-installer dotnet6.0 eth-tools java-17-openjdk* libadwaita-qt5 libcap-ng-python3 libcomps-devel is now included in PowerTools libvoikko-devel - is now included in PowerTools mobile-broadband-provider-info-devel is now included in PowerTools modulemd-tools pcm python3-cloud-what python3-libstoragemgmt python3-pyghmi qt5-qtserialbus-devel is now included in PowerTools resource-agents-paf (resilient storage) rsyslog-openssl samba-vfs-iouring sblim-gather sblim-gather-provider is now included in PowerTools sevctl stratisd-dracut tesseract tss2 udftools unicode-ucd-unihan xapian-core and its development packages are now included","title":"New packages"},{"location":"release-notes/8.5-arm64/#how-to-update-from-beta","text":"The beta repository has an updated package el-release , that contains production repositories. Upgrading from EuroLinux 8.4 beta for ARM64 to 8.5 GA is as simple as running: sudo yum update -y el-release sudo yum update -y","title":"How to update from beta"},{"location":"release-notes/8.5-arm64/#branded-packages","text":"Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help anacondafirefox cloud-init crash httpd initial-setup ipa libreport libguestfs libreoffice nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird","title":"Branded packages"},{"location":"release-notes/8.5-arm64/#batteries","text":"Batteries repository contains packages that are needed to rebuild the distribution but are not included in upstream repositories. Right now, this repository includes more than 2100 packages for each buildroot. Multiple batteries were updated for this release there, including: Bootstraps for rust-toolset Bootstraps for go-toolset","title":"Batteries"},{"location":"release-notes/8.5-arm64/#gaia-build-system","text":"Gaia build system was updated in all interested parties' environments. We had to select/order (with current long delivery times)/install hardware for aarch64. We also changed the rebuild policy. None of our customers was interested in using RHEL as a buildroot for their own Enterprise Linux forks. It means that EuroLinux must be released faster, but at the very same time, we can exclusively focus on providing EuroLinux in the early stages and thus release it faster. We also decided that the next version will be released asynchronously with more batch compilation. Batch compilation is scheduled for EuroLinux 9.0 and 8.6.","title":"Gaia build system"},{"location":"release-notes/8.5-arm64/#other-notable-changes","text":"EuroLinux 8.5 is the first version that can use baseos-all , appstream-all and powertools-all repositories that contain all packages produced during the build process. However, these packages are not supported by upstream or EuroLinux. They are intended for developers to build their own solutions. EuroLinux reverted the previous changes that made DockerHub the default container image registry. We observed other RHEL clones and decided that keeping default might be more suitable for users.","title":"Other notable changes"},{"location":"release-notes/8.5-arm64/#currently-missing-features","text":"","title":"Currently missing features"},{"location":"release-notes/8.5-arm64/#container-and-cloud-images","text":"We will work on broader support for cloud/container images based on EuroLinux 8.5 for arm including: New container images on DockerHub and Quay.io AWS images for Graviton processors New Vagrant Boxes - note that HashiCorp does not provide an aarch64 build for Vagrant. Still, Linux distributions like Fedora delivers it so, it's achievable and usable.","title":"Container and cloud images"},{"location":"release-notes/8.5-arm64/#additional-resources","text":"Download EuroLinux ISO Download EuroLinux ISO secondary download EuroLinux Public Request for Change and Bug Tracker Red Hat 8.5 Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/8.5/","text":"EuroLinux 8.5 Release Notes EuroLinux 8.5 is the first minor release created in a continuous way. It was also the first version when we deployed our engineer to remote sites (in most cases virtual) to provide support for organisations that rebuild RHEL/EuroLinux from sources with Gaia build system. This version code name is Tirana - the capital city of Albania. Below you can find the essential changes in EuroLinux 8.5 release for x86_64 architecture. The aarch64 GA release is slightly delayed. Release notes for aarch64 will be provided in a separate document. Dynamic programming languages, Web and Database servers New versions of the following components are now available: Ruby 3.0 - module ruby stream 3.0. nginx 1.20 - module nginx stream 1.20 Nodejs 16 - module nodejs stream 16 Compiler Toolset The following compiler toolsets have been updated in EL 8.5: GCC Toolset 11 - software collection gcc-toolset-11 LLVM Toolset 12.0.1 - module llvm-toolset stream rhel Rust Toolset 1.54.0 - module rust-toolset stream rhel Go Toolset 1.16.7 - module go-toolset stream rhel Security Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: rsyslog - now support OpenSSL OpenSCAP framework - added new profiles and multiple changes and enhancements cryptopolicies were updated - these system-wide cryptographic policies from this version support different policies for different backends (scoped policies) High Availability and Resilient Storage cmirror was updated to version 2.03.12 corosync was updated to version 3.1.5 pacemaker was updated to version 2.1.0 resource-agents-paf package was added to HA an RS repositories General updates and improvements Among the others, the following packages were updated and enhanced: NetworkManager was updated to 1.32.10 from 1.30 OpenIMP was updated to 2.0.31 from 2.0.29 acel was updated to 3.1 from 2.8 bluez was updated to 5.56 from 5.52 chrony was updated to 4.1 from 3.5 cockpit was updated to version 251.1 from 238.2 crypto-policies was updated to 20210617 from 20210209 dnf was updated to 4.7.0 from 4.4.2 elfutils were updated to 0.185 from 0.182 freeipmi was updated to 1.6.8 from 1.6.6 gnutls was updated to 3.6.16 from 3.6.14 ibacm was updated to 35.0 from 32.0 libmodulemd updated to version 2.13.0 from 2.9.4 libreswan was updated to version 4.4 from 4.3 main GCC was updated to 8.5.0 from 8.4.1 opencryptoki updated to version 3.16.0 from 3.15.1 rsyslog was updated to version 8.2102.0 from 8.1911.0 sssd was updated to version 2.5.2 from 2.4.0 New packages Among the others, the following packages were added to this release: adwaita-qt5 ansible-collection-microsoft-sql ansible-collection-redhat-rhel_mgmt ansible-freeipa-tests ansible-pcp compact-hwloc1 coreos-installer dotnet-build-reference-packages dotnet-sdk-3.1-source-built-artifacts dotnet-sdk-5.0-source-built-artifacts dotnet5.0-build-reference-packages eth-tools flatpak (i686) included in PowerTools java-17-openjdk* libadwaita-qt5 libcap-ng-python3 libcomps-devel is now included in PowerTools libvoikko-devel - is now included in PowerTools lpsolve (i686) is now included in PowerTools mobile-broadband-provider-info-devel is now included in PowerTools modulemd-tools pcm python3-cloud-what python3-libstoragemgmt python3-pillow (i686) is now included in PowerTools python3-pyghmi qt5-qtserialbus-devel is now included in PowerTools resource-agents-paf (resilient storage) rsyslog-openssl samba-vfs-iouring sblim-gather sblim-gather-provider is now included in PowerTools sevctl stratisd-dracut tesseract tss2 udftools unicode-ucd-unihan xapian-core and its development packages are now included How to update from beta The beta repository has an updated package el-release , that contains production repositories. Upgrading from EuroLinux 8.5 beta to 8.5 is as simple as running: sudo yum update -y el-release sudo yum update -y Branded packages Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help anacondafirefox cloud-init crash httpd initial-setup ipa libreport libguestfs libreoffice nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird Batteries Batteries repository contains packages that are needed to rebuild the distribution but are not included in upstream repositories. Right now, this repository includes more than 2100 packages for each buildroot. Multiple batteries were updated for this release there including: Bootstraps for rust-toolset Bootstraps for go-toolset Gaia build system Gaia build system was updated in all interested parties' environments. We also changed the rebuild policy. None of our customers was interested in using RHEL as a buildroot for their own Enterprise Linux forks. It means that EuroLinux must be released faster, but at the very same time, we can exclusively focus on providing EuroLinux in the early stages and thus release it faster. We also decided that the next version will be released asynchronously with more batch compilation. Synchronization was especially problematic in this release as there was a lot of holidays in Poland. Other notable changes EuroLinux 8.5 is the first version that can use baseos-all , appstream-all and powertools-all , high-availability-all , resilient-storage-all repositories that contain all packages produced during the build process. However, these packages are not supported by upstream or EuroLinux. They are intended for developers to build they own solutions. EuroLinux reverted the previous changes that made DockerHub the default container image registry. We observed other RHEL clones and decided that keeping default might be more suitable for users. Additional resources Download EuroLinux ISO EuroLinux Public Request for Change and Bug Tracker A roadmap for the project can be found in press notes available on our company blog. EuroLinux Roadmap For Q4 2021 . Red Hat 8.5 Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 8.5 Release Notes"},{"location":"release-notes/8.5/#eurolinux-85-release-notes","text":"EuroLinux 8.5 is the first minor release created in a continuous way. It was also the first version when we deployed our engineer to remote sites (in most cases virtual) to provide support for organisations that rebuild RHEL/EuroLinux from sources with Gaia build system. This version code name is Tirana - the capital city of Albania. Below you can find the essential changes in EuroLinux 8.5 release for x86_64 architecture. The aarch64 GA release is slightly delayed. Release notes for aarch64 will be provided in a separate document.","title":"EuroLinux 8.5 Release Notes"},{"location":"release-notes/8.5/#dynamic-programming-languages-web-and-database-servers","text":"New versions of the following components are now available: Ruby 3.0 - module ruby stream 3.0. nginx 1.20 - module nginx stream 1.20 Nodejs 16 - module nodejs stream 16","title":"Dynamic programming languages, Web and Database servers"},{"location":"release-notes/8.5/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.5: GCC Toolset 11 - software collection gcc-toolset-11 LLVM Toolset 12.0.1 - module llvm-toolset stream rhel Rust Toolset 1.54.0 - module rust-toolset stream rhel Go Toolset 1.16.7 - module go-toolset stream rhel","title":"Compiler Toolset"},{"location":"release-notes/8.5/#security","text":"Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: rsyslog - now support OpenSSL OpenSCAP framework - added new profiles and multiple changes and enhancements cryptopolicies were updated - these system-wide cryptographic policies from this version support different policies for different backends (scoped policies)","title":"Security"},{"location":"release-notes/8.5/#high-availability-and-resilient-storage","text":"cmirror was updated to version 2.03.12 corosync was updated to version 3.1.5 pacemaker was updated to version 2.1.0 resource-agents-paf package was added to HA an RS repositories","title":"High Availability and Resilient Storage"},{"location":"release-notes/8.5/#general-updates-and-improvements","text":"Among the others, the following packages were updated and enhanced: NetworkManager was updated to 1.32.10 from 1.30 OpenIMP was updated to 2.0.31 from 2.0.29 acel was updated to 3.1 from 2.8 bluez was updated to 5.56 from 5.52 chrony was updated to 4.1 from 3.5 cockpit was updated to version 251.1 from 238.2 crypto-policies was updated to 20210617 from 20210209 dnf was updated to 4.7.0 from 4.4.2 elfutils were updated to 0.185 from 0.182 freeipmi was updated to 1.6.8 from 1.6.6 gnutls was updated to 3.6.16 from 3.6.14 ibacm was updated to 35.0 from 32.0 libmodulemd updated to version 2.13.0 from 2.9.4 libreswan was updated to version 4.4 from 4.3 main GCC was updated to 8.5.0 from 8.4.1 opencryptoki updated to version 3.16.0 from 3.15.1 rsyslog was updated to version 8.2102.0 from 8.1911.0 sssd was updated to version 2.5.2 from 2.4.0","title":"General updates and improvements"},{"location":"release-notes/8.5/#new-packages","text":"Among the others, the following packages were added to this release: adwaita-qt5 ansible-collection-microsoft-sql ansible-collection-redhat-rhel_mgmt ansible-freeipa-tests ansible-pcp compact-hwloc1 coreos-installer dotnet-build-reference-packages dotnet-sdk-3.1-source-built-artifacts dotnet-sdk-5.0-source-built-artifacts dotnet5.0-build-reference-packages eth-tools flatpak (i686) included in PowerTools java-17-openjdk* libadwaita-qt5 libcap-ng-python3 libcomps-devel is now included in PowerTools libvoikko-devel - is now included in PowerTools lpsolve (i686) is now included in PowerTools mobile-broadband-provider-info-devel is now included in PowerTools modulemd-tools pcm python3-cloud-what python3-libstoragemgmt python3-pillow (i686) is now included in PowerTools python3-pyghmi qt5-qtserialbus-devel is now included in PowerTools resource-agents-paf (resilient storage) rsyslog-openssl samba-vfs-iouring sblim-gather sblim-gather-provider is now included in PowerTools sevctl stratisd-dracut tesseract tss2 udftools unicode-ucd-unihan xapian-core and its development packages are now included","title":"New packages"},{"location":"release-notes/8.5/#how-to-update-from-beta","text":"The beta repository has an updated package el-release , that contains production repositories. Upgrading from EuroLinux 8.5 beta to 8.5 is as simple as running: sudo yum update -y el-release sudo yum update -y","title":"How to update from beta"},{"location":"release-notes/8.5/#branded-packages","text":"Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help anacondafirefox cloud-init crash httpd initial-setup ipa libreport libguestfs libreoffice nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird","title":"Branded packages"},{"location":"release-notes/8.5/#batteries","text":"Batteries repository contains packages that are needed to rebuild the distribution but are not included in upstream repositories. Right now, this repository includes more than 2100 packages for each buildroot. Multiple batteries were updated for this release there including: Bootstraps for rust-toolset Bootstraps for go-toolset","title":"Batteries"},{"location":"release-notes/8.5/#gaia-build-system","text":"Gaia build system was updated in all interested parties' environments. We also changed the rebuild policy. None of our customers was interested in using RHEL as a buildroot for their own Enterprise Linux forks. It means that EuroLinux must be released faster, but at the very same time, we can exclusively focus on providing EuroLinux in the early stages and thus release it faster. We also decided that the next version will be released asynchronously with more batch compilation. Synchronization was especially problematic in this release as there was a lot of holidays in Poland.","title":"Gaia build system"},{"location":"release-notes/8.5/#other-notable-changes","text":"EuroLinux 8.5 is the first version that can use baseos-all , appstream-all and powertools-all , high-availability-all , resilient-storage-all repositories that contain all packages produced during the build process. However, these packages are not supported by upstream or EuroLinux. They are intended for developers to build they own solutions. EuroLinux reverted the previous changes that made DockerHub the default container image registry. We observed other RHEL clones and decided that keeping default might be more suitable for users.","title":"Other notable changes"},{"location":"release-notes/8.5/#additional-resources","text":"Download EuroLinux ISO EuroLinux Public Request for Change and Bug Tracker A roadmap for the project can be found in press notes available on our company blog. EuroLinux Roadmap For Q4 2021 . Red Hat 8.5 Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/8.6-beta/","text":"EuroLinux 8.6 Beta Release Notes EuroLinux 8.6 is the first minor release with a full-fledged beta available before the General Availability of the upstream version (RHEL 8.6). The Beta version will allow releasing EuroLinux 8.6 GA faster. We decided to publish x86_64 and corresponding x86_64, i686 open buildroots for this beta. The GA version will release all supported arches simultaneously. This version\u2019s code name is Kyiv - the capital city of Ukraine. Dynamic programming languages, Web and Database servers New versions of the following components are now available: New: PHP 8.0 - module php stream 8.0 New: Perl 5.32 - module perl stream 5.32 New: Maven 3.5 - module maven stream 3.5 New: Log4j:2 - module log4j stream 2 PostgreSQL 10 - module postgresql stream 10 was rebased to PostgreSQL 10.19 from 10.17 PMDK 1_fileformat_v6 - module pmdk stream 1_fileformat_v6 was rebased to version 1.11.1 from 1.9.2 Compiler Toolset The following compiler toolsets have been updated in EL 8.6: Rust Toolset - module rust-toolset:rhel8 was updated to version 1.58.1 from 1.54.0 LLVM Toolset - module llvm-toolset:rhel8 was updated to version 13.0.1 from 12.0.1 Go Lang Toolset - module go-toolset:rhel8 that provides the Go Lang stack was updated to version 1.17.7 from 1.16.12 GCC-Toolset-11 - toolset gcc-toolset-11 has multiple updates and was rebased to version 11.2 Containers New Containers Tools module containers-tools stream 4.0 Containers tools module containers-tools stream rhel was heavily updated Security Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: semodule now supports the --checksum option for verifying SELinux policy modules versions OpenSSL 3.0 support in opencryptoki, among others OpenSCAP supports OSBuild Blueprint as a remediation type and several command-line option improvements SCAP Security Guide - authselect for rules that harden PAM stack and more precise xccdf_org.ssgproject.content_enable_fips_mode rule implementation among others General updates and improvements Among the others, the following packages were updated and enhanced: Git was updated to version 2.31 from 2.27 389-ds-base (Directory Server) was updated to 1.4.3.28 Libreswan was updated to 4.5 PCP was rebased to version 5.3.5-8 OpenSCAP was updated to 1.3.6 grafana and grafana containers were rebased to the newer versions SCAP Security Guide was updated to 0.1.60 authselect was updated to 1.2.2 bind was updated to 9.16.23 fapolicyd was updated to 1.1 libcap was updated to 2.48 lsvpd was updated to 1.7.13 opencryptoki was updated to 3.17.0 pcsc-lite was updated to 1.9.5 powerpc-utils was updated to 1.3.9 samba was updated to 4.15.5 New packages Among the others, the following packages were added to os repository for this release: aardvark-dns adwaita-icon-theme-devel ansible-core ansible-test bind9.16 bind9.16-chroot bind9.16-devel bind9.16-dnssec-utils bind9.16-doc bind9.16-libs bind9.16-license bind9.16-utils coreos-installer-dracut fdo-admin-cli fdo-client fdo-init fdo-manufacturing-server fdo-owner-cli fdo-owner-onboarding-server fdo-rendezvous-server fence-virtd-cpg fwupd-devel gdm-devel gdm-pam-extensions-devel glibc-gconv-extra gnome-shell-extension-classification-banner gnome-shell-extension-dash-to-panel greenboot-default-health-checks hostapd libgcab1-devel libguestfs-appliance libnbd-bash-completion libpinyin-devel libqrtr-glib libselinux-static libss-devel libtpms libtpms-devel libuser-devel libvirt-wireshark libxmlb-devel lmdb-devel maven-openjdk17 nbdkit-gzip-filter nbdkit-nbd-plugin nbdkit-tar-filter nbdkit-tar-plugin nbdkit-tmpdisk-plugin netavark NetworkManager-initscripts-updown nftables-devel nginx-mod-devel nmstate-devel nmstate-libs osbuild-composer-dnf-json osbuild-luks2 osbuild-lvm2 pcp-pmda-denki pcp-pmda-mongodb php-pecl-xdebug3 multiple perl-* that are in perl 5.32 modules prometheus-jmx-exporter-openjdk11 python38-resolvelib python3-bind9.16 python3-dnf-plugin-modulesync qatlib-tests qatzip qatzip-devel qatzip-libs qemu-kvm-docs qemu-kvm-hw-usbredir qemu-kvm-ui-opengl qemu-kvm-ui-spice rig rsyslog-mmfields rust-std-static-wasm32-wasi shadow-utils-subid shadow-utils-subid-devel sshpass stress-ng swtpm swtpm-devel swtpm-libs swtpm-tools swtpm-tools-pkcs11 virt-v2v-bash-completion virt-v2v-man-pages-ja virt-v2v-man-pages-uk webrtc-audio-processing-devel weldr-client Branded packages Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help cloud-init crash firefox httpd initial-setup ipa libguestfs libreoffice libreport nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird Removed packages The following packages were removed: rhc and related packages insights-client and related packages Batteries Batteries repository contains packages that are needed to rebuild the distribution but are not included in any upstream repositories. Right now, this repository includes more than 2500 packages for each buildroot. Multiple batteries were updated for this release including: Bootstraps for Perl 5.32 Updated mesa batteries Smaller packages that broke buildroot About 420 packages were updated for x86_64 buildroot alone. Gaia build system We are still working on Gaia 3.0. Known bugs This is a Beta release! openscap will probably not work There is ambiguity when it comes to SCAP profiles naming that will be resolved for 8.6 GA GitHub Bug Report After installation, the first kernel might report EuroLinux 8.5 -> updated kernel should report 8.6 beta. evolution-mapi was wrongly linked against older samba. The solution is yum reinstall -y evolution-mapi as we updated the package in-place dhcp-client was wrongly linked against older bind-export-libs. The solution is yum reinstall -y dhcp-client as we updated the package in-place Additional resources Download EuroLinux ISO EuroLinux Public Request for Change and Bug Tracker Red Hat 8.6 Beta Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 8.6 Beta Release Notes"},{"location":"release-notes/8.6-beta/#eurolinux-86-beta-release-notes","text":"EuroLinux 8.6 is the first minor release with a full-fledged beta available before the General Availability of the upstream version (RHEL 8.6). The Beta version will allow releasing EuroLinux 8.6 GA faster. We decided to publish x86_64 and corresponding x86_64, i686 open buildroots for this beta. The GA version will release all supported arches simultaneously. This version\u2019s code name is Kyiv - the capital city of Ukraine.","title":"EuroLinux 8.6 Beta Release Notes"},{"location":"release-notes/8.6-beta/#dynamic-programming-languages-web-and-database-servers","text":"New versions of the following components are now available: New: PHP 8.0 - module php stream 8.0 New: Perl 5.32 - module perl stream 5.32 New: Maven 3.5 - module maven stream 3.5 New: Log4j:2 - module log4j stream 2 PostgreSQL 10 - module postgresql stream 10 was rebased to PostgreSQL 10.19 from 10.17 PMDK 1_fileformat_v6 - module pmdk stream 1_fileformat_v6 was rebased to version 1.11.1 from 1.9.2","title":"Dynamic programming languages, Web and Database servers"},{"location":"release-notes/8.6-beta/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.6: Rust Toolset - module rust-toolset:rhel8 was updated to version 1.58.1 from 1.54.0 LLVM Toolset - module llvm-toolset:rhel8 was updated to version 13.0.1 from 12.0.1 Go Lang Toolset - module go-toolset:rhel8 that provides the Go Lang stack was updated to version 1.17.7 from 1.16.12 GCC-Toolset-11 - toolset gcc-toolset-11 has multiple updates and was rebased to version 11.2","title":"Compiler Toolset"},{"location":"release-notes/8.6-beta/#containers","text":"New Containers Tools module containers-tools stream 4.0 Containers tools module containers-tools stream rhel was heavily updated","title":"Containers"},{"location":"release-notes/8.6-beta/#security","text":"Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: semodule now supports the --checksum option for verifying SELinux policy modules versions OpenSSL 3.0 support in opencryptoki, among others OpenSCAP supports OSBuild Blueprint as a remediation type and several command-line option improvements SCAP Security Guide - authselect for rules that harden PAM stack and more precise xccdf_org.ssgproject.content_enable_fips_mode rule implementation among others","title":"Security"},{"location":"release-notes/8.6-beta/#general-updates-and-improvements","text":"Among the others, the following packages were updated and enhanced: Git was updated to version 2.31 from 2.27 389-ds-base (Directory Server) was updated to 1.4.3.28 Libreswan was updated to 4.5 PCP was rebased to version 5.3.5-8 OpenSCAP was updated to 1.3.6 grafana and grafana containers were rebased to the newer versions SCAP Security Guide was updated to 0.1.60 authselect was updated to 1.2.2 bind was updated to 9.16.23 fapolicyd was updated to 1.1 libcap was updated to 2.48 lsvpd was updated to 1.7.13 opencryptoki was updated to 3.17.0 pcsc-lite was updated to 1.9.5 powerpc-utils was updated to 1.3.9 samba was updated to 4.15.5","title":"General updates and improvements"},{"location":"release-notes/8.6-beta/#new-packages","text":"Among the others, the following packages were added to os repository for this release: aardvark-dns adwaita-icon-theme-devel ansible-core ansible-test bind9.16 bind9.16-chroot bind9.16-devel bind9.16-dnssec-utils bind9.16-doc bind9.16-libs bind9.16-license bind9.16-utils coreos-installer-dracut fdo-admin-cli fdo-client fdo-init fdo-manufacturing-server fdo-owner-cli fdo-owner-onboarding-server fdo-rendezvous-server fence-virtd-cpg fwupd-devel gdm-devel gdm-pam-extensions-devel glibc-gconv-extra gnome-shell-extension-classification-banner gnome-shell-extension-dash-to-panel greenboot-default-health-checks hostapd libgcab1-devel libguestfs-appliance libnbd-bash-completion libpinyin-devel libqrtr-glib libselinux-static libss-devel libtpms libtpms-devel libuser-devel libvirt-wireshark libxmlb-devel lmdb-devel maven-openjdk17 nbdkit-gzip-filter nbdkit-nbd-plugin nbdkit-tar-filter nbdkit-tar-plugin nbdkit-tmpdisk-plugin netavark NetworkManager-initscripts-updown nftables-devel nginx-mod-devel nmstate-devel nmstate-libs osbuild-composer-dnf-json osbuild-luks2 osbuild-lvm2 pcp-pmda-denki pcp-pmda-mongodb php-pecl-xdebug3 multiple perl-* that are in perl 5.32 modules prometheus-jmx-exporter-openjdk11 python38-resolvelib python3-bind9.16 python3-dnf-plugin-modulesync qatlib-tests qatzip qatzip-devel qatzip-libs qemu-kvm-docs qemu-kvm-hw-usbredir qemu-kvm-ui-opengl qemu-kvm-ui-spice rig rsyslog-mmfields rust-std-static-wasm32-wasi shadow-utils-subid shadow-utils-subid-devel sshpass stress-ng swtpm swtpm-devel swtpm-libs swtpm-tools swtpm-tools-pkcs11 virt-v2v-bash-completion virt-v2v-man-pages-ja virt-v2v-man-pages-uk webrtc-audio-processing-devel weldr-client","title":"New packages"},{"location":"release-notes/8.6-beta/#branded-packages","text":"Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help cloud-init crash firefox httpd initial-setup ipa libguestfs libreoffice libreport nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird","title":"Branded packages"},{"location":"release-notes/8.6-beta/#removed-packages","text":"The following packages were removed: rhc and related packages insights-client and related packages","title":"Removed packages"},{"location":"release-notes/8.6-beta/#batteries","text":"Batteries repository contains packages that are needed to rebuild the distribution but are not included in any upstream repositories. Right now, this repository includes more than 2500 packages for each buildroot. Multiple batteries were updated for this release including: Bootstraps for Perl 5.32 Updated mesa batteries Smaller packages that broke buildroot About 420 packages were updated for x86_64 buildroot alone.","title":"Batteries"},{"location":"release-notes/8.6-beta/#gaia-build-system","text":"We are still working on Gaia 3.0.","title":"Gaia build system"},{"location":"release-notes/8.6-beta/#known-bugs","text":"This is a Beta release! openscap will probably not work There is ambiguity when it comes to SCAP profiles naming that will be resolved for 8.6 GA GitHub Bug Report After installation, the first kernel might report EuroLinux 8.5 -> updated kernel should report 8.6 beta. evolution-mapi was wrongly linked against older samba. The solution is yum reinstall -y evolution-mapi as we updated the package in-place dhcp-client was wrongly linked against older bind-export-libs. The solution is yum reinstall -y dhcp-client as we updated the package in-place","title":"Known bugs"},{"location":"release-notes/8.6-beta/#additional-resources","text":"Download EuroLinux ISO EuroLinux Public Request for Change and Bug Tracker Red Hat 8.6 Beta Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/8.6/","text":"EuroLinux 8.6 Release Notes Since EuroLinux 8.6 was first minor release with a full-fledged beta available before the General Availability of the upstream version (RHEL 8.6), the Beta version allowed us to release EuroLinux 8.6 faster. This version\u2019s code name is Kyiv - the capital city of Ukraine. Dynamic programming languages, Web and Database servers New versions of the following components are now available: New: PHP 8.0 - module php stream 8.0 New: Perl 5.32 - module perl stream 5.32 New: Maven 3.5 - module maven stream 3.5 New: Log4j:2 - module log4j stream 2 PostgreSQL 10 - module postgresql stream 10 was rebased to PostgreSQL 10.19 from 10.17 PMDK 1_fileformat_v6 - module pmdk stream 1_fileformat_v6 was rebased to version 1.11.1 from 1.9.2 Compiler Toolset The following compiler toolsets have been updated in EL 8.6: Rust Toolset - module rust-toolset:rhel8 was updated to version 1.58.1 from 1.54.0 LLVM Toolset - module llvm-toolset:rhel8 was updated to version 13.0.1 from 12.0.1 Go Lang Toolset - module go-toolset:rhel8 that provides the Go Lang stack was updated to version 1.17.7 from 1.16.12 GCC-Toolset-11 - toolset gcc-toolset-11 has multiple updates and was rebased to version 11.2 Containers New Containers Tools module containers-tools stream 4.0 Containers tools module containers-tools stream rhel was heavily updated Security Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: semodule now supports the --checksum option for verifying SELinux policy modules versions OpenSSL 3.0 support in opencryptoki, among others OpenSCAP supports OSBuild Blueprint as a remediation type and several command-line option improvements SCAP Security Guide - authselect for rules that harden PAM stack and more precise xccdf_org.ssgproject.content_enable_fips_mode rule implementation among others General updates and improvements Among the others, the following packages were updated and enhanced: Git was updated to version 2.31 from 2.27 389-ds-base (Directory Server) was updated to 1.4.3.28 Libreswan was updated to 4.5 PCP was rebased to version 5.3.5-8 OpenSCAP was updated to 1.3.6 grafana and grafana containers were rebased to the newer versions SCAP Security Guide was updated to 0.1.60 authselect was updated to 1.2.2 bind was updated to 9.16.23 fapolicyd was updated to 1.1 libcap was updated to 2.48 lsvpd was updated to 1.7.13 opencryptoki was updated to 3.17.0 pcsc-lite was updated to 1.9.5 powerpc-utils was updated to 1.3.9 samba was updated to 4.15.5 New packages Among the others, the following packages were added to os repository for this release: aardvark-dns adwaita-icon-theme-devel ansible-core ansible-test bind9.16 bind9.16-chroot bind9.16-devel bind9.16-dnssec-utils bind9.16-doc bind9.16-libs bind9.16-license bind9.16-utils coreos-installer-dracut fdo-admin-cli fdo-client fdo-init fdo-manufacturing-server fdo-owner-cli fdo-owner-onboarding-server fdo-rendezvous-server fence-virtd-cpg fwupd-devel gdm-devel gdm-pam-extensions-devel glibc-gconv-extra gnome-shell-extension-classification-banner gnome-shell-extension-dash-to-panel greenboot-default-health-checks hostapd libgcab1-devel libguestfs-appliance libnbd-bash-completion libpinyin-devel libqrtr-glib libselinux-static libss-devel libtpms libtpms-devel libuser-devel libvirt-wireshark libxmlb-devel lmdb-devel maven-openjdk17 nbdkit-gzip-filter nbdkit-nbd-plugin nbdkit-tar-filter nbdkit-tar-plugin nbdkit-tmpdisk-plugin netavark NetworkManager-initscripts-updown nftables-devel nginx-mod-devel nmstate-devel nmstate-libs osbuild-composer-dnf-json osbuild-luks2 osbuild-lvm2 pcp-pmda-denki pcp-pmda-mongodb php-pecl-xdebug3 multiple perl-* that are in perl 5.32 modules prometheus-jmx-exporter-openjdk11 python38-resolvelib python3-bind9.16 python3-dnf-plugin-modulesync qatlib-tests qatzip qatzip-devel qatzip-libs qemu-kvm-docs qemu-kvm-hw-usbredir qemu-kvm-ui-opengl qemu-kvm-ui-spice rig rsyslog-mmfields rust-std-static-wasm32-wasi shadow-utils-subid shadow-utils-subid-devel sshpass stress-ng swtpm swtpm-devel swtpm-libs swtpm-tools swtpm-tools-pkcs11 virt-v2v-bash-completion virt-v2v-man-pages-ja virt-v2v-man-pages-uk webrtc-audio-processing-devel weldr-client Branded packages Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help cloud-init crash firefox httpd initial-setup ipa libguestfs libreoffice libreport nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird Removed packages The following packages were removed: rhc and related packages insights-client and related packages Batteries Batteries repository contains packages that are needed to rebuild the distribution but are not included in any upstream repositories. Right now, this repository includes more than 2500 packages for each buildroot. Multiple batteries were updated for this release including: Bootstraps for Perl 5.32 Updated mesa batteries Smaller packages that broke buildroot About 420 packages were updated for x86_64 buildroot alone. Gaia build system We are still working on Gaia 3.0. Additional resources Download EuroLinux ISO , (secondary download link) EuroLinux Public Request for Change and Bug Tracker Red Hat 8.6 Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 8.6 Release Notes"},{"location":"release-notes/8.6/#eurolinux-86-release-notes","text":"Since EuroLinux 8.6 was first minor release with a full-fledged beta available before the General Availability of the upstream version (RHEL 8.6), the Beta version allowed us to release EuroLinux 8.6 faster. This version\u2019s code name is Kyiv - the capital city of Ukraine.","title":"EuroLinux 8.6 Release Notes"},{"location":"release-notes/8.6/#dynamic-programming-languages-web-and-database-servers","text":"New versions of the following components are now available: New: PHP 8.0 - module php stream 8.0 New: Perl 5.32 - module perl stream 5.32 New: Maven 3.5 - module maven stream 3.5 New: Log4j:2 - module log4j stream 2 PostgreSQL 10 - module postgresql stream 10 was rebased to PostgreSQL 10.19 from 10.17 PMDK 1_fileformat_v6 - module pmdk stream 1_fileformat_v6 was rebased to version 1.11.1 from 1.9.2","title":"Dynamic programming languages, Web and Database servers"},{"location":"release-notes/8.6/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.6: Rust Toolset - module rust-toolset:rhel8 was updated to version 1.58.1 from 1.54.0 LLVM Toolset - module llvm-toolset:rhel8 was updated to version 13.0.1 from 12.0.1 Go Lang Toolset - module go-toolset:rhel8 that provides the Go Lang stack was updated to version 1.17.7 from 1.16.12 GCC-Toolset-11 - toolset gcc-toolset-11 has multiple updates and was rebased to version 11.2","title":"Compiler Toolset"},{"location":"release-notes/8.6/#containers","text":"New Containers Tools module containers-tools stream 4.0 Containers tools module containers-tools stream rhel was heavily updated","title":"Containers"},{"location":"release-notes/8.6/#security","text":"Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: semodule now supports the --checksum option for verifying SELinux policy modules versions OpenSSL 3.0 support in opencryptoki, among others OpenSCAP supports OSBuild Blueprint as a remediation type and several command-line option improvements SCAP Security Guide - authselect for rules that harden PAM stack and more precise xccdf_org.ssgproject.content_enable_fips_mode rule implementation among others","title":"Security"},{"location":"release-notes/8.6/#general-updates-and-improvements","text":"Among the others, the following packages were updated and enhanced: Git was updated to version 2.31 from 2.27 389-ds-base (Directory Server) was updated to 1.4.3.28 Libreswan was updated to 4.5 PCP was rebased to version 5.3.5-8 OpenSCAP was updated to 1.3.6 grafana and grafana containers were rebased to the newer versions SCAP Security Guide was updated to 0.1.60 authselect was updated to 1.2.2 bind was updated to 9.16.23 fapolicyd was updated to 1.1 libcap was updated to 2.48 lsvpd was updated to 1.7.13 opencryptoki was updated to 3.17.0 pcsc-lite was updated to 1.9.5 powerpc-utils was updated to 1.3.9 samba was updated to 4.15.5","title":"General updates and improvements"},{"location":"release-notes/8.6/#new-packages","text":"Among the others, the following packages were added to os repository for this release: aardvark-dns adwaita-icon-theme-devel ansible-core ansible-test bind9.16 bind9.16-chroot bind9.16-devel bind9.16-dnssec-utils bind9.16-doc bind9.16-libs bind9.16-license bind9.16-utils coreos-installer-dracut fdo-admin-cli fdo-client fdo-init fdo-manufacturing-server fdo-owner-cli fdo-owner-onboarding-server fdo-rendezvous-server fence-virtd-cpg fwupd-devel gdm-devel gdm-pam-extensions-devel glibc-gconv-extra gnome-shell-extension-classification-banner gnome-shell-extension-dash-to-panel greenboot-default-health-checks hostapd libgcab1-devel libguestfs-appliance libnbd-bash-completion libpinyin-devel libqrtr-glib libselinux-static libss-devel libtpms libtpms-devel libuser-devel libvirt-wireshark libxmlb-devel lmdb-devel maven-openjdk17 nbdkit-gzip-filter nbdkit-nbd-plugin nbdkit-tar-filter nbdkit-tar-plugin nbdkit-tmpdisk-plugin netavark NetworkManager-initscripts-updown nftables-devel nginx-mod-devel nmstate-devel nmstate-libs osbuild-composer-dnf-json osbuild-luks2 osbuild-lvm2 pcp-pmda-denki pcp-pmda-mongodb php-pecl-xdebug3 multiple perl-* that are in perl 5.32 modules prometheus-jmx-exporter-openjdk11 python38-resolvelib python3-bind9.16 python3-dnf-plugin-modulesync qatlib-tests qatzip qatzip-devel qatzip-libs qemu-kvm-docs qemu-kvm-hw-usbredir qemu-kvm-ui-opengl qemu-kvm-ui-spice rig rsyslog-mmfields rust-std-static-wasm32-wasi shadow-utils-subid shadow-utils-subid-devel sshpass stress-ng swtpm swtpm-devel swtpm-libs swtpm-tools swtpm-tools-pkcs11 virt-v2v-bash-completion virt-v2v-man-pages-ja virt-v2v-man-pages-uk webrtc-audio-processing-devel weldr-client","title":"New packages"},{"location":"release-notes/8.6/#branded-packages","text":"Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help cloud-init crash firefox httpd initial-setup ipa libguestfs libreoffice libreport nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide skopeo sos subscription-manager thunderbird","title":"Branded packages"},{"location":"release-notes/8.6/#removed-packages","text":"The following packages were removed: rhc and related packages insights-client and related packages","title":"Removed packages"},{"location":"release-notes/8.6/#batteries","text":"Batteries repository contains packages that are needed to rebuild the distribution but are not included in any upstream repositories. Right now, this repository includes more than 2500 packages for each buildroot. Multiple batteries were updated for this release including: Bootstraps for Perl 5.32 Updated mesa batteries Smaller packages that broke buildroot About 420 packages were updated for x86_64 buildroot alone.","title":"Batteries"},{"location":"release-notes/8.6/#gaia-build-system","text":"We are still working on Gaia 3.0.","title":"Gaia build system"},{"location":"release-notes/8.6/#additional-resources","text":"Download EuroLinux ISO , (secondary download link) EuroLinux Public Request for Change and Bug Tracker Red Hat 8.6 Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/8.7-beta/","text":"EuroLinux 8.7 Beta Release Notes EuroLinux 8.7 is the first beta release for x86_64 and aarch64 beta published concurrently. The Beta version will allow us to provide EuroLinux 8.7 faster. This version\u2019s code name is Brussels - the capital city of Belgium and the heart of European Union. Older modules removed In this beta we noticed that a lot of modules were obsoleted or removed, we are waiting for GA version to confirm that there will be a mechanism that should allow smoother migration between modules or that these modules will be available. Dynamic programming languages, Web and Database servers New versions of the following components are now available: New: Ruby 3.1 - module ruby stream 3.1 New: Mercurial 6.2 - module mercurial stream 6.2 New: Node.js 18 - module nodejs stream 18 Redis 6 - module redis:6 was updated from version 6.0 to 6.2.7 Compiler Toolset The following compiler toolsets have been updated in EL 8.6: New: GCC-Toolset-12 - toolset gcc-toolset-12 New: Dotnet 7.0 - Dotnet 7.0 packages Rust Toolset - module rust-toolset:rhel8 was updated to version 1.62.1 from 1.58.1 LLVM Toolset - module llvm-toolset:rhel8 was updated to version 14.0.0 from 13.0.1 Go Lang Toolset - module go-toolset:rhel8 that provides the Go Lang stack was updated to version 1.18.4 from 1.17.7 Containers Containers tools module containers-tools stream rhel was heavily updated Containers tools module containers-tools stream 4.0 was heavily updated Containers tools module containers-tools stream 3.0 was mostly removed Containers tools module containers-tools stream 2.0 was mostly removed Security Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: NSS no longer support RSA keys shorter than 1023 bits and won't work with such keys. Updated SCAP security guilde with new sysctl , pampwquality , grub2 rules. fapolicyd rebased to 1.1.3 General updates and improvements Among the others, the following packages were updated and enhanced: QT5 toolchain and utilities were updated from 5.15.2 to 5.15.3 Opencryptoki was updated to version 3.18.0 from 3.17.0 Libva was updated to version 2.13.0 from 2.5.0 Chrony was updated to version 4.2 from 4.1 Unbound was updated to version 1.16.2 from 1.7.3 Fapolicyd rebased to 1.1.3 from 1.1 Mariadb-java-client rebased to version 2.7.1 from 2.2.5 open-vm-tools rebased to 12.0.5 from 11.3.5 New packages Among the others, the following packages were added to os repository for this release: Multiple qt5-docs packages aardvark-dns anaconda-widgets-devel aspnetcore-runtime-7.0 aspnetcore-targeting-pack-7.0 dotnet-apphost-pack-7.0 dotnet-hostfxr-7.0 dotnet-sdk-7.0-source-built-artifacts egl-utils frr-selinux fstrm-utils gcc-plugin-annobin gcc-toolset-12 gcc-toolset-12-annobin-annocheck gcc-toolset-12-annobin-docs gcc-toolset-12-annobin-plugin-gcc gcc-toolset-12-binutils gcc-toolset-12-binutils-devel gcc-toolset-12-binutils-gold gcc-toolset-12-build gcc-toolset-12-dwz gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ gcc-toolset-12-gcc-gfortran gcc-toolset-12-gcc-plugin-devel gcc-toolset-12-gdb gcc-toolset-12-libasan-devel gcc-toolset-12-libatomic-devel gcc-toolset-12-libgccjit gcc-toolset-12-libgccjit-devel gcc-toolset-12-libgccjit-docs gcc-toolset-12-libitm-devel gcc-toolset-12-liblsan-devel gcc-toolset-12-libstdc++-devel gcc-toolset-12-libstdc++-docs gcc-toolset-12-libtsan-devel gcc-toolset-12-libubsan-devel gcc-toolset-12-runtime gtk3-devel-docs idm-pki-acme idm-pki-base idm-pki-base-java idm-pki-ca idm-pki-kra idm-pki-symkey libasan8 libdhash-devel libestr-devel liblockfile libstoragemgmt-nfs-plugin libverto-libev make-latest (currently make43) make43 make43-devel open-vm-tools-salt-minion openslp-devel pam_wrapper poppler-qt5 python-ldb-devel-common python-sphinx-latex python3-babeltrace python3-cairo-devel python3-idm-pki python3-lasso python3-ldb-devel python3-talloc-devel redhat-cloud-client-configuration ssd-idp systemd-resolved (technology preview) tuned-profiles-postgresql xmlstarlet xxhash yara Branded packages Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help cloud-init crash firefox httpd initial-setup ipa libguestfs libreoffice libreport nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide sos subscription-manager thunderbird Removed packages The following packages were removed: rhc and related packages insights-client and related packages Maven 3.8 Maven 3.8 - module maven stream 3.8 was not introduced in this beta. Currently upstream didn't provide modules metadata for javapackages-tools:202201 and javapackages-bootstrap:202201 that are required to build Maven 3.8. The default profile for javapackages-tools:202201 is available in the Red Hat CodeReady-Builder repository but there is no modular metadata or RPMs. We manage to create this module in not reproducible way and in worst case scenario we will provide specially crafted VM to build it for orgs that are using Gaia Build System. We decided not to put this module as we are rebuilding EuroLinux multiple times and not reproducible rebuilds are next to impossible to maintain. Batteries Batteries repository contains packages that are needed to rebuild the distribution but are not included in any upstream repositories. Right now, this repository includes more than 2500 packages for each buildroot. About 30 packages were updated for x86_64 buildroot. Gaia build system We are currently using Gaia 3.0 alpha. EuroLinux 9.1 beta As we released a brand new EuroLinux Desktop we are working on better test integrations with EuroLinux 9. This process takes time. We should deliver EuroLinux 9.1 beta before EuroLinux 9.1 GA. Additional resources Download EuroLinux ISO , (secondary download link) EuroLinux Public Request for Change and Bug Tracker Red Hat 8.7 beta Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 8.7 Beta Release Notes"},{"location":"release-notes/8.7-beta/#eurolinux-87-beta-release-notes","text":"EuroLinux 8.7 is the first beta release for x86_64 and aarch64 beta published concurrently. The Beta version will allow us to provide EuroLinux 8.7 faster. This version\u2019s code name is Brussels - the capital city of Belgium and the heart of European Union. Older modules removed In this beta we noticed that a lot of modules were obsoleted or removed, we are waiting for GA version to confirm that there will be a mechanism that should allow smoother migration between modules or that these modules will be available.","title":"EuroLinux 8.7 Beta Release Notes"},{"location":"release-notes/8.7-beta/#dynamic-programming-languages-web-and-database-servers","text":"New versions of the following components are now available: New: Ruby 3.1 - module ruby stream 3.1 New: Mercurial 6.2 - module mercurial stream 6.2 New: Node.js 18 - module nodejs stream 18 Redis 6 - module redis:6 was updated from version 6.0 to 6.2.7","title":"Dynamic programming languages, Web and Database servers"},{"location":"release-notes/8.7-beta/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.6: New: GCC-Toolset-12 - toolset gcc-toolset-12 New: Dotnet 7.0 - Dotnet 7.0 packages Rust Toolset - module rust-toolset:rhel8 was updated to version 1.62.1 from 1.58.1 LLVM Toolset - module llvm-toolset:rhel8 was updated to version 14.0.0 from 13.0.1 Go Lang Toolset - module go-toolset:rhel8 that provides the Go Lang stack was updated to version 1.18.4 from 1.17.7","title":"Compiler Toolset"},{"location":"release-notes/8.7-beta/#containers","text":"Containers tools module containers-tools stream rhel was heavily updated Containers tools module containers-tools stream 4.0 was heavily updated Containers tools module containers-tools stream 3.0 was mostly removed Containers tools module containers-tools stream 2.0 was mostly removed","title":"Containers"},{"location":"release-notes/8.7-beta/#security","text":"Most of the security features are connected to rebased/updated versions of the packages. The most crucial security changes include: NSS no longer support RSA keys shorter than 1023 bits and won't work with such keys. Updated SCAP security guilde with new sysctl , pampwquality , grub2 rules. fapolicyd rebased to 1.1.3","title":"Security"},{"location":"release-notes/8.7-beta/#general-updates-and-improvements","text":"Among the others, the following packages were updated and enhanced: QT5 toolchain and utilities were updated from 5.15.2 to 5.15.3 Opencryptoki was updated to version 3.18.0 from 3.17.0 Libva was updated to version 2.13.0 from 2.5.0 Chrony was updated to version 4.2 from 4.1 Unbound was updated to version 1.16.2 from 1.7.3 Fapolicyd rebased to 1.1.3 from 1.1 Mariadb-java-client rebased to version 2.7.1 from 2.2.5 open-vm-tools rebased to 12.0.5 from 11.3.5","title":"General updates and improvements"},{"location":"release-notes/8.7-beta/#new-packages","text":"Among the others, the following packages were added to os repository for this release: Multiple qt5-docs packages aardvark-dns anaconda-widgets-devel aspnetcore-runtime-7.0 aspnetcore-targeting-pack-7.0 dotnet-apphost-pack-7.0 dotnet-hostfxr-7.0 dotnet-sdk-7.0-source-built-artifacts egl-utils frr-selinux fstrm-utils gcc-plugin-annobin gcc-toolset-12 gcc-toolset-12-annobin-annocheck gcc-toolset-12-annobin-docs gcc-toolset-12-annobin-plugin-gcc gcc-toolset-12-binutils gcc-toolset-12-binutils-devel gcc-toolset-12-binutils-gold gcc-toolset-12-build gcc-toolset-12-dwz gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ gcc-toolset-12-gcc-gfortran gcc-toolset-12-gcc-plugin-devel gcc-toolset-12-gdb gcc-toolset-12-libasan-devel gcc-toolset-12-libatomic-devel gcc-toolset-12-libgccjit gcc-toolset-12-libgccjit-devel gcc-toolset-12-libgccjit-docs gcc-toolset-12-libitm-devel gcc-toolset-12-liblsan-devel gcc-toolset-12-libstdc++-devel gcc-toolset-12-libstdc++-docs gcc-toolset-12-libtsan-devel gcc-toolset-12-libubsan-devel gcc-toolset-12-runtime gtk3-devel-docs idm-pki-acme idm-pki-base idm-pki-base-java idm-pki-ca idm-pki-kra idm-pki-symkey libasan8 libdhash-devel libestr-devel liblockfile libstoragemgmt-nfs-plugin libverto-libev make-latest (currently make43) make43 make43-devel open-vm-tools-salt-minion openslp-devel pam_wrapper poppler-qt5 python-ldb-devel-common python-sphinx-latex python3-babeltrace python3-cairo-devel python3-idm-pki python3-lasso python3-ldb-devel python3-talloc-devel redhat-cloud-client-configuration ssd-idp systemd-resolved (technology preview) tuned-profiles-postgresql xmlstarlet xxhash yara","title":"New packages"},{"location":"release-notes/8.7-beta/#branded-packages","text":"Multiple packages have names changed due to branding, including: redhat-backgrounds -> el-backgrounds redhat-indexhtml -> el-indexhtml redhat-logos -> el-logos redhat-logos-httpd -> el-logos-httpd redhat-logos-ipa -> el-logos-ipa redhat-release -> el-release redhat-release-eula -> el-release - we include EULA in release package All these packages have proper RPM provides declaration. The list of the packages that are changed due to branding includes, among the others: abrt anaconda anaconda-user-help cloud-init crash firefox httpd initial-setup ipa libguestfs libreoffice libreport nginx opa-ff opa-fm openscap osinfo-db python3 redhat-rpm-config scap-security-guide sos subscription-manager thunderbird","title":"Branded packages"},{"location":"release-notes/8.7-beta/#removed-packages","text":"The following packages were removed: rhc and related packages insights-client and related packages","title":"Removed packages"},{"location":"release-notes/8.7-beta/#maven-38","text":"Maven 3.8 - module maven stream 3.8 was not introduced in this beta. Currently upstream didn't provide modules metadata for javapackages-tools:202201 and javapackages-bootstrap:202201 that are required to build Maven 3.8. The default profile for javapackages-tools:202201 is available in the Red Hat CodeReady-Builder repository but there is no modular metadata or RPMs. We manage to create this module in not reproducible way and in worst case scenario we will provide specially crafted VM to build it for orgs that are using Gaia Build System. We decided not to put this module as we are rebuilding EuroLinux multiple times and not reproducible rebuilds are next to impossible to maintain.","title":"Maven 3.8"},{"location":"release-notes/8.7-beta/#batteries","text":"Batteries repository contains packages that are needed to rebuild the distribution but are not included in any upstream repositories. Right now, this repository includes more than 2500 packages for each buildroot. About 30 packages were updated for x86_64 buildroot.","title":"Batteries"},{"location":"release-notes/8.7-beta/#gaia-build-system","text":"We are currently using Gaia 3.0 alpha.","title":"Gaia build system"},{"location":"release-notes/8.7-beta/#eurolinux-91-beta","text":"As we released a brand new EuroLinux Desktop we are working on better test integrations with EuroLinux 9. This process takes time. We should deliver EuroLinux 9.1 beta before EuroLinux 9.1 GA.","title":"EuroLinux 9.1 beta"},{"location":"release-notes/8.7-beta/#additional-resources","text":"Download EuroLinux ISO , (secondary download link) EuroLinux Public Request for Change and Bug Tracker Red Hat 8.7 beta Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/9.0-beta/","text":"EuroLinux 9 Beta Release Notes Technical changes between EuroLinux 9 and 8 Installer and image creation In EuroLinux 9.0 you can now use a standalone smart card to both authenticate yourself and gain additional privileges via sudo . For the typical cases of installing EuroLinux with a medium such as a disk interactively a Quality of Life tweak has been implemented: the Anaconda installer will now automatically activate a network connection if applicable (will try to obtain an address via DHCP). You can now optionally permit a password-based root login via SSH or completely lock the root account in any case. (While the former is not recommended due to security and disabled in EuroLinux 9 by default, there are valid use cases which we support with this single easy switch) Administrative tools If you want to rename a network interface, it is recommended that you use systemd link files. Check man 5 systemd.link for more information. Alternatively udev rules may be used. If you need to use the ifcfg tool, please install the initscripts package first since it is not installed by default. Security EuroLinux 9 provides OpenSSL version 3.0.0. Among other things, the concept of providers has been added, which means that different programs can use different security algorithms depending on their needs. You can imagine a situation where you have implemented solutions where one needs to use FIPS mode, while others need to maintain compliance with less secure policies. This new version comes with a few security-related implications. The TLS-1.3 protocol requires that a PKCS#11 token supports raw RSA or RSA-PSS signatures. If this is applicable to your scenario, please configure your software to use TLS up to TLS-1.2 . Additionally please edit the file /etc/pki/tls/openssl.cnf and add this snippet at the very end of the [ crypto_policy ] section: SignatureAlgorithms = RSA+SHA256:RSA+SHA512:RSA+SHA384:ECDSA+SHA256:ECDSA+SHA512:ECDSA+SHA384 MaxProtocol = TLSv1.2 Developer tools Some of the newest and most reliable technology stacks for developers are available in the repositories. These include: Ant 1.10 GCC 11.2 Git 2.31 Go 1.17.5 LLVM 13 Maven 3.6.3 NodeJS 16 OpenJDK 17.0.1 PHP 8.0 Perl 5.32 Python 3.9 Ruby 3.0 Rust 1.56 SVN 1.14 The EuroLinux 9 platform ships glibc 2.34, which will provide 10 years of business-class stability support and the same amount of software binary interface compatibility time. As a result, programs written today will work the same way 10 years from now. Web servers and database engines The following software is now available in our repositories: HTTP servers: Apache HTTPD 2.4 nginx 1.20 Proxy servers: Squid 5.1 Varnish Cache 6.5 Database engines: MariaDB 10.5.12 MySQL 8.0 PostgreSQL 13 Redis 6.2.6 Security Policies - SCAP Security Guide The SCAP Security Guide has been updated to version 0.1.57 and made a number of changes from the counterpart we provide in EuroLinux 8: Removed deprecated SCAP 1.2 source data streams. Removed Bash profile remediation scripts to encourage more secure practices. Although references for EuroLinux 8 have been left in place, the current package is designed for EuroLinux 9 - please kindly use packages for older releases if you need to check them for security policies. GNOME 40 GNOME has been updated to GNOME 40, a major step forward from EuroLinux 8's GNOME 3.32.2 , which includes many new features. GNOME 40 includes a new and improved style, including the user interface, icons and desktop, The Activities look and feel provides a better experience when working, launching applications and arranging your personal workspace - workspaces are now arranged horizontally and the window overview and application grid are available vertically. Many Quality of Life improvements have also been added, including: running the software using a separate graphics card by right-clicking and selecting the appropriate option The ability to mute notifications by selecting Do not disturb , which will appear as a separate button in the notification Each screen can use a different refresh rate The Activities program allows you to group application icons into folders using a drag-and-drop method provide the ability to fractionally scale the display Notable changes EuroLinux 9 provides refreshed and updated versions of the following packages: m4 was updated from version 1.4.18 to 1.4.19 xdp-tools was updated from version 1.1.1 to 1.2.1 openchange was updated from 2.3 (version) 37 (release) to 2.3 (version) 38 (release) tigervnc was updated from 1.11.0 (version) 20 (release) to 1.11.0 (version) 21 (release) We expect updated versions of these packages to be available in the GA version of RHEL. Known issues Dotnet is not available at the moment. ~~Fix will arrive next week (the first week of march)~~ Update: It's planned for release with ARM Beta We are waiting for Secure Boot; as you can see here https://github.com/rhboot/shim-review/issues, it is a long process ~~There is only minimal ISO. AppStream complete ISO be published next week (the first week of April)~~ Update: AppStream ISO is available. SCAP is not usable. A fix will arrive with EuroLinux 9 beta for ARM64 Until GA we will not rebuild other Enterprise Linuxes as it is pointless There might be branding issues. If you find one, please create an issue in our public bug tracker Migration scripts worked well in our tests. We were able to migrate from CentOS Stream 9 and Red Hat Enterprise Linux 9 beta. Because EuroLinux 9 and Red Hat Enterprise Linux 9 are in the beta stage, in the meantime, CentOS Stream 9 is heavily developed. We won't provide assistance and support for migration until the GA of EuroLinux 9. EuroLinux 9 beta is not officially supported for production uses We will update this section when fixes arrive, or new issues arise.. Batteries repositories The battery repository is available for customers with Golden Key and Gaia subscriptions. There are about 1000 packages that are not part of any build (so they are not included in EuroLinux Open Build roots) but are required to rebuild EuroLinux/Custom Fork from RHEL or Eurolinux sources. EuroLinux 9 for ARM EuroLinux for ARM will use an updated Gaia rebuild stack. We decided that this is an ideal testbed because ARM64 is not as popular as x86_64 architecture. It also allowed us to create x86_64, open build roots for i686 and x86_64 and batteries repos faster. Because creating EuroLinux 9 beta took us about four weeks, ARM should take about two weeks, after updating Gaia Stack, as we have all the necessary batteries and build orders figured out. Gaia updates New Gaia used to rebuild EuroLinux 9 for ARM64 is even more distributed. There are new commands in Gaia: new automodule-update Gaia subcommand, that well - automatically updates modules. No more manual config changes for modules new automodule-merge Gaia subcommand. This command uses multiple input files (RH/EuroLinux modules files + result build + custom files) to create an updated module definition Other notable changes: Striga now creates automodule-* commands Striga can create --partial commands for module rebuild Vardoger now supports config files that allows ignoring chosen tests/levels for selected RPMs A lot of new configs for EuroLinux 9 We will also update hardware requirements for rebuild, including reference build servers for ARM and PowerPC. The rebuilds will start with the release of EuroLinux 9. It will also require updated infrastructure. Container and cloud images You can use the following publicly available images for EuroLinux 9 beta EuroLinux 9 Beta Vagrant Boxes (libvirt/VMware Workstation/VirtualBox) EuroLinux 9 Beta Container on the Docker Hub EuroLinux 9 Beta Container on the Quay.io Additional resources Download EuroLinux ISO Download EuroLinux ISO secondary download EuroLinux universal migration scripts EuroLinux Public Request for Change and Bug Tracker Red Hat 9.0 beta Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 9 Beta Release Notes"},{"location":"release-notes/9.0-beta/#eurolinux-9-beta-release-notes","text":"","title":"EuroLinux 9 Beta Release Notes"},{"location":"release-notes/9.0-beta/#technical-changes-between-eurolinux-9-and-8","text":"","title":"Technical changes between EuroLinux 9 and 8"},{"location":"release-notes/9.0-beta/#installer-and-image-creation","text":"In EuroLinux 9.0 you can now use a standalone smart card to both authenticate yourself and gain additional privileges via sudo . For the typical cases of installing EuroLinux with a medium such as a disk interactively a Quality of Life tweak has been implemented: the Anaconda installer will now automatically activate a network connection if applicable (will try to obtain an address via DHCP). You can now optionally permit a password-based root login via SSH or completely lock the root account in any case. (While the former is not recommended due to security and disabled in EuroLinux 9 by default, there are valid use cases which we support with this single easy switch)","title":"Installer and image creation"},{"location":"release-notes/9.0-beta/#administrative-tools","text":"If you want to rename a network interface, it is recommended that you use systemd link files. Check man 5 systemd.link for more information. Alternatively udev rules may be used. If you need to use the ifcfg tool, please install the initscripts package first since it is not installed by default.","title":"Administrative tools"},{"location":"release-notes/9.0-beta/#security","text":"EuroLinux 9 provides OpenSSL version 3.0.0. Among other things, the concept of providers has been added, which means that different programs can use different security algorithms depending on their needs. You can imagine a situation where you have implemented solutions where one needs to use FIPS mode, while others need to maintain compliance with less secure policies. This new version comes with a few security-related implications. The TLS-1.3 protocol requires that a PKCS#11 token supports raw RSA or RSA-PSS signatures. If this is applicable to your scenario, please configure your software to use TLS up to TLS-1.2 . Additionally please edit the file /etc/pki/tls/openssl.cnf and add this snippet at the very end of the [ crypto_policy ] section: SignatureAlgorithms = RSA+SHA256:RSA+SHA512:RSA+SHA384:ECDSA+SHA256:ECDSA+SHA512:ECDSA+SHA384 MaxProtocol = TLSv1.2","title":"Security"},{"location":"release-notes/9.0-beta/#developer-tools","text":"Some of the newest and most reliable technology stacks for developers are available in the repositories. These include: Ant 1.10 GCC 11.2 Git 2.31 Go 1.17.5 LLVM 13 Maven 3.6.3 NodeJS 16 OpenJDK 17.0.1 PHP 8.0 Perl 5.32 Python 3.9 Ruby 3.0 Rust 1.56 SVN 1.14 The EuroLinux 9 platform ships glibc 2.34, which will provide 10 years of business-class stability support and the same amount of software binary interface compatibility time. As a result, programs written today will work the same way 10 years from now.","title":"Developer tools"},{"location":"release-notes/9.0-beta/#web-servers-and-database-engines","text":"The following software is now available in our repositories: HTTP servers: Apache HTTPD 2.4 nginx 1.20 Proxy servers: Squid 5.1 Varnish Cache 6.5 Database engines: MariaDB 10.5.12 MySQL 8.0 PostgreSQL 13 Redis 6.2.6","title":"Web servers and database engines"},{"location":"release-notes/9.0-beta/#security-policies-scap-security-guide","text":"The SCAP Security Guide has been updated to version 0.1.57 and made a number of changes from the counterpart we provide in EuroLinux 8: Removed deprecated SCAP 1.2 source data streams. Removed Bash profile remediation scripts to encourage more secure practices. Although references for EuroLinux 8 have been left in place, the current package is designed for EuroLinux 9 - please kindly use packages for older releases if you need to check them for security policies.","title":"Security Policies - SCAP Security Guide"},{"location":"release-notes/9.0-beta/#gnome-40","text":"GNOME has been updated to GNOME 40, a major step forward from EuroLinux 8's GNOME 3.32.2 , which includes many new features. GNOME 40 includes a new and improved style, including the user interface, icons and desktop, The Activities look and feel provides a better experience when working, launching applications and arranging your personal workspace - workspaces are now arranged horizontally and the window overview and application grid are available vertically. Many Quality of Life improvements have also been added, including: running the software using a separate graphics card by right-clicking and selecting the appropriate option The ability to mute notifications by selecting Do not disturb , which will appear as a separate button in the notification Each screen can use a different refresh rate The Activities program allows you to group application icons into folders using a drag-and-drop method provide the ability to fractionally scale the display","title":"GNOME 40"},{"location":"release-notes/9.0-beta/#notable-changes","text":"EuroLinux 9 provides refreshed and updated versions of the following packages: m4 was updated from version 1.4.18 to 1.4.19 xdp-tools was updated from version 1.1.1 to 1.2.1 openchange was updated from 2.3 (version) 37 (release) to 2.3 (version) 38 (release) tigervnc was updated from 1.11.0 (version) 20 (release) to 1.11.0 (version) 21 (release) We expect updated versions of these packages to be available in the GA version of RHEL.","title":"Notable changes"},{"location":"release-notes/9.0-beta/#known-issues","text":"Dotnet is not available at the moment. ~~Fix will arrive next week (the first week of march)~~ Update: It's planned for release with ARM Beta We are waiting for Secure Boot; as you can see here https://github.com/rhboot/shim-review/issues, it is a long process ~~There is only minimal ISO. AppStream complete ISO be published next week (the first week of April)~~ Update: AppStream ISO is available. SCAP is not usable. A fix will arrive with EuroLinux 9 beta for ARM64 Until GA we will not rebuild other Enterprise Linuxes as it is pointless There might be branding issues. If you find one, please create an issue in our public bug tracker Migration scripts worked well in our tests. We were able to migrate from CentOS Stream 9 and Red Hat Enterprise Linux 9 beta. Because EuroLinux 9 and Red Hat Enterprise Linux 9 are in the beta stage, in the meantime, CentOS Stream 9 is heavily developed. We won't provide assistance and support for migration until the GA of EuroLinux 9. EuroLinux 9 beta is not officially supported for production uses We will update this section when fixes arrive, or new issues arise..","title":"Known issues"},{"location":"release-notes/9.0-beta/#batteries-repositories","text":"The battery repository is available for customers with Golden Key and Gaia subscriptions. There are about 1000 packages that are not part of any build (so they are not included in EuroLinux Open Build roots) but are required to rebuild EuroLinux/Custom Fork from RHEL or Eurolinux sources.","title":"Batteries repositories"},{"location":"release-notes/9.0-beta/#eurolinux-9-for-arm","text":"EuroLinux for ARM will use an updated Gaia rebuild stack. We decided that this is an ideal testbed because ARM64 is not as popular as x86_64 architecture. It also allowed us to create x86_64, open build roots for i686 and x86_64 and batteries repos faster. Because creating EuroLinux 9 beta took us about four weeks, ARM should take about two weeks, after updating Gaia Stack, as we have all the necessary batteries and build orders figured out.","title":"EuroLinux 9 for ARM"},{"location":"release-notes/9.0-beta/#gaia-updates","text":"New Gaia used to rebuild EuroLinux 9 for ARM64 is even more distributed. There are new commands in Gaia: new automodule-update Gaia subcommand, that well - automatically updates modules. No more manual config changes for modules new automodule-merge Gaia subcommand. This command uses multiple input files (RH/EuroLinux modules files + result build + custom files) to create an updated module definition Other notable changes: Striga now creates automodule-* commands Striga can create --partial commands for module rebuild Vardoger now supports config files that allows ignoring chosen tests/levels for selected RPMs A lot of new configs for EuroLinux 9 We will also update hardware requirements for rebuild, including reference build servers for ARM and PowerPC. The rebuilds will start with the release of EuroLinux 9. It will also require updated infrastructure.","title":"Gaia updates"},{"location":"release-notes/9.0-beta/#container-and-cloud-images","text":"You can use the following publicly available images for EuroLinux 9 beta EuroLinux 9 Beta Vagrant Boxes (libvirt/VMware Workstation/VirtualBox) EuroLinux 9 Beta Container on the Docker Hub EuroLinux 9 Beta Container on the Quay.io","title":"Container and cloud images"},{"location":"release-notes/9.0-beta/#additional-resources","text":"Download EuroLinux ISO Download EuroLinux ISO secondary download EuroLinux universal migration scripts EuroLinux Public Request for Change and Bug Tracker Red Hat 9.0 beta Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/9.0/","text":"EuroLinux 9 Release Notes Technical changes between EuroLinux 9 and 8 Installer and image creation In EuroLinux 9.0 you can now use a standalone smart card to both authenticate yourself and gain additional privileges via sudo . For the typical cases of installing EuroLinux with a medium such as a disk interactively a Quality of Life tweak has been implemented: the Anaconda installer will now automatically activate a network connection if applicable (will try to obtain an address via DHCP). You can now optionally permit a password-based root login via SSH or completely lock the root account in any case. (While the former is not recommended due to security and disabled in EuroLinux 9 by default, there are valid use cases which we support with this single easy switch) Administrative tools If you want to rename a network interface, it is recommended that you use systemd link files. Check man 5 systemd.link for more information. Alternatively udev rules may be used. If you need to use the ifcfg tool, please install the initscripts package first since it is not installed by default. Security EuroLinux 9 provides OpenSSL version 3.0.0. Among other things, the concept of providers has been added, which means that different programs can use different security algorithms depending on their needs. You can imagine a situation where you have implemented solutions where one needs to use FIPS mode, while others need to maintain compliance with less secure policies. This new version comes with a few security-related implications. The TLS-1.3 protocol requires that a PKCS#11 token supports raw RSA or RSA-PSS signatures. If this is applicable to your scenario, please configure your software to use TLS up to TLS-1.2 . Additionally please edit the file /etc/pki/tls/openssl.cnf and add this snippet at the very end of the [ crypto_policy ] section: SignatureAlgorithms = RSA+SHA256:RSA+SHA512:RSA+SHA384:ECDSA+SHA256:ECDSA+SHA512:ECDSA+SHA384 MaxProtocol = TLSv1.2 Developer tools Some of the newest and most reliable technology stacks for developers are available in the repositories. These include: Ant 1.10 GCC 11.2 Git 2.31 Go 1.17.5 LLVM 13 Maven 3.6.3 NodeJS 16 OpenJDK 17.0.1 PHP 8.0 Perl 5.32 Python 3.9 Ruby 3.0 Rust 1.56 SVN 1.14 The EuroLinux 9 platform ships glibc 2.34, which will provide 10 years of business-class stability support and the same amount of software binary interface compatibility time. As a result, programs written today will work the same way 10 years from now. Web servers and database engines The following software is now available in our repositories: HTTP servers: Apache HTTPD 2.4 nginx 1.20 Proxy servers: Squid 5.1 Varnish Cache 6.5 Database engines: MariaDB 10.5.12 MySQL 8.0 PostgreSQL 13 Redis 6.2.6 Security Policies - SCAP Security Guide The SCAP Security Guide has been updated to version 0.1.57 and made a number of changes from the counterpart we provide in EuroLinux 8: Removed deprecated SCAP 1.2 source data streams. Removed Bash profile remediation scripts to encourage more secure practices. Although references for EuroLinux 8 have been left in place, the current package is designed for EuroLinux 9 - please kindly use packages for older releases if you need to check them for security policies. GNOME 40 GNOME has been updated to GNOME 40, a major step forward from EuroLinux 8's GNOME 3.32.2 , which includes many new features. GNOME 40 includes a new and improved style, including the user interface, icons and desktop, The Activities look and feel provides a better experience when working, launching applications and arranging your personal workspace - workspaces are now arranged horizontally and the window overview and application grid are available vertically. Many Quality of Life improvements have also been added, including: running the software using a separate graphics card by right-clicking and selecting the appropriate option The ability to mute notifications by selecting Do not disturb , which will appear as a separate button in the notification Each screen can use a different refresh rate The Activities program allows you to group application icons into folders using a drag-and-drop method provide the ability to fractionally scale the display Notable changes EuroLinux 9 provides refreshed and updated versions of the following packages: m4 was updated from version 1.4.18 to 1.4.19 xdp-tools was updated from version 1.1.1 to 1.2.1 openchange was updated from 2.3 (version) 37 (release) to 2.3 (version) 38 (release) tigervnc was updated from 1.11.0 (version) 20 (release) to 1.11.0 (version) 21 (release) We expect updated versions of these packages to be available in the GA version of RHEL. Known issues We are waiting for Secure Boot; as you can see here https://github.com/rhboot/shim-review/issues, it is a long process Batteries repositories The battery repository is available for customers with Golden Key and Gaia subscriptions. There are about 1000 packages that are not part of any build (so they are not included in EuroLinux Open Build roots) but are required to rebuild EuroLinux/Custom Fork from RHEL or Eurolinux sources. EuroLinux 9 for ARM EuroLinux for ARM will use an updated Gaia rebuild stack. We decided that this is an ideal testbed because ARM64 is not as popular as x86_64 architecture. It also allowed us to create x86_64, open build roots for i686 and x86_64 and batteries repos faster. Gaia updates New Gaia used to rebuild EuroLinux 9 for ARM64 is even more distributed. There are new commands in Gaia: new automodule-update Gaia subcommand, that well - automatically updates modules. No more manual config changes for modules new automodule-merge Gaia subcommand. This command uses multiple input files (RH/EuroLinux modules files + result build + custom files) to create an updated module definition Other notable changes: Striga now creates automodule-* commands Striga can create --partial commands for module rebuild Vardoger now supports config files that allows ignoring chosen tests/levels for selected RPMs A lot of new configs for EuroLinux 9 We will also update hardware requirements for rebuild, including reference build servers for ARM and PowerPC. The rebuilds will start with the release of EuroLinux 9. It will also require updated infrastructure. Container and cloud images You can use the following publicly available images for EuroLinux 9 EuroLinux 9 Vagrant Boxes (libvirt/VMware Workstation/VirtualBox) EuroLinux 9 Container on the Docker Hub EuroLinux 9 Container on the Quay.io Additional resources Download EuroLinux ISO Download EuroLinux ISO secondary download EuroLinux universal migration scripts EuroLinux Public Request for Change and Bug Tracker Red Hat 9.0 Release Notes parts of our release notes are loosely based on this document.","title":"EuroLinux 9 Release Notes"},{"location":"release-notes/9.0/#eurolinux-9-release-notes","text":"","title":"EuroLinux 9 Release Notes"},{"location":"release-notes/9.0/#technical-changes-between-eurolinux-9-and-8","text":"","title":"Technical changes between EuroLinux 9 and 8"},{"location":"release-notes/9.0/#installer-and-image-creation","text":"In EuroLinux 9.0 you can now use a standalone smart card to both authenticate yourself and gain additional privileges via sudo . For the typical cases of installing EuroLinux with a medium such as a disk interactively a Quality of Life tweak has been implemented: the Anaconda installer will now automatically activate a network connection if applicable (will try to obtain an address via DHCP). You can now optionally permit a password-based root login via SSH or completely lock the root account in any case. (While the former is not recommended due to security and disabled in EuroLinux 9 by default, there are valid use cases which we support with this single easy switch)","title":"Installer and image creation"},{"location":"release-notes/9.0/#administrative-tools","text":"If you want to rename a network interface, it is recommended that you use systemd link files. Check man 5 systemd.link for more information. Alternatively udev rules may be used. If you need to use the ifcfg tool, please install the initscripts package first since it is not installed by default.","title":"Administrative tools"},{"location":"release-notes/9.0/#security","text":"EuroLinux 9 provides OpenSSL version 3.0.0. Among other things, the concept of providers has been added, which means that different programs can use different security algorithms depending on their needs. You can imagine a situation where you have implemented solutions where one needs to use FIPS mode, while others need to maintain compliance with less secure policies. This new version comes with a few security-related implications. The TLS-1.3 protocol requires that a PKCS#11 token supports raw RSA or RSA-PSS signatures. If this is applicable to your scenario, please configure your software to use TLS up to TLS-1.2 . Additionally please edit the file /etc/pki/tls/openssl.cnf and add this snippet at the very end of the [ crypto_policy ] section: SignatureAlgorithms = RSA+SHA256:RSA+SHA512:RSA+SHA384:ECDSA+SHA256:ECDSA+SHA512:ECDSA+SHA384 MaxProtocol = TLSv1.2","title":"Security"},{"location":"release-notes/9.0/#developer-tools","text":"Some of the newest and most reliable technology stacks for developers are available in the repositories. These include: Ant 1.10 GCC 11.2 Git 2.31 Go 1.17.5 LLVM 13 Maven 3.6.3 NodeJS 16 OpenJDK 17.0.1 PHP 8.0 Perl 5.32 Python 3.9 Ruby 3.0 Rust 1.56 SVN 1.14 The EuroLinux 9 platform ships glibc 2.34, which will provide 10 years of business-class stability support and the same amount of software binary interface compatibility time. As a result, programs written today will work the same way 10 years from now.","title":"Developer tools"},{"location":"release-notes/9.0/#web-servers-and-database-engines","text":"The following software is now available in our repositories: HTTP servers: Apache HTTPD 2.4 nginx 1.20 Proxy servers: Squid 5.1 Varnish Cache 6.5 Database engines: MariaDB 10.5.12 MySQL 8.0 PostgreSQL 13 Redis 6.2.6","title":"Web servers and database engines"},{"location":"release-notes/9.0/#security-policies-scap-security-guide","text":"The SCAP Security Guide has been updated to version 0.1.57 and made a number of changes from the counterpart we provide in EuroLinux 8: Removed deprecated SCAP 1.2 source data streams. Removed Bash profile remediation scripts to encourage more secure practices. Although references for EuroLinux 8 have been left in place, the current package is designed for EuroLinux 9 - please kindly use packages for older releases if you need to check them for security policies.","title":"Security Policies - SCAP Security Guide"},{"location":"release-notes/9.0/#gnome-40","text":"GNOME has been updated to GNOME 40, a major step forward from EuroLinux 8's GNOME 3.32.2 , which includes many new features. GNOME 40 includes a new and improved style, including the user interface, icons and desktop, The Activities look and feel provides a better experience when working, launching applications and arranging your personal workspace - workspaces are now arranged horizontally and the window overview and application grid are available vertically. Many Quality of Life improvements have also been added, including: running the software using a separate graphics card by right-clicking and selecting the appropriate option The ability to mute notifications by selecting Do not disturb , which will appear as a separate button in the notification Each screen can use a different refresh rate The Activities program allows you to group application icons into folders using a drag-and-drop method provide the ability to fractionally scale the display","title":"GNOME 40"},{"location":"release-notes/9.0/#notable-changes","text":"EuroLinux 9 provides refreshed and updated versions of the following packages: m4 was updated from version 1.4.18 to 1.4.19 xdp-tools was updated from version 1.1.1 to 1.2.1 openchange was updated from 2.3 (version) 37 (release) to 2.3 (version) 38 (release) tigervnc was updated from 1.11.0 (version) 20 (release) to 1.11.0 (version) 21 (release) We expect updated versions of these packages to be available in the GA version of RHEL.","title":"Notable changes"},{"location":"release-notes/9.0/#known-issues","text":"We are waiting for Secure Boot; as you can see here https://github.com/rhboot/shim-review/issues, it is a long process","title":"Known issues"},{"location":"release-notes/9.0/#batteries-repositories","text":"The battery repository is available for customers with Golden Key and Gaia subscriptions. There are about 1000 packages that are not part of any build (so they are not included in EuroLinux Open Build roots) but are required to rebuild EuroLinux/Custom Fork from RHEL or Eurolinux sources.","title":"Batteries repositories"},{"location":"release-notes/9.0/#eurolinux-9-for-arm","text":"EuroLinux for ARM will use an updated Gaia rebuild stack. We decided that this is an ideal testbed because ARM64 is not as popular as x86_64 architecture. It also allowed us to create x86_64, open build roots for i686 and x86_64 and batteries repos faster.","title":"EuroLinux 9 for ARM"},{"location":"release-notes/9.0/#gaia-updates","text":"New Gaia used to rebuild EuroLinux 9 for ARM64 is even more distributed. There are new commands in Gaia: new automodule-update Gaia subcommand, that well - automatically updates modules. No more manual config changes for modules new automodule-merge Gaia subcommand. This command uses multiple input files (RH/EuroLinux modules files + result build + custom files) to create an updated module definition Other notable changes: Striga now creates automodule-* commands Striga can create --partial commands for module rebuild Vardoger now supports config files that allows ignoring chosen tests/levels for selected RPMs A lot of new configs for EuroLinux 9 We will also update hardware requirements for rebuild, including reference build servers for ARM and PowerPC. The rebuilds will start with the release of EuroLinux 9. It will also require updated infrastructure.","title":"Gaia updates"},{"location":"release-notes/9.0/#container-and-cloud-images","text":"You can use the following publicly available images for EuroLinux 9 EuroLinux 9 Vagrant Boxes (libvirt/VMware Workstation/VirtualBox) EuroLinux 9 Container on the Docker Hub EuroLinux 9 Container on the Quay.io","title":"Container and cloud images"},{"location":"release-notes/9.0/#additional-resources","text":"Download EuroLinux ISO Download EuroLinux ISO secondary download EuroLinux universal migration scripts EuroLinux Public Request for Change and Bug Tracker Red Hat 9.0 Release Notes parts of our release notes are loosely based on this document.","title":"Additional resources"},{"location":"release-notes/ELD/","text":"EuroLinux 9 Desktop EuroLinux Desktop is a novelty in the operating system market. It combines the look and functionality of Windows\u00ae and macOS\u00ae with the reliability and security of a server-based Enterprise Linux distribution. Overview EuroLinux Desktop is built upon the source code of Red Hat\u00ae Enterprise Linux\u00ae 9. However, it includes a number of changes to the user interface. These primarily concern the system's appearance and usability. GNOME extensions have been used for this purpose. In EuroLinux Desktop, they are pre-configured and available immediately after installation - \"out of the box.\" In addition, the Polish language version of EuroLinux Desktop fills in the gaps in the Polish translations of the extensions and GNOME. Appearance & Features In EuroLinux Desktop, there is a translucent dock (taskbar) at the bottom of the screen. It stores icons for favorite applications, notifications and running programs, a button that displays icons for all applications in high magnification, as well as date and time information. It is possible to change the position of the bar to the right, left or top of the desktop, as well as to customize it extensively. The user can customize its height, length, transparency, color, icon spacing and size. The system allows icons to be placed on the desktop as standard, and provides a window maximization and minimization function. EuroLinux Desktop disables the overview mode and the hotcorner function, which displays the preview mode when you hover the mouse over the top left corner of the screen. When you right-click on the wallpaper, additional menu items appear (including New Text Document). Notification icons from instant messaging or email programs have also been added. EuroLinux Desktop lets you switch day/night themes with a single click on the moon icon in the dock, and allows you to set a schedule for automatic theme switching based on the time of day. Multimedia EuroLinux Desktop supports many media file formats (mp3, mpg, wma, ts, opus, ogg, mp4, flac, aiff, acc, ac3, avi), as well as the open codecs used for the popular mkv (Matroska) video files. Each of these formats can be run in the default Totem/Videos system player. Office Suite EuroLinux Desktop includes the LibreOffice suite of office applications. It includes a word processor, spreadsheet, presentation editor, vector graphics editor, mathematical formula editor and relational database management system. Software EuroLinux Desktop has been integrated with the Flathub repository, providing easy access to more than 2,000 free applications. They can be downloaded from the Software application and installed with a single click. The system also supports applications in AppImage format, the use of which is similar to programs with .exe or .msi extensions. However, in the case of EuroLinux Desktop, the AppImage application is always run from a non-privileged user. The system also allows the use of applications designed for Windows\u00ae, thanks to Steam\u00ae, Lutris or Wine.","title":"EuroLinux 9 Desktop"},{"location":"release-notes/ELD/#eurolinux-9-desktop","text":"EuroLinux Desktop is a novelty in the operating system market. It combines the look and functionality of Windows\u00ae and macOS\u00ae with the reliability and security of a server-based Enterprise Linux distribution.","title":"EuroLinux 9 Desktop"},{"location":"release-notes/ELD/#overview","text":"EuroLinux Desktop is built upon the source code of Red Hat\u00ae Enterprise Linux\u00ae 9. However, it includes a number of changes to the user interface. These primarily concern the system's appearance and usability. GNOME extensions have been used for this purpose. In EuroLinux Desktop, they are pre-configured and available immediately after installation - \"out of the box.\" In addition, the Polish language version of EuroLinux Desktop fills in the gaps in the Polish translations of the extensions and GNOME.","title":"Overview"},{"location":"release-notes/ELD/#appearance-features","text":"In EuroLinux Desktop, there is a translucent dock (taskbar) at the bottom of the screen. It stores icons for favorite applications, notifications and running programs, a button that displays icons for all applications in high magnification, as well as date and time information. It is possible to change the position of the bar to the right, left or top of the desktop, as well as to customize it extensively. The user can customize its height, length, transparency, color, icon spacing and size. The system allows icons to be placed on the desktop as standard, and provides a window maximization and minimization function. EuroLinux Desktop disables the overview mode and the hotcorner function, which displays the preview mode when you hover the mouse over the top left corner of the screen. When you right-click on the wallpaper, additional menu items appear (including New Text Document). Notification icons from instant messaging or email programs have also been added. EuroLinux Desktop lets you switch day/night themes with a single click on the moon icon in the dock, and allows you to set a schedule for automatic theme switching based on the time of day.","title":"Appearance &amp; Features"},{"location":"release-notes/ELD/#multimedia","text":"EuroLinux Desktop supports many media file formats (mp3, mpg, wma, ts, opus, ogg, mp4, flac, aiff, acc, ac3, avi), as well as the open codecs used for the popular mkv (Matroska) video files. Each of these formats can be run in the default Totem/Videos system player.","title":"Multimedia"},{"location":"release-notes/ELD/#office-suite","text":"EuroLinux Desktop includes the LibreOffice suite of office applications. It includes a word processor, spreadsheet, presentation editor, vector graphics editor, mathematical formula editor and relational database management system.","title":"Office Suite"},{"location":"release-notes/ELD/#software","text":"EuroLinux Desktop has been integrated with the Flathub repository, providing easy access to more than 2,000 free applications. They can be downloaded from the Software application and installed with a single click. The system also supports applications in AppImage format, the use of which is similar to programs with .exe or .msi extensions. However, in the case of EuroLinux Desktop, the AppImage application is always run from a non-privileged user. The system also allows the use of applications designed for Windows\u00ae, thanks to Steam\u00ae, Lutris or Wine.","title":"Software"}]}